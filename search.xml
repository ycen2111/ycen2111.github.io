<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>FPGA程序复现</title>
      <link href="/Conway%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/FPGA%E7%A8%8B%E5%BA%8F%E5%A4%8D%E7%8E%B0-f0be0c573f35/"/>
      <url>/Conway%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/FPGA%E7%A8%8B%E5%BA%8F%E5%A4%8D%E7%8E%B0-f0be0c573f35/</url>
      
        <content type="html"><![CDATA[<p>使用Verilog实现Conway生命游戏逻辑并使用VGA和鼠标显示并控制<br>基于BASYS3板，Vivado 2015.2版本开发<br>logbook过程记录</p><span id="more"></span><h1 id="总览"><a href="#总览" class="headerlink" title="总览"></a>总览</h1><p>自2023/05/06 - 06/08，历时一个月。由于准备不足加其他事情耽搁，导致多花了很多时间。<br>如果没有反复推翻原有设计重新编写逻辑，应该可以在半个月内完成</p><p>最终本项目可以允许用户使用Ps2鼠标左键添加新的cell，右键删去cell，中键拖动画布<br>可通过VGA显示画布上cell信息，以60Hz刷新<br>FPGA上的上下键可以放大/缩小画布，左右键增加/减少画布大小，并通过左边第二个switch选择调整的是x轴或y轴<br>画布的行/列数量会在7-segments上显示<br>推动左边第三个switch可以开始/暂停运行，最左边switch可以用来reset整个系统<br><img src="/Conway%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/FPGA%E7%A8%8B%E5%BA%8F%E5%A4%8D%E7%8E%B0-f0be0c573f35/001.png" alt="001.png"></p><p>系统可以在VGA显示下最大1024*512大小画布以60Hz运行，如果不用VGA显示理论上可达到3051.76Hz（100MHz CLK）<br>但相对应的，LUT占用也达到了50%左右</p><p>总系统参数传递如下：<br><img src="/Conway%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/FPGA%E7%A8%8B%E5%BA%8F%E5%A4%8D%E7%8E%B0-f0be0c573f35/002.png" alt="002.png"></p><p>github代码：(<a href="https://github.com/ycen2111/life_game/tree/master/Verilog/LifeGame.srcs">https://github.com/ycen2111/life_game/tree/master/Verilog/LifeGame.srcs</a>)</p><h1 id="2023-05-06-废弃"><a href="#2023-05-06-废弃" class="headerlink" title="2023/05/06 (废弃)"></a>2023/05/06 (废弃)</h1><ol><li>设计了核心逻辑Core_logic.v并配套testbench文件，可测试reset，enter，output，和正常运行功能。</li><li>已通过behavior simulation</li></ol><p>Core_logic.v：<br>BIT_NUM: 长宽值的比特数，如长宽均为4，比特数为2</p><table><thead><tr><th align="left">port name</th><th align="left">type</th><th align="left">bits</th><th align="left">comment</th></tr></thead><tbody><tr><td align="left">clk</td><td align="left">input</td><td align="left">1</td><td align="left">clock cycle</td></tr><tr><td align="left">reset</td><td align="left">input</td><td align="left">1</td><td align="left">rset signal</td></tr><tr><td align="left">enter</td><td align="left">input</td><td align="left">1</td><td align="left">input new board figure</td></tr><tr><td align="left">board_in</td><td align="left">input</td><td align="left">2<strong>BIT_NUM</strong>2</td><td align="left">new board figure</td></tr><tr><td align="left">board_out</td><td align="left">output</td><td align="left">2<strong>BIT_NUM</strong>2</td><td align="left">simulated board output</td></tr></tbody></table><h2 id="内部变量："><a href="#内部变量：" class="headerlink" title="内部变量："></a>内部变量：</h2><p>SIZE_SQUARE = |2<strong>BIT_NUM</strong>2<br>board[SIZE_SQUARE - 1:0] 为当前需要处理的图像，输出为board_out<br>next_board[SIZE_SQUARE - 1:0] 为board处理的下一次需要处理图像<br>past_board[SIZE_SQUARE - 1:0] 为保存的上一次图像，主要为neighbors判断下一次状态做准备<br>[3:0] neighbors [SIZE_SQUARE - 1:0] 为判断好的每个格子周围活着的cell数量，会在下一个cycle判断并存在next_board</p><h2 id="主逻辑："><a href="#主逻辑：" class="headerlink" title="主逻辑："></a>主逻辑：</h2><p>for循环遍历所有元素，判断是否为最上下左右，和四个角的位置，分9种不同的状态分析，存储在neighbors中<br>在下个个cycle根据neighbors中的值和past_board判断next_board<br>每个cycle都会将next_board赋值给board<br>如果为reset或enter，将其他值赋给board</p><p><img src="/Conway%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/FPGA%E7%A8%8B%E5%BA%8F%E5%A4%8D%E7%8E%B0-f0be0c573f35/0506_01.png" alt="0506_01.png"><br><img src="/Conway%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/FPGA%E7%A8%8B%E5%BA%8F%E5%A4%8D%E7%8E%B0-f0be0c573f35/0506_02.png" alt="0506_02.png"><br>注：I/O过高是因为所有board_in，board_out直接输入导致</p><h1 id="2023-05-08-废弃"><a href="#2023-05-08-废弃" class="headerlink" title="2023/05/08 (废弃)"></a>2023/05/08 (废弃)</h1><ol><li>新增分频模块</li><li>为core_logic增加pipeline分析 (core_logic_v1.v)</li></ol><h2 id="新增模块"><a href="#新增模块" class="headerlink" title="新增模块"></a>新增模块</h2><p>最普通偶分频程序，输入系统clk输出分频lk</p><h2 id="新发现问题"><a href="#新发现问题" class="headerlink" title="新发现问题"></a>新发现问题</h2><p>虽然可以综合16X16网格逻辑，但无法综合更大的逻辑（LUT占有率超100%）</p><h3 id="改进方法"><a href="#改进方法" class="headerlink" title="改进方法"></a>改进方法</h3><p>增加pipeline分析，每个posedge只会计算一行网格，在所有网格计算完成后输出finish信号并将next_board赋予board输出</p><h3 id="改进结果"><a href="#改进结果" class="headerlink" title="改进结果"></a>改进结果</h3><p>允许最多256X256网格分析（port最多允许10000000 bits array）并顺利综合<br>同时注意for循环不能将结束循环的值设置太大，即使像for(i=500; i=500+10; i=i+1)也会报错因为程序会认为循环数太多</p><p><img src="/Conway%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/FPGA%E7%A8%8B%E5%BA%8F%E5%A4%8D%E7%8E%B0-f0be0c573f35/0508_01.png" alt="0508_01.png"><br><img src="/Conway%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/FPGA%E7%A8%8B%E5%BA%8F%E5%A4%8D%E7%8E%B0-f0be0c573f35/0508_02.png" alt="0508_02.png"></p><h1 id="2023-05-17-废弃"><a href="#2023-05-17-废弃" class="headerlink" title="2023/05/17 (废弃)"></a>2023/05/17 (废弃)</h1><p>考试结束继续开发<br>复盘了之前的逻辑，发现大量的LUT浪费在判断neighbor数量的重复逻辑上，我们不需要如此快的运算效率<br>因此打算重写主逻辑，使用pipline来降低效率，同时增加可处理的数据数量</p><ol><li>覆写游戏核心逻辑，以支持pipline结构</li><li>配置对应TB，确保综合结果有效</li><li>整个module都使用parameter管理常量，方便之后变动</li></ol><h2 id="逻辑解释"><a href="#逻辑解释" class="headerlink" title="逻辑解释"></a>逻辑解释</h2><p>module名：Find_neighbors<br>假设同时处理N<em>N个数据，<br>input：cell_in (N+2)</em>(N+2) //1-D 数组，左上角数据为最低位<br>output：cell_out N*N</p><p>程序会接收需要处理的N<em>N marix和额外围绕在这个matrix外一圈的数据，统一得到核心N</em>N元素的neighbor数量<br>如果一个核心N*N元素已经是角落和边上的数据，在它之外的数据会直接当0输入 (归一化)</p><h2 id="数据轨迹"><a href="#数据轨迹" class="headerlink" title="数据轨迹"></a>数据轨迹</h2><p>input -&gt; cell_in -&gt; neighbors -&gt; new_cell -&gt; output</p><p>从cell_in -&gt; neighbors和neighbors -&gt; new_cell都为时序逻辑，所以需要2 cycles来得到对应的数据</p><h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><p>输入：cell_in = 25’b0000001110011100111000000;<br><img src="/Conway%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/FPGA%E7%A8%8B%E5%BA%8F%E5%A4%8D%E7%8E%B0-f0be0c573f35/0517_01.png" alt="0517_01.png"><br><img src="/Conway%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/FPGA%E7%A8%8B%E5%BA%8F%E5%A4%8D%E7%8E%B0-f0be0c573f35/0517_02.png" alt="0517_02.png"></p><h1 id="2023-05-18-废弃"><a href="#2023-05-18-废弃" class="headerlink" title="2023/05/18 (废弃)"></a>2023/05/18 (废弃)</h1><ol><li>继续编写Find_neighbors配套上层调用逻辑</li><li>使用FSM控制整体逻辑</li><li>编写配套TB，确认综合可用</li></ol><h2 id="核心逻辑"><a href="#核心逻辑" class="headerlink" title="核心逻辑"></a>核心逻辑</h2><p>module名：Logic_manager<br>input：enter信号，当前matrix需要的ROW，COLUMN，新输入的点的row_in，column_in值<br>output：未定，暂时输出cell_out</p><p>curr_cell,next_cell[][]：主要存储各cell状态的2-D数组</p><h3 id="FSM状态："><a href="#FSM状态：" class="headerlink" title="FSM状态："></a>FSM状态：</h3><ol><li><p>IDLE：初始化状态，如果收到RESET就会回归此处。初始化next_cell。如enter为1则转ENTER，否则转OVERWRITE</p></li><li><p>ENTER：更新个别cell状态。如果enter为1则将next_cell[row_in][column_in]赋值为1，否则转OVERWRITE</p></li><li><p>OVERWRITE：将next_cell的值赋给curr_cell。由于是2-D matrix所以要很久。之后可以根据空闲资源加快此效率。完成后转RUNNIGN_1</p></li><li><p>RUNNING_1：管理Find_neighbors pipline的前两个状态。对Find_neighbors的控制分三步进行：<br> 第一步，只有input没用output，此步有2 cycles<br> 第二部，同时有input和output，此步持续到所有data全部输入<br> 第三步，只有output没用input，此步有2 cycles</p><p> RUNNING_1管理所有输入并标记可以输出的时间点。举个3<em>3核心数据（5</em>5总数据）例子：</p><table><thead><tr><th align="left">0</th><th align="left">1</th><th align="left">2</th><th align="left">3</th><th align="left">4</th></tr></thead><tbody><tr><td align="left">5</td><td align="left">6</td><td align="left">7</td><td align="left">8</td><td align="left">9</td></tr><tr><td align="left">10</td><td align="left">11</td><td align="left">12</td><td align="left">13</td><td align="left">14</td></tr><tr><td align="left">15</td><td align="left">16</td><td align="left">17</td><td align="left">18</td><td align="left">19</td></tr><tr><td align="left">20</td><td align="left">21</td><td align="left">22</td><td align="left">23</td><td align="left">24</td></tr></tbody></table><p> 如果每次输入Find_neighbors数据是4*4数据，第一次会输入0到18这个正方形内数据，下一个cycle输入1-19正方形数据（因为这是最少的完全包含核心数据的方法），之后类推是5-23，6-24数据。</p></li><li><p>RUNNING_2: 管理Find_neighbors pipline的最后一个状态，接收所有数据后转回OVERWRITE</p></li></ol><h2 id="未完成目标"><a href="#未完成目标" class="headerlink" title="未完成目标"></a>未完成目标</h2><ol><li>暂停功能，即把程序在完成一次运算后暂停的能力</li><li>在开始运算后还能不经过RESET enter新数据的能力</li><li>LUT占用超出预期，需要调整</li></ol><h2 id="结果-1"><a href="#结果-1" class="headerlink" title="结果"></a>结果</h2><p>此处的X为未使用的占位内存，可以在大小需求不大时节省运算资源<br><img src="/Conway%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/FPGA%E7%A8%8B%E5%BA%8F%E5%A4%8D%E7%8E%B0-f0be0c573f35/0518_01.png" alt="0518_01.png"><br>过高的LUT，问题出在generate block赋值不严谨，需再次调整<br><img src="/Conway%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/FPGA%E7%A8%8B%E5%BA%8F%E5%A4%8D%E7%8E%B0-f0be0c573f35/0518_02.png" alt="0518_02.png"></p><h1 id="2023-05-19"><a href="#2023-05-19" class="headerlink" title="2023/05/19"></a>2023/05/19</h1><ol><li>理解VGA端口工作原理与设置</li><li>规划VGA数据传输方式</li></ol><h2 id="VGA原理"><a href="#VGA原理" class="headerlink" title="VGA原理"></a>VGA原理</h2><p>VGA主要还是sweep的方式逐行逐帧更新屏幕</p><table><thead><tr><th align="left">端口</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">CLK</td><td align="left">时序信号</td></tr><tr><td align="left">HS</td><td align="left">水平信号，可以粗粗理解为列的enable</td></tr><tr><td align="left">VS</td><td align="left">垂直信号，可以粗粗理解为行的enable</td></tr><tr><td align="left">R[7:0]</td><td align="left">红色，VGA端口为相应的模拟信号，下面同理</td></tr><tr><td align="left">G[7:0]</td><td align="left">绿色</td></tr><tr><td align="left">B[7:0]</td><td align="left">蓝色</td></tr></tbody></table><p>总体来说，当HS和VS给出信号后，VGA会自己读取相应时间下对应的颜色，并输出到屏幕上。<br>VGA会逐行读取，直到完成一帧<br><img src="/Conway%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/FPGA%E7%A8%8B%E5%BA%8F%E5%A4%8D%E7%8E%B0-f0be0c573f35/0519_01.png" alt="0519_01.png"><br>已上图来说，HS在96 cycles后会变高电平，VS在2 cycles后变为高电平，<br>但只有在HS和VS都在有效显示范围内，才会读取当时的颜色并输出<br>如，HS=96+48， VS=2+33时才会按当时输出的RGB颜色输出第一个点</p><h2 id="传输规划"><a href="#传输规划" class="headerlink" title="传输规划"></a>传输规划</h2><ol><li>由于在真正VGA输出前有一段空闲时间，可以利用这段时间更新显示内容</li><li>所以可以初步计划在VGA显示的时候计算下一步的cell，并在上一帧更新完之后再将新的图像信息输入VGA</li><li>这个项目不会用到太多颜色，应该双色就可以解决。所以显存或许可以定为480X640数组，如果需要多种颜色就之后再说</li><li>并且由于显示器最大也只有480X640像素，总画布（cell数）不可能太大，导致1-D数组也可以完美记录所有数据，所以计划还是Logic_manager内cell变换为1-D数组，这又会加快运行效率（不必考虑2-D数组复杂的赋值）</li></ol><p>总之，昨天有一部分又白写了，早知道先看这一块了 :(</p><h1 id="2023-05-22"><a href="#2023-05-22" class="headerlink" title="2023/05/22"></a>2023/05/22</h1><p>又出问题了，昨天新写的代母估计又要修改<br>先说问题，大概率cell的数据需要存到memory内，否则LUT占比巨大（仅 32X32 cell 就占了57% LUT）</p><ol><li>改进了原逻辑下的FSM流程</li><li>综合后分析波形并订正冲突</li><li>分析LUT占比过高原因</li><li>测试了memory和LUT记录数据后综合的结果</li></ol><h2 id="原逻辑改进"><a href="#原逻辑改进" class="headerlink" title="原逻辑改进"></a>原逻辑改进</h2><p>主要是更改了RUNNING_1的三步状态，删除了原记录pipline步数的变量，改为左移一个array<br>如：最开始为一个2bits array：[1:0] mark, 初始化为2’b00。如果有输入find_beighbors就赋值mark[0] = 1，并在下cycle一开始左移一位<br>如果mark内有位数为1则说明find_neighbors还在运算，否则说明运算完成</p><p>这个方法可以稍微节省一点点资源（但可读性大大下降 （尴尬））</p><h2 id="综合冲突"><a href="#综合冲突" class="headerlink" title="综合冲突"></a>综合冲突</h2><p>将RTL综合后发现输出cell为X，反推逻辑发现是赋值造成的问题。curr_cell在default内是非阻塞赋值，FSM内是阻塞赋值导致冲突。前后统一后问题解决<br>此问题原因是更改逻辑时未完全更改所有变量。之后应该尝试使用search，可以此类错误出现概率会小些</p><p>同时发现LUT占比更加夸张，如果还保持16X16 find_neighbors会达到256% LUT占用。<br>查看schemetic发现基本LUT消耗在curr_cell上，此问题涉及数据存储的原理</p><h2 id="数据设置与类型"><a href="#数据设置与类型" class="headerlink" title="数据设置与类型"></a>数据设置与类型</h2><p>verilog中可以用两种方法设置array：</p><ol><li>[5 : 0] array</li><li>[0 : 0] array [5 : 0]</li></ol><p>以上两种存储数据大小相同，区别在1.是直接存在LUT内，2.存在memory（BRAM）内。<br>1可以很方便的对所有数据统一处理，但问题在如果array巨大（如 4000+），那么会消耗海量资源（密密麻麻全是赋值比对的）。<br>2可以共用一套逻辑，但问题在覆写数据麻烦，需要一个个赋值</p><p>下面是分别用两种方法读取或写入数据的综合对比</p><h3 id="5-0-array"><a href="#5-0-array" class="headerlink" title="[5 : 0] array"></a>[5 : 0] array</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">module Cell_mem<span class="comment">#(</span></span><br><span class="line">    parameter MAX_ROW_BITS = 5, //512</span><br><span class="line">    parameter MAX_COLUMN_BITS = 5, //512</span><br><span class="line">    parameter MAX_ROW = 2 ** MAX_ROW_BITS,</span><br><span class="line">    parameter MAX_COLUMN = 2 ** MAX_COLUMN_BITS</span><br><span class="line">    )(</span><br><span class="line">    input CLK,</span><br><span class="line">    input RESET,</span><br><span class="line">    input W_enable,</span><br><span class="line">    input [MAX_ROW_BITS + MAX_COLUMN_BITS - 1 : 0] address_in,</span><br><span class="line">    input data_in,</span><br><span class="line">    input [MAX_ROW_BITS + MAX_COLUMN_BITS - 1 : 0] address_out,</span><br><span class="line">    output reg data_out</span><br><span class="line">    );</span><br><span class="line">    </span><br><span class="line">    reg [MAX_ROW * MAX_COLUMN - 1 : 0] Mem_1;</span><br><span class="line">    </span><br><span class="line">    always @(posedge CLK) begin</span><br><span class="line">        <span class="keyword">if</span> (W_enable)</span><br><span class="line">            Mem_1[address_in] &lt;= data_in;</span><br><span class="line">    end</span><br><span class="line">    </span><br><span class="line">    always @(posedge CLK) begin</span><br><span class="line">        data_out &lt;= Mem_1[address_out];</span><br><span class="line">    end</span><br><span class="line">    </span><br><span class="line">endmodule</span><br></pre></td></tr></table></figure><p><img src="/Conway%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/FPGA%E7%A8%8B%E5%BA%8F%E5%A4%8D%E7%8E%B0-f0be0c573f35/0522_03.png" alt="0522_03.png"><br><img src="/Conway%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/FPGA%E7%A8%8B%E5%BA%8F%E5%A4%8D%E7%8E%B0-f0be0c573f35/0522_04.png" alt="0522_04.png"></p><h3 id="0-0-array-5-0"><a href="#0-0-array-5-0" class="headerlink" title="[0 : 0] array [5 : 0]"></a>[0 : 0] array [5 : 0]</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">odule Cell_mem<span class="comment">#(</span></span><br><span class="line">    parameter MAX_ROW_BITS = 5, //512</span><br><span class="line">    parameter MAX_COLUMN_BITS = 5, //512</span><br><span class="line">    parameter MAX_ROW = 2 ** MAX_ROW_BITS,</span><br><span class="line">    parameter MAX_COLUMN = 2 ** MAX_COLUMN_BITS</span><br><span class="line">    )(</span><br><span class="line">    input CLK,</span><br><span class="line">    input RESET,</span><br><span class="line">    input W_enable,</span><br><span class="line">    input [MAX_ROW_BITS + MAX_COLUMN_BITS - 1 : 0] address_in,</span><br><span class="line">    input data_in,</span><br><span class="line">    input [MAX_ROW_BITS + MAX_COLUMN_BITS - 1 : 0] address_out,</span><br><span class="line">    output reg data_out</span><br><span class="line">    );</span><br><span class="line">    </span><br><span class="line">    reg [0:0] Mem [MAX_ROW * MAX_COLUMN - 1 : 0];</span><br><span class="line">    </span><br><span class="line">    always @(posedge CLK) begin</span><br><span class="line">        <span class="keyword">if</span> (W_enable)</span><br><span class="line">            Mem[address_in] &lt;= data_in;</span><br><span class="line">    end</span><br><span class="line">    </span><br><span class="line">    always @(posedge CLK) begin</span><br><span class="line">        data_out &lt;= Mem[address_out];</span><br><span class="line">    end</span><br><span class="line">    </span><br><span class="line">endmodule</span><br></pre></td></tr></table></figure><p><img src="/Conway%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/FPGA%E7%A8%8B%E5%BA%8F%E5%A4%8D%E7%8E%B0-f0be0c573f35/0522_01.png" alt="0522_01.png"><br><img src="/Conway%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/FPGA%E7%A8%8B%E5%BA%8F%E5%A4%8D%E7%8E%B0-f0be0c573f35/0522_02.png" alt="0522_02.png"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>后一种占用资源明显减少，结构也更简单<br>所以还是要更改find_neighbors驱动</p><p>现在暂时有两个修改方案，1.是memory每一行有8个数据（2-D数组），分别是一个cell周围一圈的neighbor，方便直接计算neighbor数量，但保存的数据会巨大<br>2.是保持原样每行1个数据（就是1-D数组），直接读取所有需要的cell。逻辑会更复杂，但应该更省心</p><h1 id="2023-05-23"><a href="#2023-05-23" class="headerlink" title="2023/05/23"></a>2023/05/23</h1><p>先说结构，最后打算采用16bits为一组的16列sweep读取计算方式<br>如详细编码方式之后编写数据传输时会解释，这里主要记录memory控制方法</p><p>需要注意的是所有memory都会有一个备用存储空间，用来暂时记录下一步matrix会显示的数据</p><ol><li>编写memory读写逻辑</li><li>编写memory driver控制逻辑</li><li>通过testbench并成功综合</li></ol><h2 id="memory读写逻辑"><a href="#memory读写逻辑" class="headerlink" title="memory读写逻辑"></a>memory读写逻辑</h2><p>存储memory：<br>reg [15:0] Mem [2 ** (MAX_ROW_BITS + MAX_COLUMN_BITS - 4) - 1 : 0];<br>每条数据存储16位，因为16bits为memory单block可支持最大bits<br>一共有MAX_ROW*MAX_COLUMN/16条数据</p><table><thead><tr><th align="left">type</th><th align="left">bits</th><th align="left">name</th><th align="left">description</th></tr></thead><tbody><tr><td align="left">input</td><td align="left">1</td><td align="left">CLK</td><td align="left">时钟</td></tr><tr><td align="left">input</td><td align="left">1</td><td align="left">RESET</td><td align="left">复位</td></tr><tr><td align="left">input</td><td align="left">1</td><td align="left">W_enable</td><td align="left">允许写入</td></tr><tr><td align="left">input</td><td align="left">[2 ** (MAX_ROW_BITS + MAX_COLUMN_BITS - 4) - 1 : 0]</td><td align="left">data_in_add</td><td align="left">写入地址</td></tr><tr><td align="left">input</td><td align="left">[15 : 0]</td><td align="left">data_in</td><td align="left">写入数据</td></tr><tr><td align="left">input</td><td align="left">[2 ** (MAX_ROW_BITS + MAX_COLUMN_BITS - 4) - 1 : 0]</td><td align="left">data_out_add</td><td align="left">读出地址</td></tr><tr><td align="left">output</td><td align="left">reg [15 : 0]</td><td align="left">data_out</td><td align="left">读出数据</td></tr></tbody></table><p>如果RESET， Mem会将自己覆写为”Mem.txt”内数据<br>如果W_enable，Mem[data_in_add] 会覆写为 data_in<br>无论何时data_out 都为输出 Mem[data_out_add]</p><h2 id="memory-driver逻辑"><a href="#memory-driver逻辑" class="headerlink" title="memory driver逻辑"></a>memory driver逻辑</h2><p>主要处理两件事，将输入的横纵坐标转化为mem的id，和控制两个memory各自读写权限</p><table><thead><tr><th align="left">type</th><th align="left">bits</th><th align="left">name</th><th align="left">description</th></tr></thead><tbody><tr><td align="left">input</td><td align="left">1</td><td align="left">CLK</td><td align="left">时钟</td></tr><tr><td align="left">input</td><td align="left">1</td><td align="left">RESET</td><td align="left">复位</td></tr><tr><td align="left">input</td><td align="left">1</td><td align="left">W_enable</td><td align="left">允许写入</td></tr><tr><td align="left">input</td><td align="left">1</td><td align="left">finish</td><td align="left">一帧matrix计算完成</td></tr><tr><td align="left">input</td><td align="left">[MAX_ROW_BITS - 1 : 0]</td><td align="left">row_in</td><td align="left">写入数据的行坐标</td></tr><tr><td align="left">input</td><td align="left">[MAX_COLUMN_BITS - 1 : 0]</td><td align="left">column_in</td><td align="left">写入数据的纵坐标</td></tr><tr><td align="left">input</td><td align="left">[15 : 0]</td><td align="left">data_in</td><td align="left">写入数据</td></tr><tr><td align="left">input</td><td align="left">[MAX_ROW_BITS - 1 : 0]</td><td align="left">row_out</td><td align="left">输出数据的行坐标</td></tr><tr><td align="left">input</td><td align="left">[MAX_COLUMN_BITS - 1 : 0]</td><td align="left">column_out</td><td align="left">输出数据的纵坐标</td></tr><tr><td align="left">output</td><td align="left">[15 : 0]</td><td align="left">data_out</td><td align="left">读出数据</td></tr></tbody></table><h3 id="坐标转化"><a href="#坐标转化" class="headerlink" title="坐标转化"></a>坐标转化</h3><p>row_in和column_in会转换为data_in_add传给memory，<br>data_in_add = {column_in[4 +: MAX_ROW_BITS - 4], row_in} //(column/16)*MAX_ROW+row</p><p><img src="/Conway%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/FPGA%E7%A8%8B%E5%BA%8F%E5%A4%8D%E7%8E%B0-f0be0c573f35/0523_01.png" alt="0523_01.png"><br>memory id的摆列如图所示，如row=0，column=1，data_in_add就是1<br>如row=17，column=1，data_in_add就是7</p><h3 id="读写权限sweep"><a href="#读写权限sweep" class="headerlink" title="读写权限sweep"></a>读写权限sweep</h3><p>考虑到每次计算完一帧matrix后需要把整个matrix从temp覆写到real matrix上，对memory来说过于复杂，<br>因此计划实例化两个memory_cell分别交替进行读写操作<br>此步骤由变量switch负责，</p><table><thead><tr><th align="left">switch</th><th align="left">mem_1</th><th align="left">mem_2</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">write</td><td align="left">read</td></tr><tr><td align="left">0</td><td align="left">read</td><td align="left">write</td></tr></tbody></table><p>switch会在检测到finish信号上升沿后变化</p><h2 id="结果-2"><a href="#结果-2" class="headerlink" title="结果"></a>结果</h2><p><img src="/Conway%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/FPGA%E7%A8%8B%E5%BA%8F%E5%A4%8D%E7%8E%B0-f0be0c573f35/0523_02.png" alt="0523_02.png"></p><p>在512X512数据下已经占用32%BRAM，考虑到需要给VGA显存保留空间，在不改变逻辑前提下最大的matrix size可能只能达到512*1024</p><h1 id="2023-05-26"><a href="#2023-05-26" class="headerlink" title="2023/05/26"></a>2023/05/26</h1><ol><li>编写了VGA显存逻辑和支持</li><li>配套鼠标和7-segments显示</li><li>上板子测试通过</li></ol><h2 id="VGA显存逻辑"><a href="#VGA显存逻辑" class="headerlink" title="VGA显存逻辑"></a>VGA显存逻辑</h2><p>VGA显存设计为1024X512大小RAM存储，每次只能保存或读取一bit数据<br>直接通过VGA address存读数据</p><h2 id="VGA-reader逻辑"><a href="#VGA-reader逻辑" class="headerlink" title="VGA reader逻辑"></a>VGA reader逻辑</h2><p>根据05.19内的VGA显示逻辑，控制FPGA在当前时序内读取显存内存储的数据，并输出对应颜色。<br>注意必须在25MHz下设置VGA逻辑，否则会无法显示<br><img src="/Conway%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/FPGA%E7%A8%8B%E5%BA%8F%E5%A4%8D%E7%8E%B0-f0be0c573f35/0526_01.png" alt="0526_01.png"><br>已通过在现存内设置初始值来测试单个点显示功能</p><h2 id="配套鼠标和7-segments"><a href="#配套鼠标和7-segments" class="headerlink" title="配套鼠标和7-segments"></a>配套鼠标和7-segments</h2><p>利用之前microprocessor内轮子，直接嵌套模块<br>将鼠标原本8bits数据输出转换为12bits输出，方便显示480X640像素坐标<br>将原本7-segments的左右各输出x，y坐标，改为只显示x或y坐标，并通过外部控制切换，方便完全显示数据</p><p>暂时设置为鼠标按下时显示鼠标路径，测试模拟VGA数据改变。测试成功</p><h2 id="结果-3"><a href="#结果-3" class="headerlink" title="结果"></a>结果</h2><p>图片忘拍了，之后补上</p><h1 id="2023-05-29"><a href="#2023-05-29" class="headerlink" title="2023/05/29"></a>2023/05/29</h1><p>几天的内容一起补上，实现了VGA显示cell图像，加鼠标控制的逻辑</p><ol><li>实现了VGA显示保存的matrix图像</li><li>可以用上下键控制单个cell大小</li><li>可以用鼠标中键移动画布</li><li>可以用鼠标左键点亮新的cell</li><li>可以用鼠标右键按灭cell</li></ol><h2 id="VGA写入"><a href="#VGA写入" class="headerlink" title="VGA写入"></a>VGA写入</h2><p>因为在每次开始VGA显示前总有一段时间是没用显示的，可以乘此机会写入buffer下一帧VGA的数据<br>但这个间隔时间又不够完全写入（大概只能写入一半的数据），但因为VGA的读取速度远小于写入速度（VGA clk为25Mhz，写入频率为100Mhz）<br>所以可以在上一帧完成显示后开始写入下一帧，直到写入完成<br>在此过程中会出现buffer前面在读取，后面在写入的情况，不过不需要担心<br><img src="/Conway%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/FPGA%E7%A8%8B%E5%BA%8F%E5%A4%8D%E7%8E%B0-f0be0c573f35/0529_01.png" alt="0529_01.png"><br>倒数第二行是写入数据，最后一行是读取数据</p><h2 id="VGA像素生成"><a href="#VGA像素生成" class="headerlink" title="VGA像素生成"></a>VGA像素生成</h2><p>这一块用了pipline方法，每一个clk查询写入一个像素<br>因为查询cell的状态需要一个cycle，所以记得注意相关时序问题</p><p>而从VGA像素转换到cell坐标需要以下数据：</p><ol><li>单个cell长度 cell_length</li><li>最左上角那个点相比（0，0）的偏移像素值 start_row/column_pixcle</li><li>当前扫到的VGA绝对位置 curr_screen_row/column</li></ol><p>当前VGA像素所代表的cell坐标可以计算为：<br>cell_coordinate = (curr_screen_row/column + start_row/column_pixcle) / cell_length</p><p>注：当前鼠标所在像素所代表的cell坐标也可以这么转换</p><h2 id="调整单个cell大小"><a href="#调整单个cell大小" class="headerlink" title="调整单个cell大小"></a>调整单个cell大小</h2><p>FPGA板子上的上下键可以将cell_length左移/右移一位，来更改cell大小</p><p>cell最大为64像素，最小为1像素</p><h2 id="平移画布"><a href="#平移画布" class="headerlink" title="平移画布"></a>平移画布</h2><p>当按下鼠标中键时可以拖动画布<br>这是通过改变start_row/column_pixcle的值实现的</p><p>当鼠标中键按下时，可以以像素级的精度平移画布<br><img src="/Conway%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/FPGA%E7%A8%8B%E5%BA%8F%E5%A4%8D%E7%8E%B0-f0be0c573f35/0529_02.png" alt="0529_02.png"></p><h2 id="增加-消除cell"><a href="#增加-消除cell" class="headerlink" title="增加/消除cell"></a>增加/消除cell</h2><p>按下鼠标左键/右键可以分辨添加/消除cell的颜色</p><p>注意，需要将enter开关关掉才能输入（只有在停止matrix迭代时才能手动变化cell）</p><h2 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h2><p>至此VGA方面的逻辑已基本完成，VGA和cell memory之间的连接也已实现<br>BRAM的利用率已经尽可能调到最大，现在最大可支持1024X512的matrix<br>之后只要把主逻辑的功能进行完善进行<br><img src="/Conway%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/FPGA%E7%A8%8B%E5%BA%8F%E5%A4%8D%E7%8E%B0-f0be0c573f35/0529_03.png" alt="0529_03.png"></p><h1 id="2023-06-08"><a href="#2023-06-08" class="headerlink" title="2023/06/08"></a>2023/06/08</h1><p>这几天完成了所有游戏主逻辑的重构和验证，已可以正常运行游戏</p><ol><li>设计了两种不同的数据读取方式，淘汰了其中一种</li><li>成功连接了memory和游戏逻辑之间的wire</li><li>将上下按键设计为调整画布大小的功能，并在7-segments上显示当前画布大小</li></ol><h2 id="游戏主逻辑大概思路"><a href="#游戏主逻辑大概思路" class="headerlink" title="游戏主逻辑大概思路"></a>游戏主逻辑大概思路</h2><p>主逻辑主要由三块构成，读取数据，计算数据，输出数据<br>在读取数据方面，程序将读取一整列数据，之后再读取下一列。<br>由于采用了pipeline，在大数据量的情况下计算效率接近16 bits/ CLK<br>计算出来后就将数据传输给memory储存</p><p>主逻辑将在等待VGA_writer结束运行后开始，以避免数据memory读取冲突<br>结束后会输出finish信号，来切换两个memory读写状态，并等待下一次运行</p><p>基于memory结构，main_data是以16bits一组的形式读出来的，程序会等前三行数据都读到后才开始第一次计算</p><h2 id="数据计算"><a href="#数据计算" class="headerlink" title="数据计算"></a>数据计算</h2><p>每个clk都会输入3组18bits的数据row_1, row_2, row_3,<br>每组数据都是{1 bit left_neighbor, 16 bits main_data, 1 bit right_neighbor}的结构<br>将会在下一个CLK输出16 bits next_main_data</p><p>例如：<br>row_1: 0 0000000000000000 0<br>row_2: 0 1111111111111111 1<br>row_3: 0 0000000000000001 1</p><p>下一个clk：<br>OUT: 0111111111111110 </p><h2 id="读取数据"><a href="#读取数据" class="headerlink" title="读取数据"></a>读取数据</h2><p>读取的最大问题是读取main_data时很难一起吧left_neighbor，right_neighbor一起读出来</p><h3 id="废弃逻辑"><a href="#废弃逻辑" class="headerlink" title="废弃逻辑"></a>废弃逻辑</h3><p>最开始是计划在memory读取main_data时顺便一起输出左右数据，这样读取数据就可以直接将{1 bit left_neighbor, 16 bits main_data, 1 bit right_neighbor}的结构数据传递给计算模块。<br>这在逻辑层面非常好实现，但问题在巨大的memory_LUT资源占用</p><p><img src="/Conway%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/FPGA%E7%A8%8B%E5%BA%8F%E5%A4%8D%E7%8E%B0-f0be0c573f35/0806_01.png" alt="0806_01.png"></p><p>随废弃</p><h3 id="成功逻辑"><a href="#成功逻辑" class="headerlink" title="成功逻辑"></a>成功逻辑</h3><p>后来计划使用一种比较复杂的逻辑：<br><img src="/Conway%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/FPGA%E7%A8%8B%E5%BA%8F%E5%A4%8D%E7%8E%B0-f0be0c573f35/0806_02.png" alt="0806_02.png"></p><p>Cache会先储存第一组16列数据，结构为{1bit left_neighbor, 16bits main_data}<br>其中第一行和最后一行会保存为0，表示为边界</p><p>之后，temp_cahce会逐行读取下一组16列内的数据，并向上sweep<br>例如，第一个CLK三个temp_cache数据为：<br>0: 0000 0000 0000 0000<br>1: 0000 0000 0000 0001<br>2: 1111 1111 1111 1111<br>下一个CLK就为：<br>0: 0000 0000 0000 0001<br>1: 1111 1111 1111 1111<br>2: 1111 0000 1111 0000<br>其中2中新的数据就是从memory中新读取的数据<br>而原本0中的老数据会替换cache内相应位置的数据，以准备下一次循环的运算</p><p>简而言之，Cache会暂时保存先前一组16列数据，因为当时程序只知道这16列数据的左边邻居是谁(就是保存在Cache最左边的那个bit)，但还没读到右边邻居，所以先将他们保存起来。而当程序读到右边那组16列数据时，他就知道了上一组数据的左边邻居，即temp_cache最左边的那个数。所以可以将数据发送给计算单元，同时把temp_cache(0)那个数保存到Cache内，把之前在cache的那个数的最右边bit当作新加入数的左边邻居，准备进行下一个循环。</p><p>例如，现在我已经直到了Cache前三个数为：<br>1: 0 0000 0000 0000 0000<br>2: 0 0000 0000 0000 1111<br>3: 0 1111 1111 0000 0000</p><p>temp_cahce的值为：<br>1: 0000 0000 0000 0000<br>2: 1111 1111 0000 1111<br>3: 0000 1111 1111 0000</p><p>那么就可以将一组数据发给计算模块：{17bits Cache, 1bits temp_cache[n][0]}<br>row_1: 0 0000000000000000 0<br>row_2: 0 0000000000001111 1<br>row_3: 0 1111111100000000 0</p><p>然后下一个CLK计算模块会输出15bits结果，并交给memory储存</p><h2 id="数据连接"><a href="#数据连接" class="headerlink" title="数据连接"></a>数据连接</h2><p>主要的需要处理数据连接是memory处的数据筛选，<br>因为memory输入读取地址位是由VGA和游戏逻辑模块共享的，<br>因此会有两个signal来控制谁来占用这个共用地址位<br>在VGA_writer工作时，读取地址位只由VGA占用<br>在游戏逻辑模块工作时，读取输入地址只被逻辑模块占用</p><p>其实由于这两个模块是互相运行的，不会实际冲突，这个措施只是相当于再次确认</p><h2 id="结果-4"><a href="#结果-4" class="headerlink" title="结果"></a>结果</h2><p><img src="/Conway%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/FPGA%E7%A8%8B%E5%BA%8F%E5%A4%8D%E7%8E%B0-f0be0c573f35/0806_03.png" alt="0806_03.png"><br>注意：由于Cache一口气储存了最大512X16bits数据，会有巨量LUT占用。这提升了运算效率，但现在看来是超前优化，用处不大</p><p>程序可以正常运行，速度在最大画布（1024X512）下仍可以60Hz运行。如果不需要VGA显示的话甚至可以每秒处理 16X100MHz=1600M个像素点，即在60Hz下最大可运行5163X5163画布大小的矩阵</p><p>同时UI和控制画布大小的方式仍可以改进的人性化一点，但苦于学校项目，只能是后会有期了。</p>]]></content>
      
      
      <categories>
          
          <category> 生命游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> Conway生命游戏 </tag>
            
            <tag> FPGA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AHB</title>
      <link href="/HardWare/AHB-6ab92c81cc80/"/>
      <url>/HardWare/AHB-6ab92c81cc80/</url>
      
        <content type="html"><![CDATA[<p>ARB AHB (Advanced High-performance Bus) 总线协议，结构和控制信号分析。</p><span id="more"></span><h1 id="总体结构"><a href="#总体结构" class="headerlink" title="总体结构"></a>总体结构</h1><p><img src="/HardWare/AHB-6ab92c81cc80/001.png" alt="001.png"><br>AHB主要由Master，Slave，Arbiter，Decoder四部分组成。特点为可以发送连续突发信号，加快传输效率（重点）。<br>AHB为主要的连接各个高性能外设的bus协议。</p><p>Master：主机，可以支持多主机，但只能有一个主机控制总线<br>Slave：从机，通过地址查询，返回成功，失败，和data数据<br>Arbiter：仲裁器，决定那个master可以控制总线。只有单个master可以没有arbiter<br>Decoder：翻译地址信号，选择给对应slave。</p><p><img src="/HardWare/AHB-6ab92c81cc80/002.png" alt="002.png"><br>上图缺少一个从slave回master的由Decoder控制的MUX。</p><p>AHB to APB Bridge可以被看做AHB master向一个slave传输的过程，APB通常会处理一些低速任务，像IIC，interrupt，GPIO等</p><p><img src="/HardWare/AHB-6ab92c81cc80/003.png" alt="003.png"></p><h1 id="Master主要信号"><a href="#Master主要信号" class="headerlink" title="Master主要信号"></a>Master主要信号</h1><p><img src="/HardWare/AHB-6ab92c81cc80/004.png" alt="004.png"></p><table><thead><tr><th align="left">信号</th><th align="left">源信号</th><th align="left">长度</th><th align="left">介绍</th></tr></thead><tbody><tr><td align="left">HCLK</td><td align="left">CLK</td><td align="left">1</td><td align="left">时钟信号</td></tr><tr><td align="left">HRESETn</td><td align="left">RESET</td><td align="left">1</td><td align="left">复位信号</td></tr><tr><td align="left">HADDR[31:0]</td><td align="left">output</td><td align="left">32</td><td align="left">输出地址信号</td></tr><tr><td align="left">HWRITE</td><td align="left">output</td><td align="left">1</td><td align="left">1表示master写入了data，0表示没写data</td></tr><tr><td align="left">HTRANS[1:0]</td><td align="left">output</td><td align="left">2</td><td align="left">传输的类型，00为IDLE，无信号传输需求，01为BUSY，表示在突发传输时空闲下一个周期（00和01必须要slaver马上返回一个okay信号），10为NONSEQ，表示开始突发或非突发传输，11为SEQ，为剩余的突发传输</td></tr><tr><td align="left">HSIZE</td><td align="left">output</td><td align="left">3</td><td align="left">每次传输的数据量</td></tr><tr><td align="left">HBURST[2:0]</td><td align="left">output</td><td align="left">3</td><td align="left">控制传输类型，如单一传输，回环突发，增量突发，多少长度等</td></tr><tr><td align="left">HPROT[3:0]</td><td align="left">output</td><td align="left">4</td><td align="left">保护slave信号，一般不使用（非cache时），可设置为0011挂空</td></tr><tr><td align="left">HWDATA[31:0]</td><td align="left">output</td><td align="left">32</td><td align="left">写数据</td></tr><tr><td align="left">HRDATA[31:0]</td><td align="left">slave</td><td align="left">32</td><td align="left">读数据</td></tr><tr><td align="left">HSEL</td><td align="left">decoder</td><td align="left">x</td><td align="left">选择目标slave信号（MUX）</td></tr><tr><td align="left">HREADY</td><td align="left">slave</td><td align="left">1</td><td align="left">为1时表示完成传输，如果为0则将此信号多打一拍</td></tr><tr><td align="left">HRESP</td><td align="left">slave</td><td align="left">2</td><td align="left">slave状态，如error，okay，retry（将重启传输，HREADY必须低电平），split等</td></tr></tbody></table><h1 id="Arbiter信号"><a href="#Arbiter信号" class="headerlink" title="Arbiter信号"></a>Arbiter信号</h1><p><img src="/HardWare/AHB-6ab92c81cc80/005.png" alt="005.png"></p><table><thead><tr><th align="left">信号</th><th align="left">源信号</th><th align="left">长度</th><th align="left">介绍</th></tr></thead><tbody><tr><td align="left">HGRANTx</td><td align="left">output</td><td align="left">1</td><td align="left">为0时master不允许访问总线</td></tr><tr><td align="left">HBUSREQx</td><td align="left">master</td><td align="left">1</td><td align="left">传给arbiter，传递是哪个master</td></tr><tr><td align="left">HLOCkx</td><td align="left">master</td><td align="left">1</td><td align="left">霸占bus使用权</td></tr><tr><td align="left">HMASTERx</td><td align="left">output</td><td align="left">n</td><td align="left">指出哪个master占用bus</td></tr><tr><td align="left">HMASTLOCK</td><td align="left">output</td><td align="left">1</td><td align="left">指示正在被占位传输</td></tr></tbody></table><h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><p><img src="/HardWare/AHB-6ab92c81cc80/006.png" alt="006.png"><br>T3之前为一次传输，T3之后为一次传输，之前为half-word 2byte，之后为full-word 4 byte，增量突发。<br>T4-T5 HREADY为低，所以delay了一拍<br><img src="/HardWare/AHB-6ab92c81cc80/007.png" alt="007.png"><br>当RETRY信号发出后，如果HEADY为低，将会重复当前传输<br><img src="/HardWare/AHB-6ab92c81cc80/008.png" alt="008.png"><br>ARBITER判决示例</p>]]></content>
      
      
      <categories>
          
          <category> Hardware </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hardware </tag>
            
            <tag> Logic gate </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Whistle</title>
      <link href="/Whistle/Whistle-f18989c288a3/"/>
      <url>/Whistle/Whistle-f18989c288a3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>爱尔兰哨笛曲谱，多为C调和D调，附音乐文件<br>主要曲谱来源：熊猫哨笛馆</p><span id="more"></span><h1 id="入门曲"><a href="#入门曲" class="headerlink" title="入门曲"></a>入门曲</h1><h2 id="Scarborough-Fair"><a href="#Scarborough-Fair" class="headerlink" title="Scarborough Fair"></a>Scarborough Fair</h2>        <div id="aplayer-KkeBDGcT" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-KkeBDGcT"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "Scarborough Fair",              author: "by 孩老师",              url: "ScarboroughFair.mp3",              pic: "",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><p><img src="/Whistle/Whistle-f18989c288a3/ScarboroughFair.png" alt="ScarboroughFair.png"></p><h2 id="Down-by-the-Sally-Garden"><a href="#Down-by-the-Sally-Garden" class="headerlink" title="Down by the Sally Garden"></a>Down by the Sally Garden</h2>        <div id="aplayer-sUEscxDT" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-sUEscxDT"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "Down by the Sally Garden",              author: "by 孩老师",              url: "DownbytheSallyGarden.mp3",              pic: "",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><p><img src="/Whistle/Whistle-f18989c288a3/DownbytheSallyGarden.png" alt="DownbytheSallyGarden.png"></p><h2 id="Level-Plain"><a href="#Level-Plain" class="headerlink" title="Level Plain"></a>Level Plain</h2>        <div id="aplayer-DcqFggSI" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-DcqFggSI"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "Level Plain",              author: "by Magh Seola",              url: "LevelPlain.mp3",              pic: "",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><p><img src="/Whistle/Whistle-f18989c288a3/LevelPlain.png" alt="LevelPlain.png"></p><h1 id="动画游戏插曲"><a href="#动画游戏插曲" class="headerlink" title="动画游戏插曲"></a>动画游戏插曲</h1><h2 id="Always-With-Me"><a href="#Always-With-Me" class="headerlink" title="Always With Me"></a>Always With Me</h2>        <div id="aplayer-GCvRNbXr" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-GCvRNbXr"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "Always With Me",              author: "from Spirited Away",              url: "SpiritedAway.mp3",              pic: "",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><p><img src="/Whistle/Whistle-f18989c288a3/SpiritedAway.png" alt="SpiritedAway.png"></p><h2 id="Carrying-You"><a href="#Carrying-You" class="headerlink" title="Carrying You"></a>Carrying You</h2>        <div id="aplayer-zXTekDsD" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-zXTekDsD"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "Carrying You",              author: "from The City Castle",              url: "CarryingYou.mp3",              pic: "",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><p><img src="/Whistle/Whistle-f18989c288a3/CarryingYou.png" alt="CarryingYou.png"></p><h2 id="Mebh’s-Tune"><a href="#Mebh’s-Tune" class="headerlink" title="Mebh’s Tune"></a>Mebh’s Tune</h2>        <div id="aplayer-twFiqupi" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-twFiqupi"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "Mebh's Tune",              author: "from Wolf Walkers",              url: "MebhsTune.mp3",              pic: "",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><p><img src="/Whistle/Whistle-f18989c288a3/MebhsTune.png" alt="MebhsTune.png"></p><h2 id="Honetown-Wind"><a href="#Honetown-Wind" class="headerlink" title="Honetown Wind"></a>Honetown Wind</h2>        <div id="aplayer-eHghhCuz" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-eHghhCuz"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "Honetown Wind",              author: "from Arknights",              url: "HometownWind.mp3",              pic: "",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><p><img src="/Whistle/Whistle-f18989c288a3/HometownWind-1.png" alt="HometownWind-1.png"><br><img src="/Whistle/Whistle-f18989c288a3/HometownWind-2.png" alt="HometownWind-2.png"></p><h1 id="经典曲"><a href="#经典曲" class="headerlink" title="经典曲"></a>经典曲</h1><h2 id="O-son-doar"><a href="#O-son-doar" class="headerlink" title="O son doar"></a>O son doar</h2>        <div id="aplayer-OClkBxXt" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-OClkBxXt"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "O son doar",              author: "by Cynthia1844",              url: "Osondoar.mp3",              pic: "",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><p><img src="/Whistle/Whistle-f18989c288a3/Osondoar.png" alt="Osondoar.png"></p><h2 id="Merry-Christmas-Mr-Lawrence"><a href="#Merry-Christmas-Mr-Lawrence" class="headerlink" title="Merry Christmas Mr Lawrence"></a>Merry Christmas Mr Lawrence</h2>        <div id="aplayer-kzxrZXBt" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-kzxrZXBt"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "Merry Christmas Mr Lawrence",              author: "by Ryuichi Sakamoto",              url: "MerryChristmasMr.mp3",              pic: "",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><p><img src="/Whistle/Whistle-f18989c288a3/MerryChristmasMr-1.png" alt="MerryChristmasMr-1.png"><br><img src="/Whistle/Whistle-f18989c288a3/MerryChristmasMr-2.png" alt="MerryChristmasMr-2.png"></p><h2 id="My-Heart-Will-Go-On"><a href="#My-Heart-Will-Go-On" class="headerlink" title="My Heart Will Go On"></a>My Heart Will Go On</h2>        <div id="aplayer-flUSlpSb" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-flUSlpSb"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "My Heart Will Go On",              author: "from TITANIC",              url: "MyHeartWillGoOn.mp3",              pic: "",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><p><img src="/Whistle/Whistle-f18989c288a3/MyHeartWillGoOn.png" alt="MyHeartWillGoOn.png"></p><h1 id="好听"><a href="#好听" class="headerlink" title="好听"></a>好听</h1><h2 id="Cuchulainn"><a href="#Cuchulainn" class="headerlink" title="Cuchulainn"></a>Cuchulainn</h2>        <div id="aplayer-sZlOCrGl" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-sZlOCrGl"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "Cuchulainn",              author: "from Ron Korb",              url: "Cuchulainn.mp3",              pic: "",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><p><img src="/Whistle/Whistle-f18989c288a3/Cuchulainn.png" alt="Cuchulainn.png"></p><h2 id="Caravan"><a href="#Caravan" class="headerlink" title="Caravan"></a>Caravan</h2>        <div id="aplayer-ysXihIeh" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-ysXihIeh"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "Caravan",              author: "-",              url: "Caravan.mp3",              pic: "",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><p><img src="/Whistle/Whistle-f18989c288a3/Caravan.png" alt="Caravan.png"></p><h2 id="Forest-Of-Ancient"><a href="#Forest-Of-Ancient" class="headerlink" title="Forest Of Ancient"></a>Forest Of Ancient</h2>        <div id="aplayer-FFbcjnxM" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-FFbcjnxM"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "Forest Of Ancient",              author: "-",              url: "ForestOftheAncient.mp3",              pic: "",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><p><img src="/Whistle/Whistle-f18989c288a3/ForestOftheAncient-1.png" alt="ForestOftheAncient-1.png"><br><img src="/Whistle/Whistle-f18989c288a3/ForestOftheAncient-2.png" alt="ForestOftheAncient-2.png"><br><img src="/Whistle/Whistle-f18989c288a3/ForestOftheAncient-3.png" alt="ForestOftheAncient-3.png"><br><img src="/Whistle/Whistle-f18989c288a3/ForestOftheAncient-4.png" alt="ForestOftheAncient-4.png"></p><h2 id="Zoltraak"><a href="#Zoltraak" class="headerlink" title="Zoltraak"></a>Zoltraak</h2>        <div id="aplayer-QIBpMpXG" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-QIBpMpXG"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "Zoltraak",              author: "from FRIENREN",              url: "Zoltraak.mp3",              pic: "",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><p><img src="/Whistle/Whistle-f18989c288a3/Zoltraak-1.png" alt="Zoltraak-1.png"><br><img src="/Whistle/Whistle-f18989c288a3/Zoltraak-2.png" alt="Zoltraak-2.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Whistle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RISC V green card</title>
      <link href="/2022-2023/RISC-V-green-card-d1b1771d8486/"/>
      <url>/2022-2023/RISC-V-green-card-d1b1771d8486/</url>
      
        <content type="html"><![CDATA[<p><a href="https://pipirima.top/2022-2023/RISC-V-green-card-d1b1771d8486/riscvcard.pdf">https://pipirima.top/2022-2023/RISC-V-green-card-d1b1771d8486/riscvcard.pdf</a></p><span id="more"></span><div class="pdf-container" data-target="riscvcard.pdf" data-height="500px"></div>]]></content>
      
      
      <categories>
          
          <category> PDF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hardware </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Digital System Design</title>
      <link href="/2022-2023/Digital-System-Design-7de9ec85c611/"/>
      <url>/2022-2023/Digital-System-Design-7de9ec85c611/</url>
      
        <content type="html"><![CDATA[<p>RISC-V datasheet: (<a href="https://pipirima.top/2022-2023/RISC-V-green-card-d1b1771d8486/riscvcard.pdf">https://pipirima.top/2022-2023/RISC-V-green-card-d1b1771d8486/riscvcard.pdf</a>)</p><span id="more"></span><h1 id="Architecture"><a href="#Architecture" class="headerlink" title="Architecture"></a>Architecture</h1><p>Von Neumann:<br>normally programe code and memory are saved in same RAM, hence only one bus will be used and translate programe and memory together<br><img src="/2022-2023/Digital-System-Design-7de9ec85c611/Von_Neumann.png" alt="Von_Neumann.png"></p><p>Harvard:<br>seperate programe and memeory apart, can use multiple bus groups<br><img src="/2022-2023/Digital-System-Design-7de9ec85c611/Harvard.png" alt="Harvard.png"></p><p>Modified harvard:<br>merge two bus groups (memory and instruction) into one, but still save memory and programe into different structure<br><img src="/2022-2023/Digital-System-Design-7de9ec85c611/modified_harvard.png" alt="modified_harvard.png"></p><h1 id="Clock-time-calculation"><a href="#Clock-time-calculation" class="headerlink" title="Clock time calculation"></a>Clock time calculation</h1><p><img src="/2022-2023/Digital-System-Design-7de9ec85c611/101.png" alt="101.png"><br>• Clock period (clock cycle time)<br>• Clock frequency (Clock Rate) = 1/Clock period<br>• Clock Cycle Time = 1/Clock rate<br>• CPU Time = Clock Cycles * Clock Cycle Time<br>• Clock Cycles = Instruction Count * Cycles per Instruction (CPI)<br>note: final clock cycles is their sum result if there have multiple IC and CPI</p><p>• MIPS = Clock Rate / (CPI * 10e6)</p><h1 id="Risc-V-code"><a href="#Risc-V-code" class="headerlink" title="Risc V code"></a>Risc V code</h1><h2 id="Basic-synax"><a href="#Basic-synax" class="headerlink" title="Basic synax"></a>Basic synax</h2><p><img src="/2022-2023/Digital-System-Design-7de9ec85c611/201.png" alt="201.png"><br><img src="/2022-2023/Digital-System-Design-7de9ec85c611/202.png" alt="202.png"></p><p>note: most of instructions are based on signed number</p><table><thead><tr><th align="left">Name</th><th align="left">Descripetion</th></tr></thead><tbody><tr><td align="left">opcode</td><td align="left">operation code</td></tr><tr><td align="left">rd</td><td align="left">destination register number</td></tr><tr><td align="left">funct3</td><td align="left">3-bit function code (additional opcode)</td></tr><tr><td align="left">rs1</td><td align="left">the first source register number</td></tr><tr><td align="left">rs2</td><td align="left">the second source register number</td></tr><tr><td align="left">funct7</td><td align="left">7-bit function code (additional opcode)</td></tr></tbody></table><p>RISC-V (RV32) has a 32 × 32-bit register file in Little Endian<br>32-bit data is called a “word” in RV32<br>normally we can use temporaries registers freely<br>|register|usage|<br>|:—-|:—-|<br>|x0|the constant value 0|<br>|x1|return address|<br>|x2|stack pointer|<br>|x3|global pointer|<br>|x4|thread pointer|<br>|x5 – x7, x28 – x31|temporaries|<br>|x8|frame pointer|<br>|x9, x18 – x27|saved registers|<br>|x10 – x11|function arguments/results|<br>|x12 – x17|function arguments|</p><h2 id="R-type"><a href="#R-type" class="headerlink" title="R type"></a>R type</h2><p>add x9,x20,x21</p><table><thead><tr><th align="left">funct7</th><th align="left">rs2</th><th align="left">rs1</th><th align="left">funct3</th><th align="left">rd</th><th align="left">opcode</th></tr></thead><tbody><tr><td align="left">0</td><td align="left">21</td><td align="left">20</td><td align="left">0</td><td align="left">9</td><td align="left">51</td></tr><tr><td align="left">7 bit</td><td align="left">5 bit</td><td align="left">5 bit</td><td align="left">3 bit</td><td align="left">5 bit</td><td align="left">7 bit</td></tr><tr><td align="left">000 0000</td><td align="left">1 0101</td><td align="left">1 0100</td><td align="left">000</td><td align="left">0 1001</td><td align="left">011 0011</td></tr></tbody></table><h2 id="I-type"><a href="#I-type" class="headerlink" title="I type"></a>I type</h2><p>lw x9,32(x22) -&gt; load X9 by the data from x22[8] //32 byte/4 = 8 words</p><table><thead><tr><th align="left">immediate</th><th align="left">rs1</th><th align="left">funct3</th><th align="left">rd</th><th align="left">opcode</th></tr></thead><tbody><tr><td align="left">32</td><td align="left">22</td><td align="left">2</td><td align="left">9</td><td align="left">3</td></tr><tr><td align="left">12 bit</td><td align="left">5 bit</td><td align="left">3 bit</td><td align="left">5 bit</td><td align="left">7 bit</td></tr><tr><td align="left">0000 0010 0000</td><td align="left">1 0110</td><td align="left">010</td><td align="left">0 1001</td><td align="left">000 0011</td></tr></tbody></table><h2 id="S-type"><a href="#S-type" class="headerlink" title="S type"></a>S type</h2><p>sw x9,32(x22) -&gt; save x9’s data into x22[8]</p><table><thead><tr><th align="left">imm[11:5]</th><th align="left">rs2</th><th align="left">rs1</th><th align="left">funct3</th><th align="left">imm[4:0]</th><th align="left">opcode</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">9</td><td align="left">22</td><td align="left">2</td><td align="left">0</td><td align="left">23</td></tr><tr><td align="left">7 bit</td><td align="left">5 bit</td><td align="left">5 bit</td><td align="left">3 bit</td><td align="left">5 bit</td><td align="left">7 bit</td></tr><tr><td align="left">000 0001</td><td align="left">0 1001</td><td align="left">1 0110</td><td align="left">010</td><td align="left">0 0000</td><td align="left">001 0111</td></tr></tbody></table><p>imm=32=0000 0010 0000</p><h2 id="U-type"><a href="#U-type" class="headerlink" title="U type"></a>U type</h2><p>lui x19, 976 </p><table><thead><tr><th align="left">Immediate [31:12]</th><th align="left">rd</th><th align="left">opcode</th></tr></thead><tbody><tr><td align="left">976</td><td align="left">19</td><td align="left">55</td></tr><tr><td align="left">20 bit</td><td align="left">5 bit</td><td align="left">7 bit</td></tr><tr><td align="left">0000 0000 0011 1101 0000</td><td align="left">1 0011</td><td align="left">011 0111</td></tr></tbody></table><p>note: U type can read upeer 20 bits from register, if some data is in total 32 bits</p><h2 id="SB-type"><a href="#SB-type" class="headerlink" title="SB type"></a>SB type</h2><p>bne x10, x11, 2000</p><table><thead><tr><th align="left">Imm [12]</th><th align="left">Imm [10:5]</th><th align="left">rs2</th><th align="left">rs1</th><th align="left">funct3</th><th align="left">Imm [4:1]</th><th align="left">Imm [11]</th><th align="left">opcode</th></tr></thead><tbody><tr><td align="left">0</td><td align="left">62</td><td align="left">11</td><td align="left">10</td><td align="left">1</td><td align="left">8</td><td align="left">0</td><td align="left">51</td></tr><tr><td align="left">1 bit</td><td align="left">6 bit</td><td align="left">5 bit</td><td align="left">5 bit</td><td align="left">3 bit</td><td align="left">4 bit</td><td align="left">1 bit</td><td align="left">7 bit</td></tr><tr><td align="left">0</td><td align="left">11 1110</td><td align="left">0 1011</td><td align="left">0 1010</td><td align="left">001</td><td align="left">1000</td><td align="left">0</td><td align="left">110 0011</td></tr></tbody></table><p>imm=2000=0111 1101 0000</p><p>Target address = PC + immediate<br>eg. if this code is in address X20, new jumped add=20+2000=x2020</p><h2 id="UJ-type"><a href="#UJ-type" class="headerlink" title="UJ type"></a>UJ type</h2><p>jal x1, 2000</p><table><thead><tr><th align="left">Imm [20]</th><th align="left">Imm [10:1]</th><th align="left">Imm [11]</th><th align="left">Imm [19:12]</th><th align="left">rd</th><th align="left">opcode</th></tr></thead><tbody><tr><td align="left">0</td><td align="left">62</td><td align="left">0</td><td align="left">0</td><td align="left">1</td><td align="left">111</td></tr><tr><td align="left">1 bit</td><td align="left">10 bit</td><td align="left">1 bit</td><td align="left">8 bit</td><td align="left">4 bit</td><td align="left">7 bit</td></tr><tr><td align="left">0</td><td align="left">11 1110 1000</td><td align="left">0</td><td align="left">0000 0000</td><td align="left">0 0001</td><td align="left">110 1111</td></tr></tbody></table><p>imm=2000=0111 1101 0000</p><h2 id="basic-srchitecture-structure"><a href="#basic-srchitecture-structure" class="headerlink" title="basic srchitecture structure"></a>basic srchitecture structure</h2><ol><li>load data from memory to register</li><li>save result from register to memory<br>Registers are faster to access than memory</li></ol><p><img src="/2022-2023/Digital-System-Design-7de9ec85c611/203.png" alt="203.png"><br>each operation will only part of these terminals<br><img src="/2022-2023/Digital-System-Design-7de9ec85c611/204.png" alt="204.png"><br><img src="/2022-2023/Digital-System-Design-7de9ec85c611/205.png" alt="205.png"><br><img src="/2022-2023/Digital-System-Design-7de9ec85c611/206.png" alt="206.png"></p><p><img src="/2022-2023/Digital-System-Design-7de9ec85c611/207.png" alt="207.png"><br>Zero in ALU is result of comparation</p><table><thead><tr><th align="left">instruction</th><th align="left">Branch</th><th align="left">MemRead</th><th align="left">MemtoReg</th><th align="left">ALUOp</th><th align="left">MemWrite</th><th align="left">ALUSrc</th><th align="left">RegWrite</th></tr></thead><tbody><tr><td align="left">R_type</td><td align="left">0</td><td align="left">0</td><td align="left">0</td><td align="left">10</td><td align="left">0</td><td align="left">0</td><td align="left">1</td></tr><tr><td align="left">load</td><td align="left">0</td><td align="left">1</td><td align="left">1</td><td align="left">10</td><td align="left">0</td><td align="left">1</td><td align="left">0</td></tr><tr><td align="left">save</td><td align="left">0</td><td align="left">0</td><td align="left">x</td><td align="left">00</td><td align="left">1</td><td align="left">1</td><td align="left">0</td></tr><tr><td align="left">beq</td><td align="left">1</td><td align="left">0</td><td align="left">x</td><td align="left">01</td><td align="left">0</td><td align="left">0</td><td align="left">0</td></tr></tbody></table><h2 id="pseudoinstruction"><a href="#pseudoinstruction" class="headerlink" title="pseudoinstruction"></a>pseudoinstruction</h2><table><thead><tr><th align="left">name</th><th align="left">format</th><th align="left">description</th><th align="left">used instruction</th></tr></thead><tbody><tr><td align="left">mv</td><td align="left">mv rd, rs</td><td align="left">R[rd] = R[rs]</td><td align="left">addi</td></tr><tr><td align="left">li</td><td align="left">li rd, immed</td><td align="left">R[rd] = immed</td><td align="left">addi</td></tr><tr><td align="left">la</td><td align="left">la rd, addr</td><td align="left">R[rd] = addr</td><td align="left">auipc</td></tr><tr><td align="left">neg</td><td align="left">neg rd,rs</td><td align="left">R[rd]=-R[rs]</td><td align="left">sub</td></tr><tr><td align="left">not</td><td align="left">not rd, rs</td><td align="left">R[rd]=~R[rs]</td><td align="left">xori</td></tr></tbody></table><h2 id="pipeline"><a href="#pipeline" class="headerlink" title="pipeline"></a>pipeline</h2><p>pipeline can increase programe ratio<br>RISC-V can use upper 5 levels:</p><table><thead><tr><th align="left">step</th><th align="left">name</th><th align="left">descreption</th><th align="left">time</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">IF</td><td align="left">Instruction fetch from memory</td><td align="left">200ps</td></tr><tr><td align="left">2</td><td align="left">ID</td><td align="left">Instruction decode &amp; register read</td><td align="left">100ps</td></tr><tr><td align="left">3</td><td align="left">EX</td><td align="left">Execute operation or calculate address</td><td align="left">200ps</td></tr><tr><td align="left">4</td><td align="left">MEM</td><td align="left">Access memory operand</td><td align="left">200ps</td></tr><tr><td align="left">5</td><td align="left">WB</td><td align="left">Write result back to register</td><td align="left">100ps</td></tr></tbody></table><p><img src="/2022-2023/Digital-System-Design-7de9ec85c611/208.png" alt="208.png"><br><img src="/2022-2023/Digital-System-Design-7de9ec85c611/211.png" alt="211.png"></p><p>Data Harzard:<br>An instruction depends on completion of data access by a previous instruction<br>Load-Use Data Hazard:<br><img src="/2022-2023/Digital-System-Design-7de9ec85c611/209.png" alt="209.png"></p><p>Please note that instructions following a branch require a 1-step interval to wait for the result of the branch.<br>but we can predict the result, and correct it immediate if not right<br><img src="/2022-2023/Digital-System-Design-7de9ec85c611/210.png" alt="210.png"></p><h2 id="CISC-and-RISC"><a href="#CISC-and-RISC" class="headerlink" title="CISC and RISC"></a>CISC and RISC</h2><table><thead><tr><th align="left">RISC</th><th align="left">CISC</th></tr></thead><tbody><tr><td align="left">Reduced Instruction Set Architecture</td><td align="left">Complex Instruction Set Architecture</td></tr><tr><td align="left">low cycles per instruction</td><td align="left">hign cycles per instruction</td></tr><tr><td align="left">Simpler instruction</td><td align="left">Complex instruction</td></tr><tr><td align="left">Fewer Data types</td><td align="left">More Data types</td></tr><tr><td align="left">Pipline canbe achieved</td><td align="left">/</td></tr></tbody></table><h1 id="memory"><a href="#memory" class="headerlink" title="memory"></a>memory</h1><table><thead><tr><th align="left">device</th><th align="left">response time</th><th align="left">cost</th></tr></thead><tbody><tr><td align="left">Static RAM</td><td align="left">0.5ns – 2.5ns</td><td align="left">$500 – $1000 per GiB</td></tr><tr><td align="left">Dynamic RAM (DRAM)</td><td align="left">50ns – 70ns</td><td align="left">$3 – $6 per GiB</td></tr><tr><td align="left">Flash SSD</td><td align="left">5 µs - 50 µs</td><td align="left">$0.06 – $0.12 per GiB</td></tr><tr><td align="left">Magnetic disk</td><td align="left">5ms – 20ms</td><td align="left">$0.20 – $2 per GiB</td></tr></tbody></table><p>normally SRAM and DRAM are used in memory,<br>SSD and disk are used in storage</p><p>Binary Notation:<br><img src="/2022-2023/Digital-System-Design-7de9ec85c611/301.png" alt="301.png"></p><h2 id="Locality"><a href="#Locality" class="headerlink" title="Locality"></a>Locality</h2><p>Temporal locality:Items accessed recently are likely to be accessed again soon<br>Spatial locality: Items near those accessed recently are likely to be accessed soon</p><p>result:<br>Memory hierarchy<br>Store everything on disk<br>Copy recently accessed (and nearby) items from disk/DRAM to smaller DRAM/more smaller DRAM memory</p><h2 id="cache"><a href="#cache" class="headerlink" title="cache"></a>cache</h2><p>The level/s of the memory hierarchy closest to the CPU</p><p>Direct Mapped Cache:<br><img src="/2022-2023/Digital-System-Design-7de9ec85c611/302.png" alt="302.png"></p><p>binary address = {Tag, Index}</p><p><img src="/2022-2023/Digital-System-Design-7de9ec85c611/303.png" alt="303.png"><br>if the address is already saved, Hit/Miss will be hit. otherwise will be miss<br>hit will be marked only when both tag and index are fit</p><p><img src="/2022-2023/Digital-System-Design-7de9ec85c611/304.png" alt="304.png"><br><img src="/2022-2023/Digital-System-Design-7de9ec85c611/306.png" alt="306.png"><br>index: determine which line<br>Tag:   determine whether has saved<br>Block offset: determine which word in this address<br><img src="/2022-2023/Digital-System-Design-7de9ec85c611/305.png" alt="305.png"></p><p>Very large blocks mean fewer blocks in cache and an increased miss rate<br>Large blocks also increase the miss penalty of retrieving the block from the next level<br><img src="/2022-2023/Digital-System-Design-7de9ec85c611/307.png" alt="307.png"></p><p><img src="/2022-2023/Digital-System-Design-7de9ec85c611/308.png" alt="308.png"></p><h2 id="cache-performance"><a href="#cache-performance" class="headerlink" title="cache performance"></a>cache performance</h2><p><img src="/2022-2023/Digital-System-Design-7de9ec85c611/309.png" alt="309.png"></p><p><img src="/2022-2023/Digital-System-Design-7de9ec85c611/310.png" alt="310.png"></p><h2 id="Average-memory-access-time"><a href="#Average-memory-access-time" class="headerlink" title="Average memory access time"></a>Average memory access time</h2><p>AMAT = Hit time + Miss rate × Miss penalty<br><img src="/2022-2023/Digital-System-Design-7de9ec85c611/311.png" alt="311.png"></p><h2 id="n-set-Associativity"><a href="#n-set-Associativity" class="headerlink" title="n-set Associativity"></a>n-set Associativity</h2><p>Higher associativity reduces miss rate<br>Increases complexity, cost, and access time</p><h3 id="4-block-caches"><a href="#4-block-caches" class="headerlink" title="4-block caches:"></a>4-block caches:</h3><p>Index = (Block address) % (number of entries)<br>like: 8 % 4 = 0<br>      6 % 4 = 2<br>hence mem[8,0] saved in index 0,<br>      mem[6] saved in index 2.</p><p>read data inorder 8, 0, 8, 6, 8:<br><img src="/2022-2023/Digital-System-Design-7de9ec85c611/312.png" alt="312.png"></p><h3 id="2-way-set-associative"><a href="#2-way-set-associative" class="headerlink" title="2-way set associative:"></a>2-way set associative:</h3><p>Index = (Block address) % (number of entries)</p><p>read data in order of : 8, 0, 8, 6, 8:<br><img src="/2022-2023/Digital-System-Design-7de9ec85c611/313.png" alt="313.png"></p><p>note: if a new data want be saved in a full set(like in row 4), the last-used data will be removed(mem[0] is remained)</p><h3 id="Fully-associative-8-way"><a href="#Fully-associative-8-way" class="headerlink" title="Fully associative (8-way):"></a>Fully associative (8-way):</h3><p>Blocks can go anywhere</p><p>read data in order of : 8, 0, 8, 6, 8:<br><img src="/2022-2023/Digital-System-Design-7de9ec85c611/314.png" alt="314.png"></p><h2 id="address-bit-allocation"><a href="#address-bit-allocation" class="headerlink" title="address bit allocation"></a>address bit allocation</h2><p><img src="/2022-2023/Digital-System-Design-7de9ec85c611/315.png" alt="315.png"><br>Block size is defined by the offset bits<br>blocks/lines is defined by index</p><p>If we have a directly mapped cache of size 1 KiB with block size of 4 words, 32 bits address</p><p>each block has 4 word * 4 bytes = 16 bytes, block offset is 4 bits<br>total block number = 1kiB/16bytes = 64 blocks per set, index is 6 bits<br>the tag is 32 - 4 - 6 = 22 bits</p><p>if we have a 4-way set associative instruction cache,<br>total block number = 1kiB/(16bytes * 4) = 16 blocks per set, index is 4 bits</p><p>Block_size = word_number * 4 bytes<br>block_number = cache_size / block_size<br>index_number = block_number / n_way</p><p><img src="/2022-2023/Digital-System-Design-7de9ec85c611/316.png" alt="316.png"></p><table><thead><tr><th align="left"></th><th align="left">miss rate</th><th align="left">hit time</th><th align="left">miss penalty</th></tr></thead><tbody><tr><td align="left">associativity of a cache is increased</td><td align="left">Decreased</td><td align="left">Increased</td><td align="left">No expected change</td></tr><tr><td align="left">block size of a cache is decreased</td><td align="left">Increased</td><td align="left">No expected change</td><td align="left">Decreased</td></tr></tbody></table><h1 id="virtual-memory"><a href="#virtual-memory" class="headerlink" title="virtual memory"></a>virtual memory</h1><p>Each gets a private virtual address space holding its frequently used code and data and Protected from other programs</p><p>VM “block” is called a page<br>VM translation “miss” is called a page fault<br><img src="/2022-2023/Digital-System-Design-7de9ec85c611/401.png" alt="401.png"></p><p>Translation Using a Page Table:<br><img src="/2022-2023/Digital-System-Design-7de9ec85c611/402.png" alt="402.png"><br>if valid is 1, data is saved in physical memory<br>if valid is 0, data is saved in disk</p><p>Translation Look-aside Buffer (TLB)<br>the last visited entry block will be replace with new data</p><p>if new tag is miss in TLB: TLB MISS<br>if new tag exist in page table: PT HIT<br>if new tag in page table is only in disk: PAGE FAULT</p><h1 id="parallel"><a href="#parallel" class="headerlink" title="parallel"></a>parallel</h1><h2 id="Multiple-Issue"><a href="#Multiple-Issue" class="headerlink" title="Multiple Issue"></a>Multiple Issue</h2><p>Static Multiple Issue: Group of instructions that can be issued on a single cycle<br><img src="/2022-2023/Digital-System-Design-7de9ec85c611/501.png" alt="501.png"><br>One ALU/branch instruction, One load/store instruction run together<br><img src="/2022-2023/Digital-System-Design-7de9ec85c611/502.png" alt="502.png"><br><img src="/2022-2023/Digital-System-Design-7de9ec85c611/503.png" alt="503.png"></p><p>Dynamic Multiple Issue: Allow the CPU to execute instructions out of order to avoid stalls<br><img src="/2022-2023/Digital-System-Design-7de9ec85c611/504.png" alt="504.png"></p><h2 id="speed-up"><a href="#speed-up" class="headerlink" title="speed up"></a>speed up</h2><p>T1 = time to run with one worker<br>TP = time to run with P workers<br>T1/TP = speedup (Ideal case is linear speedup with P)<br>T1/(P*TP) = efficiency (Ideal case is efficiency is 1)</p><h2 id="Amdahl’s-Law"><a href="#Amdahl’s-Law" class="headerlink" title="Amdahl’s Law"></a>Amdahl’s Law</h2><p>Tsequential + Tparallel/P ≤ TP<br><img src="/2022-2023/Digital-System-Design-7de9ec85c611/505.png" alt="505.png"></p><p>if 100 processors, 90× speedup<br><img src="/2022-2023/Digital-System-Design-7de9ec85c611/506.png" alt="506.png"></p><p>if sum of 10 scalars, and 10×10 matrix sum,<br>Time = (10 + 100) × tadd<br><img src="/2022-2023/Digital-System-Design-7de9ec85c611/507.png" alt="507.png"></p><p>Strong scaling: problem size fixed<br>Weak scaling: problem size proportional to number of processors</p><p>If 100 processor, one processor has 2% load not 1%<br><img src="/2022-2023/Digital-System-Design-7de9ec85c611/508.png" alt="508.png"></p><h2 id="Shared-Memory-Multiprocessors"><a href="#Shared-Memory-Multiprocessors" class="headerlink" title="Shared Memory Multiprocessors"></a>Shared Memory Multiprocessors</h2><p><img src="/2022-2023/Digital-System-Design-7de9ec85c611/509.png" alt="509.png"><br>UMA (uniform) vs. NUMA (nonuniform)<br>if 1 GiB total memory, 40 cycles/word<br>NUMA 2 processors: 512 MiB local memory each, 20 cycles/word to local, 60 cycles/word to remote memory<br>UMA 2 processors: 1 GiB shared memory, 40 cycles/word</p><h2 id="Message-Passing"><a href="#Message-Passing" class="headerlink" title="Message Passing"></a>Message Passing</h2><p><img src="/2022-2023/Digital-System-Design-7de9ec85c611/510.png" alt="510.png"></p><h2 id="Multithreading"><a href="#Multithreading" class="headerlink" title="Multithreading"></a>Multithreading</h2><p>Fine-grain multithreading: If one thread stalls, others are executed<br>Coarse-grain multithreading: Only switch on long stall<br><img src="/2022-2023/Digital-System-Design-7de9ec85c611/511.png" alt="511.png"></p><h2 id="Flynn’s-Taxonomy"><a href="#Flynn’s-Taxonomy" class="headerlink" title="Flynn’s Taxonomy"></a>Flynn’s Taxonomy</h2><p>Single Instruction Single Data (SISD)<br><img src="/2022-2023/Digital-System-Design-7de9ec85c611/512.png" alt="512.png"><br>Single Instruction Multiple Data (SIMD)<br><img src="/2022-2023/Digital-System-Design-7de9ec85c611/513.png" alt="513.png"><br>Multiple Instruction Single Data (MISD)<br><img src="/2022-2023/Digital-System-Design-7de9ec85c611/514.png" alt="514.png"><br>Multiple Instruction Multiple Data (MIMD)<br><img src="/2022-2023/Digital-System-Design-7de9ec85c611/515.png" alt="515.png"></p>]]></content>
      
      
      <categories>
          
          <category> academic material </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2022-2023 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Embedded mobile and Wireless System Code Example</title>
      <link href="/2022-2023/Embedded-mobile-and-Wireless-System-Code-Example-7273817ad39d/"/>
      <url>/2022-2023/Embedded-mobile-and-Wireless-System-Code-Example-7273817ad39d/</url>
      
        <content type="html"><![CDATA[<p>Lecture notes: (<a href="https://pipirima.top/2022-2023/Embedded-mobile-and-Wireless-System-e97c63b4991e">https://pipirima.top/2022-2023/Embedded-mobile-and-Wireless-System-e97c63b4991e</a>)</p><h1 id="Button-click"><a href="#Button-click" class="headerlink" title="Button click"></a>Button click</h1><p>create a page which will collect string in text box. When click the button, a new page with collected string will be generated.</p><h2 id="MainActivity-java"><a href="#MainActivity-java" class="headerlink" title="MainActivity.java"></a>MainActivity.java</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">public class MainActivity extends AppCompatActivity &#123;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    // default init programe</span><br><span class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        super.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static final String EXTRA_MESSAGE=<span class="string">&quot;com.example.myapplication.MESSAGE&quot;</span>;</span><br><span class="line"></span><br><span class="line">    public void sendMessage(View view)&#123;</span><br><span class="line">        Intent intent=new Intent(this,DisplayMessageActivity.class); // create an intent class <span class="built_in">which</span> will communicated with DisplayMessageActivity.class</span><br><span class="line">        EditText editText=(EditText) findViewById(R.id.editTextTextPersonName); // find the EditText object id (target this component)</span><br><span class="line">        String message=editText.getText().toString(); // get written string <span class="keyword">in</span> this EditText </span><br><span class="line">        intent.putExtra(EXTRA_MESSAGE, message); // put the string into EXTRA_MESSAGE. this can be seen as a convenience store place</span><br><span class="line">        startActivity (intent); // running intent, or running the class the intent has (DisplayMessageActivity.class)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="MainActivity-xml"><a href="#MainActivity-xml" class="headerlink" title="MainActivity.xml"></a>MainActivity.xml</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;EditText</span><br><span class="line">    android:id=<span class="string">&quot;@+id/editTextTextPersonName&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">    android:ems=<span class="string">&quot;10&quot;</span></span><br><span class="line"></span><br><span class="line">    android:hint=<span class="string">&quot;@string/edit_message&quot;</span></span><br><span class="line">    android:inputType=<span class="string">&quot;textPersonName&quot;</span></span><br><span class="line">    app:layout_constraintBottom_toBottomOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line"></span><br><span class="line">    app:layout_constraintEnd_toEndOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">    app:layout_constraintHorizontal_bias=<span class="string">&quot;0.079&quot;</span></span><br><span class="line">    app:layout_constraintStart_toStartOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">    app:layout_constraintTop_toTopOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">    app:layout_constraintVertical_bias=<span class="string">&quot;0.023&quot;</span></span><br><span class="line">    tools:ignore=<span class="string">&quot;TouchTargetSizeCheck&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;Button</span><br><span class="line">    android:id=<span class="string">&quot;@+id/button&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line"></span><br><span class="line">    android:onClick=<span class="string">&quot;sendMessage&quot;</span></span><br><span class="line">    android:text=<span class="string">&quot;@string/button_send&quot;</span></span><br><span class="line">    app:layout_constraintBaseline_toBaselineOf=<span class="string">&quot;@+id/editTextTextPersonName&quot;</span></span><br><span class="line">    app:layout_constraintBottom_toBottomOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">    app:layout_constraintEnd_toEndOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">    app:layout_constraintHorizontal_bias=<span class="string">&quot;0.752&quot;</span></span><br><span class="line">    app:layout_constraintStart_toStartOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">    app:layout_constraintTop_toTopOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">    app:layout_constraintVertical_bias=<span class="string">&quot;0.023&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;Spinner</span><br><span class="line">    android:id=<span class="string">&quot;@+id/spinner&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;409dp&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">    tools:ignore=<span class="string">&quot;TouchTargetSizeCheck&quot;</span></span><br><span class="line">    tools:layout_editor_absoluteX=<span class="string">&quot;1dp&quot;</span></span><br><span class="line">    tools:layout_editor_absoluteY=<span class="string">&quot;77dp&quot;</span> /&gt;</span><br></pre></td></tr></table></figure><h2 id="DisplayMessageActivity-java"><a href="#DisplayMessageActivity-java" class="headerlink" title="DisplayMessageActivity.java"></a>DisplayMessageActivity.java</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">public class DisplayMessageActivity extends AppCompatActivity &#123;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        super.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_display_message);</span><br><span class="line"></span><br><span class="line">        Intent intent=getIntent();</span><br><span class="line">        String message=intent.getStringExtra(MainActivity.EXTRA_MESSAGE); // get input string from EXTRA_MESSAGE</span><br><span class="line"></span><br><span class="line">        TextView textView=findViewById(R.id.textView); // find target textView</span><br><span class="line">        textView.setText(message); // input message to textView</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="DisplayMessageActivity-xml"><a href="#DisplayMessageActivity-xml" class="headerlink" title="DisplayMessageActivity.xml"></a>DisplayMessageActivity.xml</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;TextView</span><br><span class="line">    android:id=<span class="string">&quot;@+id/textView&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">    android:layout_marginTop=<span class="string">&quot;16dp&quot;</span></span><br><span class="line">    android:text=<span class="string">&quot;Hello!&quot;</span></span><br><span class="line">    app:layout_constraintEnd_toEndOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">    app:layout_constraintHorizontal_bias=<span class="string">&quot;0.498&quot;</span></span><br><span class="line">    app:layout_constraintStart_toStartOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">    app:layout_constraintTop_toTopOf=<span class="string">&quot;parent&quot;</span> /&gt;</span><br></pre></td></tr></table></figure><h2 id="results"><a href="#results" class="headerlink" title="results:"></a>results:</h2><p><img src="/2022-2023/Embedded-mobile-and-Wireless-System-Code-Example-7273817ad39d/101.png" alt="101.png"><br><img src="/2022-2023/Embedded-mobile-and-Wireless-System-Code-Example-7273817ad39d/102.png" alt="102.png"></p><h1 id="EMF-sensor"><a href="#EMF-sensor" class="headerlink" title="EMF sensor"></a>EMF sensor</h1><p>a gyroscope sensor, will display rotate angles on the screen. Based on SensorEventListener.<br>when sensor’s value changed, the function onSensorChanged will be enabled and read, changem display sensor’s value into 4 TextView boxes</p><h2 id="MainActivity-java-1"><a href="#MainActivity-java-1" class="headerlink" title="MainActivity.java"></a>MainActivity.java</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">public class MainActivity extends AppCompatActivity implements SensorEventListener &#123;</span><br><span class="line"></span><br><span class="line">    private SensorManager mSensorManager; // access to a sensor</span><br><span class="line">    private Sensor mMagneticField; // represent a sensor</span><br><span class="line"></span><br><span class="line">    //Sensor manager guidance: http://developer.android.com/reference/android/hardware/SensorManager.html</span><br><span class="line">    // Sensor guidance: http://developer.android.com/reference/android/hardware/Sensor.html</span><br><span class="line"></span><br><span class="line">    private TextView mag_x;</span><br><span class="line">    private TextView mag_y;</span><br><span class="line">    private TextView mag_z;</span><br><span class="line">    private TextView mag_h;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        super.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        mag_x = (TextView) findViewById(R.id.emf_Xaxis);</span><br><span class="line">        mag_y=(TextView) findViewById(R.id.emf_Yaxis);</span><br><span class="line">        mag_z=(TextView) findViewById(R.id.emf_Zaxis);</span><br><span class="line">        mag_h=(TextView) findViewById(R.id.emf_magnetic_field);</span><br><span class="line"></span><br><span class="line">        //get an instance of sensor manager <span class="keyword">for</span> accessing sensors</span><br><span class="line">        mSensorManager=(SensorManager) getSystemService(Context.SENSOR_SERVICE);</span><br><span class="line">        //determine default sensor <span class="built_in">type</span> ()magnetometer</span><br><span class="line">        mMagneticField=mSensorManager.getDefaultSensor(Sensor.TYPE_MAGNETIC_FIELD);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private double h;</span><br><span class="line">    // called when sensor value have changed</span><br><span class="line">    @Override</span><br><span class="line">    public void onSensorChanged(SensorEvent sensorEvent) &#123;</span><br><span class="line">        h=Math.sqrt(sensorEvent.values[0]*sensorEvent.values[0]+sensorEvent.values[1]*sensorEvent.values[1]+sensorEvent.values[2]*sensorEvent.values[2]);</span><br><span class="line">        mag_x.setText(<span class="string">&quot;mag_Xaxis:&quot;</span>+sensorEvent.values[0]);</span><br><span class="line">        mag_y.setText(<span class="string">&quot;mag_Yaxis:&quot;</span>+sensorEvent.values[1]);</span><br><span class="line">        mag_z.setText(<span class="string">&quot;mag_Zaxis:&quot;</span>+sensorEvent.values[2]);</span><br><span class="line">        mag_h.setText(<span class="string">&quot;magneticField:&quot;</span>+h);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // called when sensor accuracy changed</span><br><span class="line">    @Override</span><br><span class="line">    public void onAccuracyChanged(Sensor sensor, int i) &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void <span class="function"><span class="title">onPause</span></span>() &#123;</span><br><span class="line">        super.onPause();</span><br><span class="line">        mSensorManager.unregisterListener(this);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void <span class="function"><span class="title">onResume</span></span>() &#123;</span><br><span class="line">        super.onResume();</span><br><span class="line">        mSensorManager.registerListener(this,mMagneticField,SensorManager.SENSOR_DELAY_NORMAL);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="MainActivity-xml-1"><a href="#MainActivity-xml-1" class="headerlink" title="MainActivity.xml"></a>MainActivity.xml</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;LinearLayout</span><br><span class="line">    android:layout_width=<span class="string">&quot;332dp&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;565dp&quot;</span></span><br><span class="line">    android:layout_marginStart=<span class="string">&quot;24dp&quot;</span></span><br><span class="line">    android:layout_marginTop=<span class="string">&quot;24dp&quot;</span></span><br><span class="line">    android:layout_marginEnd=<span class="string">&quot;24dp&quot;</span></span><br><span class="line">    android:orientation=<span class="string">&quot;vertical&quot;</span></span><br><span class="line">    app:layout_constraintBottom_toBottomOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">    app:layout_constraintEnd_toEndOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">    app:layout_constraintHorizontal_bias=<span class="string">&quot;0.483&quot;</span></span><br><span class="line">    app:layout_constraintStart_toStartOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">    app:layout_constraintTop_toTopOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">    app:layout_constraintVertical_bias=<span class="string">&quot;0.147&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/emf_Xaxis&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;emf_Xaxis&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/emf_Yaxis&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;emf_Yaxis&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/emf_Zaxis&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;emf_Zaxis&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/emf_magnetic_field&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;emf_Haxis&quot;</span> /&gt;</span><br><span class="line">&lt;/LinearLayout&gt;</span><br></pre></td></tr></table></figure><h2 id="result"><a href="#result" class="headerlink" title="result:"></a>result:</h2><p><img src="/2022-2023/Embedded-mobile-and-Wireless-System-Code-Example-7273817ad39d/103.png" alt="103.png"></p><h2 id="extra-Accelerometer"><a href="#extra-Accelerometer" class="headerlink" title="extra: Accelerometer"></a>extra: Accelerometer</h2><p>The accelerometer with low pass filter, and remove gravity.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">gravity[0]=alpha*gravity[0]+(1-alpha)*sensorEvent.values[0];</span><br><span class="line">gravity[1]=alpha*gravity[1]+(1-alpha)*sensorEvent.values[1];</span><br><span class="line">gravity[2]=alpha*gravity[2]+(1-alpha)*sensorEvent.values[2];</span><br><span class="line"></span><br><span class="line"><span class="built_in">float</span> linear_acceleration [] = new <span class="built_in">float</span>[3];</span><br><span class="line">linear_acceleration[0] = sensorEvent.values[0]-gravity[0];</span><br><span class="line">linear_acceleration[1] = sensorEvent.values[1]-gravity[1];</span><br><span class="line">linear_acceleration[2] = sensorEvent.values[2]-gravity[2];</span><br></pre></td></tr></table></figure><h1 id="Battery-Manager"><a href="#Battery-Manager" class="headerlink" title="Battery Manager"></a>Battery Manager</h1><p>read batteyr states from ‘Intent.ACTION_BATTERY_CHANGED’, and print them out</p><h2 id="MainActivity-java-2"><a href="#MainActivity-java-2" class="headerlink" title="MainActivity.java"></a>MainActivity.java</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line">package com.example.a3power_management;</span><br><span class="line"></span><br><span class="line">import androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line">import android.content.BroadcastReceiver;</span><br><span class="line">import android.content.Context;</span><br><span class="line">import android.content.Intent;</span><br><span class="line">import android.content.IntentFilter;</span><br><span class="line">import android.os.BatteryManager;</span><br><span class="line">import android.os.Bundle;</span><br><span class="line">import android.widget.TextView;</span><br><span class="line"></span><br><span class="line">public class MainActivity extends AppCompatActivity &#123;</span><br><span class="line"></span><br><span class="line">    // IntentFilter is a structured description of Intent values to be matched.</span><br><span class="line">    private IntentFilter ifilter;</span><br><span class="line">    public TextView TV;</span><br><span class="line"></span><br><span class="line">    private int BatteryL; //battery level</span><br><span class="line">    private int BatteryV; //battery voltage</span><br><span class="line">    private double BatteryT; //battery temperature</span><br><span class="line">    private String BatteryTe; //battery technology</span><br><span class="line">    private String BatteryStatus;</span><br><span class="line">    private String BatteryHealth;</span><br><span class="line">    private String BatteryPlugged;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        super.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        ifilter = new IntentFilter(Intent.ACTION_BATTERY_CHANGED); //ifilter have matched with a <span class="built_in">type</span> of action</span><br><span class="line">        registerReceiver(mBatInforReceiver,ifilter); //the receiver will be called when any broadcast matches filter</span><br><span class="line"></span><br><span class="line">        TV=(TextView)findViewById(R.id.TV);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private BroadcastReceiver mBatInforReceiver = new <span class="function"><span class="title">BroadcastReceiver</span></span>() &#123;</span><br><span class="line">        @Override</span><br><span class="line">        public void onReceive(Context context, Intent intent) &#123;</span><br><span class="line">            String action = intent.getAction();</span><br><span class="line">            //Retrieve data from intent</span><br><span class="line">            <span class="keyword">if</span> (Intent.ACTION_BATTERY_CHANGED.equals(action))&#123;</span><br><span class="line">                BatteryL=intent.getIntExtra(<span class="string">&quot;level&quot;</span>,0);</span><br><span class="line">                BatteryV=intent.getIntExtra(<span class="string">&quot;voltage&quot;</span>,0);</span><br><span class="line">                BatteryT=intent.getIntExtra(<span class="string">&quot;temperature&quot;</span>,0);</span><br><span class="line">                BatteryTe=intent.getStringExtra(<span class="string">&quot;technology&quot;</span>);</span><br><span class="line"></span><br><span class="line">                switch (intent.getIntExtra(<span class="string">&quot;status&quot;</span>, BatteryManager.BATTERY_HEALTH_UNKNOWN))&#123;</span><br><span class="line">                    <span class="keyword">case</span> BatteryManager.BATTERY_STATUS_CHARGING:</span><br><span class="line">                        BatteryStatus=<span class="string">&quot;Charging&quot;</span>;</span><br><span class="line">                        <span class="built_in">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> BatteryManager.BATTERY_STATUS_DISCHARGING:</span><br><span class="line">                        BatteryStatus=<span class="string">&quot;Discharging&quot;</span>;</span><br><span class="line">                        <span class="built_in">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> BatteryManager.BATTERY_STATUS_NOT_CHARGING:</span><br><span class="line">                        BatteryStatus=<span class="string">&quot;Not Charging&quot;</span>;</span><br><span class="line">                        <span class="built_in">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> BatteryManager.BATTERY_STATUS_FULL:</span><br><span class="line">                        BatteryStatus=<span class="string">&quot;Fully Charging&quot;</span>;</span><br><span class="line">                        <span class="built_in">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> BatteryManager.BATTERY_STATUS_UNKNOWN:</span><br><span class="line">                        BatteryStatus=<span class="string">&quot;Unknown status&quot;</span>;</span><br><span class="line">                        <span class="built_in">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                switch (intent.getIntExtra(<span class="string">&quot;health&quot;</span>,BatteryManager.BATTERY_STATUS_UNKNOWN))&#123;</span><br><span class="line">                    <span class="keyword">case</span> BatteryManager.BATTERY_HEALTH_UNKNOWN:</span><br><span class="line">                        BatteryHealth=<span class="string">&quot;Unknown Status&quot;</span>;</span><br><span class="line">                        <span class="built_in">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> BatteryManager.BATTERY_HEALTH_GOOD:</span><br><span class="line">                        BatteryHealth=<span class="string">&quot;Good Status&quot;</span>;</span><br><span class="line">                        <span class="built_in">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> BatteryManager.BATTERY_HEALTH_DEAD:</span><br><span class="line">                        BatteryHealth=<span class="string">&quot;Dead Status&quot;</span>;</span><br><span class="line">                        <span class="built_in">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> BatteryManager.BATTERY_HEALTH_OVER_VOLTAGE:</span><br><span class="line">                        BatteryHealth=<span class="string">&quot;Over Status&quot;</span>;</span><br><span class="line">                        <span class="built_in">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> BatteryManager.BATTERY_HEALTH_OVERHEAT:</span><br><span class="line">                        BatteryHealth=<span class="string">&quot;Overheat&quot;</span>;</span><br><span class="line">                        <span class="built_in">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                switch (intent.getIntExtra(<span class="string">&quot;plugged&quot;</span>,0))&#123;</span><br><span class="line">                    <span class="keyword">case</span> BatteryManager.BATTERY_PLUGGED_AC:</span><br><span class="line">                        BatteryPlugged=<span class="string">&quot;Plugged to AC&quot;</span>;</span><br><span class="line">                        <span class="built_in">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> BatteryManager.BATTERY_PLUGGED_USB:</span><br><span class="line">                        BatteryPlugged=<span class="string">&quot;Plugged to USB&quot;</span>;</span><br><span class="line">                        <span class="built_in">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> BatteryManager.BATTERY_PLUGGED_WIRELESS:</span><br><span class="line">                        BatteryPlugged=<span class="string">&quot;Plugged to wireless&quot;</span>;</span><br><span class="line">                        <span class="built_in">break</span>;</span><br><span class="line">                    default:</span><br><span class="line">                        BatteryPlugged=<span class="string">&quot;------&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                TV.setText(<span class="string">&quot;Battery level:&quot;</span>+BatteryL+<span class="string">&quot;%&quot;</span>+<span class="string">&quot;\n\n&quot;</span>+</span><br><span class="line">                        <span class="string">&quot;Battery status:&quot;</span>+BatteryStatus+<span class="string">&quot;\n\n&quot;</span>+</span><br><span class="line">                        <span class="string">&quot;Battery Plugged:&quot;</span>+BatteryPlugged+<span class="string">&quot;\n\n&quot;</span>+</span><br><span class="line">                        <span class="string">&quot;Battery Health:&quot;</span>+BatteryHealth+<span class="string">&quot;\n\n&quot;</span>+</span><br><span class="line">                        <span class="string">&quot;Battery Voltage:&quot;</span>+(BatteryV/1000)+<span class="string">&quot;V&quot;</span>+<span class="string">&quot;\n\n&quot;</span>+</span><br><span class="line">                        <span class="string">&quot;Battery Temperature:&quot;</span>+(BatteryT*0.1)+<span class="string">&quot;℃&quot;</span>+<span class="string">&quot;\n\n&quot;</span>+</span><br><span class="line">                        <span class="string">&quot;Battery Techology:&quot;</span>+BatteryTe);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="MainActivity-xdc"><a href="#MainActivity-xdc" class="headerlink" title="MainActivity.xdc"></a>MainActivity.xdc</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;TextView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/TV&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;TextView&quot;</span></span><br><span class="line">        tools:layout_editor_absoluteX=<span class="string">&quot;35dp&quot;</span></span><br><span class="line">        tools:layout_editor_absoluteY=<span class="string">&quot;48dp&quot;</span> /&gt;</span><br></pre></td></tr></table></figure><h2 id="results-1"><a href="#results-1" class="headerlink" title="results"></a>results</h2><p><img src="/2022-2023/Embedded-mobile-and-Wireless-System-Code-Example-7273817ad39d/201.png" alt="201.png"></p><h1 id="WIFI-scaner"><a href="#WIFI-scaner" class="headerlink" title="WIFI scaner"></a>WIFI scaner</h1><h2 id="Main-java"><a href="#Main-java" class="headerlink" title="Main.java"></a>Main.java</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line">package com.example.a4wi_fi;</span><br><span class="line"></span><br><span class="line">import androidx.appcompat.app.AppCompatActivity;</span><br><span class="line">import androidx.core.app.ActivityCompat;</span><br><span class="line"></span><br><span class="line">import android.Manifest;</span><br><span class="line">import android.content.BroadcastReceiver;</span><br><span class="line">import android.content.Context;</span><br><span class="line">import android.content.Intent;</span><br><span class="line">import android.content.IntentFilter;</span><br><span class="line">import android.content.pm.PackageManager;</span><br><span class="line">import android.net.wifi.ScanResult;</span><br><span class="line">import android.net.wifi.WifiManager;</span><br><span class="line">import android.os.Build;</span><br><span class="line">import android.os.Bundle;</span><br><span class="line">import android.util.Log;</span><br><span class="line">import android.widget.ArrayAdapter;</span><br><span class="line">import android.widget.ListView;</span><br><span class="line">import android.widget.Toast;</span><br><span class="line"></span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">public class MainActivity extends AppCompatActivity &#123;</span><br><span class="line"></span><br><span class="line">    WifiManager wifiManager;</span><br><span class="line">    String wifis[];</span><br><span class="line">    ListView lv;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        super.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        //ask and check permissions</span><br><span class="line">        askWiFiPermissions();</span><br><span class="line"></span><br><span class="line">        lv = (ListView) findViewById(R.id.listView);</span><br><span class="line"></span><br><span class="line">        //provide us an instance WifiManager and allow to access WiFi functionality</span><br><span class="line">        wifiManager = (WifiManager) getApplicationContext().getSystemService(Context.WIFI_SERVICE);</span><br><span class="line"></span><br><span class="line">        //check wifi state and turn it on when disabled</span><br><span class="line">        <span class="keyword">if</span> (wifiManager.getWifiState() == wifiManager.WIFI_STATE_DISABLED) &#123;</span><br><span class="line">            wifiManager.setWifiEnabled(<span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        //can be seens as wifi listerner, listen WifiManager.SCAN_RESULTS_AVAILABLE_ACTION</span><br><span class="line">        registerReceiver(wifiScanReceiver, new IntentFilter(WifiManager.SCAN_RESULTS_AVAILABLE_ACTION));</span><br><span class="line">        Log.v(<span class="string">&quot;wifi&quot;</span>, <span class="string">&quot;wifiManager&quot;</span> + String.valueOf(wifiManager));</span><br><span class="line"></span><br><span class="line">        //star wifi scans</span><br><span class="line">        wifiManager.startScan();</span><br><span class="line">        Toast.makeText(this, <span class="string">&quot;Scanning WIFI ...&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private static final int REQUEST_ID_READ_WRITE_PERMISSION = 99;</span><br><span class="line"></span><br><span class="line">    private void <span class="function"><span class="title">askWiFiPermissions</span></span>() &#123;</span><br><span class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= 23) &#123;</span><br><span class="line">            //check <span class="keyword">if</span> we have <span class="built_in">read</span> or write permission</span><br><span class="line">            int wifiAccessPermission = ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_WIFI_STATE);</span><br><span class="line">            int ChangePermission = ActivityCompat.checkSelfPermission(this, Manifest.permission.CHANGE_WIFI_STATE);</span><br><span class="line">            int findLocationPermission = ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION);</span><br><span class="line">            int coarseLocationPermission = ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (wifiAccessPermission != PackageManager.PERMISSION_GRANTED ||</span><br><span class="line">                    ChangePermission != PackageManager.PERMISSION_GRANTED ||</span><br><span class="line">                    findLocationPermission != PackageManager.PERMISSION_GRANTED ||</span><br><span class="line">                    coarseLocationPermission != PackageManager.PERMISSION_GRANTED) &#123;</span><br><span class="line">                //prompt the user <span class="keyword">if</span> dont have permission</span><br><span class="line">                this.requestPermissions(</span><br><span class="line">                        new String[]&#123;Manifest.permission.ACCESS_WIFI_STATE,</span><br><span class="line">                                Manifest.permission.CHANGE_WIFI_STATE,</span><br><span class="line">                                Manifest.permission.ACCESS_FINE_LOCATION,</span><br><span class="line">                                Manifest.permission.ACCESS_COARSE_LOCATION&#125;,</span><br><span class="line">                        REQUEST_ID_READ_WRITE_PERMISSION</span><br><span class="line">                );</span><br><span class="line">                <span class="built_in">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //When you have the request results</span><br><span class="line">    @Override</span><br><span class="line">    public void onRequestPermissionsResult(int requestCode, String permissions[], int[] grantResults) &#123;</span><br><span class="line">        super.onRequestPermissionsResult(requestCode, permissions, grantResults);</span><br><span class="line">        switch (requestCode) &#123;</span><br><span class="line">            <span class="keyword">case</span> REQUEST_ID_READ_WRITE_PERMISSION: &#123;</span><br><span class="line">                //(<span class="built_in">read</span> and write and camera) permissions granted</span><br><span class="line">                <span class="keyword">if</span> (grantResults.length &gt; 1 &amp;&amp;</span><br><span class="line">                        grantResults[0] == PackageManager.PERMISSION_GRANTED &amp;&amp;</span><br><span class="line">                        grantResults[1] == PackageManager.PERMISSION_GRANTED &amp;&amp;</span><br><span class="line">                        grantResults[2] == PackageManager.PERMISSION_GRANTED &amp;&amp;</span><br><span class="line">                        grantResults[3] == PackageManager.PERMISSION_GRANTED) &#123;</span><br><span class="line">                    Toast.makeText(this, <span class="string">&quot;Permission granted!&quot;</span>, Toast.LENGTH_LONG).show();</span><br><span class="line">                &#125;</span><br><span class="line">                //cancelled or denied</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    Toast.makeText(this, <span class="string">&quot;Permission denied&quot;</span>, Toast.LENGTH_LONG).show();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    BroadcastReceiver wifiScanReceiver = new <span class="function"><span class="title">BroadcastReceiver</span></span>() &#123;</span><br><span class="line">        @Override</span><br><span class="line">        //active when WifiManager.SCAN_RESULTS_AVAILABLE_ACTION enabled</span><br><span class="line">        public void onReceive(Context c, Intent intent) &#123;</span><br><span class="line">            List&lt;ScanResult&gt; wifiScanList = wifiManager.getScanResults();</span><br><span class="line">            unregisterReceiver(this);</span><br><span class="line"></span><br><span class="line">            wifis=new String[wifiScanList.size()];</span><br><span class="line">            Log.e(<span class="string">&quot;WiFi&quot;</span>,String.valueOf(wifiScanList.size()));</span><br><span class="line">            //SSID (name), BSSID (MAC address), level (signal strength (<span class="keyword">in</span> dBm))</span><br><span class="line">            <span class="keyword">for</span>(int i=0;i&lt;wifiScanList.size();i++)&#123;</span><br><span class="line">                wifis[i]=wifiScanList.get(i).SSID+<span class="string">&quot;,&quot;</span>+wifiScanList.get(i).BSSID+<span class="string">&quot;,&quot;</span>+String.valueOf(wifiScanList.get(i).level);</span><br><span class="line">                Log.e(<span class="string">&quot;WiFi&quot;</span>,String.valueOf(wifis[i]));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            //<span class="built_in">set</span> adapter to lv. android.R.layout.simple_list_item_1 isa sort of layout resource</span><br><span class="line">            lv.setAdapter(new ArrayAdapter&lt;String&gt;(getApplicationContext(),android.R.layout.simple_list_item_1,wifis));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    protected void <span class="function"><span class="title">onResume</span></span>()&#123;</span><br><span class="line">        registerReceiver(wifiScanReceiver, new IntentFilter(WifiManager.SCAN_RESULTS_AVAILABLE_ACTION));</span><br><span class="line">        super.onResume();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    protected void <span class="function"><span class="title">onPause</span></span>()&#123;</span><br><span class="line">        unregisterReceiver(wifiScanReceiver);</span><br><span class="line">        super.onPause();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Manifest-xml"><a href="#Manifest-xml" class="headerlink" title="Manifest.xml"></a>Manifest.xml</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;uses-permission android:name=<span class="string">&quot;android.permission.ACCESS_WIFI_STATE&quot;</span> /&gt;</span><br><span class="line">&lt;uses-permission android:name=<span class="string">&quot;android.permission.CHANGE_WIFI_STATE&quot;</span> /&gt;</span><br><span class="line">&lt;uses-permission android:name=<span class="string">&quot;android.permission.ACCESS_COARSE_LOCATION&quot;</span> /&gt;</span><br><span class="line">&lt;uses-permission android:name=<span class="string">&quot;android.permission.ACCESS_FINE_LOCATION&quot;</span> /&gt;</span><br></pre></td></tr></table></figure><h2 id="layout-xml"><a href="#layout-xml" class="headerlink" title="layout.xml"></a>layout.xml</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;ListView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/listView&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;409dp&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;729dp&quot;</span></span><br><span class="line">        tools:layout_editor_absoluteX=<span class="string">&quot;1dp&quot;</span></span><br><span class="line">        tools:layout_editor_absoluteY=<span class="string">&quot;1dp&quot;</span></span><br><span class="line">        tools:ignore=<span class="string">&quot;MissingConstraints&quot;</span> /&gt;</span><br></pre></td></tr></table></figure><h2 id="result-1"><a href="#result-1" class="headerlink" title="result"></a>result</h2><p><img src="/2022-2023/Embedded-mobile-and-Wireless-System-Code-Example-7273817ad39d/301.png" alt="301.png"></p><h1 id="BlueTooth"><a href="#BlueTooth" class="headerlink" title="BlueTooth"></a>BlueTooth</h1><h2 id="Main-java-1"><a href="#Main-java-1" class="headerlink" title="Main.java"></a>Main.java</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line">package com.example.a5blue_tooth;</span><br><span class="line"></span><br><span class="line">import androidx.annotation.NonNull;</span><br><span class="line">import androidx.appcompat.app.AppCompatActivity;</span><br><span class="line">import androidx.core.app.ActivityCompat;</span><br><span class="line"></span><br><span class="line">import android.Manifest;</span><br><span class="line">import android.bluetooth.BluetoothAdapter;</span><br><span class="line">import android.bluetooth.BluetoothDevice;</span><br><span class="line">import android.content.Intent;</span><br><span class="line">import android.content.pm.PackageManager;</span><br><span class="line">import android.os.Build;</span><br><span class="line">import android.os.Bundle;</span><br><span class="line">import android.util.Log;</span><br><span class="line">import android.view.View;</span><br><span class="line">import android.widget.ArrayAdapter;</span><br><span class="line">import android.widget.Button;</span><br><span class="line">import android.widget.ListView;</span><br><span class="line">import android.widget.Toast;</span><br><span class="line"></span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.Set;</span><br><span class="line"></span><br><span class="line">public class MainActivity extends AppCompatActivity &#123;</span><br><span class="line"></span><br><span class="line">    Button on,off,discoverable,device;</span><br><span class="line">    ListView listView;</span><br><span class="line"></span><br><span class="line">    //varibale to hold BluetoothAdapter instance</span><br><span class="line">    private BluetoothAdapter BA;</span><br><span class="line">    //display list of paired Bluetooth device</span><br><span class="line">    private Set&lt;BluetoothDevice&gt; pairedDevices;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        super.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        //check and ask permissions</span><br><span class="line">        askBlueToothPermissions();</span><br><span class="line"></span><br><span class="line">        on = (Button) findViewById(R.id.on);</span><br><span class="line">        off = (Button) findViewById(R.id.off);</span><br><span class="line">        discoverable = (Button) findViewById(R.id.discoverable);</span><br><span class="line">        device = (Button) findViewById(R.id.device);</span><br><span class="line">        listView = (ListView)findViewById(R.id.listView);</span><br><span class="line"></span><br><span class="line">        //Bluetooth init</span><br><span class="line">        BA = BluetoothAdapter.getDefaultAdapter();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private static final int REQUEST_ID_READ_WRITE_PERMISSION = 99;</span><br><span class="line"></span><br><span class="line">    private void <span class="function"><span class="title">askBlueToothPermissions</span></span>()&#123;</span><br><span class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= 23) &#123;</span><br><span class="line">            //check <span class="keyword">if</span> we have <span class="built_in">read</span> or write permission</span><br><span class="line">            int blueToothPermission = ActivityCompat.checkSelfPermission(this, Manifest.permission.BLUETOOTH);</span><br><span class="line">            int blueToothAdminPermission = ActivityCompat.checkSelfPermission(this, Manifest.permission.BLUETOOTH_ADMIN);</span><br><span class="line">            int blueToothAdvertisePermission = ActivityCompat.checkSelfPermission(this, Manifest.permission.BLUETOOTH_ADVERTISE); //requires API level S</span><br><span class="line">            int blueToothConnectPermission = ActivityCompat.checkSelfPermission(this, Manifest.permission.BLUETOOTH_CONNECT);//requires API level S</span><br><span class="line">            int findLocationPermission = ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION);</span><br><span class="line">            int coarseLocationPermission = ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (blueToothPermission != PackageManager.PERMISSION_GRANTED ||</span><br><span class="line">                    blueToothAdminPermission != PackageManager.PERMISSION_GRANTED ||</span><br><span class="line">                    blueToothAdvertisePermission != PackageManager.PERMISSION_GRANTED ||</span><br><span class="line">                    blueToothConnectPermission != PackageManager.PERMISSION_GRANTED ||</span><br><span class="line">                    findLocationPermission != PackageManager.PERMISSION_GRANTED ||</span><br><span class="line">                    coarseLocationPermission != PackageManager.PERMISSION_GRANTED) &#123;</span><br><span class="line">                //prompt the user <span class="keyword">if</span> dont have permission</span><br><span class="line">                this.requestPermissions(</span><br><span class="line">                        new String[]&#123;Manifest.permission.BLUETOOTH,</span><br><span class="line">                                Manifest.permission.BLUETOOTH_ADMIN,</span><br><span class="line">                                Manifest.permission.BLUETOOTH_ADVERTISE,</span><br><span class="line">                                Manifest.permission.BLUETOOTH_CONNECT,</span><br><span class="line">                                Manifest.permission.ACCESS_FINE_LOCATION,</span><br><span class="line">                                Manifest.permission.ACCESS_COARSE_LOCATION&#125;,</span><br><span class="line">                        REQUEST_ID_READ_WRITE_PERMISSION</span><br><span class="line">                );</span><br><span class="line">                <span class="built_in">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) &#123;</span><br><span class="line">        super.onRequestPermissionsResult(requestCode, permissions, grantResults);</span><br><span class="line">        switch (requestCode) &#123;</span><br><span class="line">            <span class="keyword">case</span> REQUEST_ID_READ_WRITE_PERMISSION: &#123;</span><br><span class="line">                //(<span class="built_in">read</span> and write and camera) permissions granted</span><br><span class="line">                <span class="keyword">if</span> (grantResults.length &gt; 1 &amp;&amp;</span><br><span class="line">                        grantResults[0] == PackageManager.PERMISSION_GRANTED &amp;&amp;</span><br><span class="line">                        grantResults[1] == PackageManager.PERMISSION_GRANTED &amp;&amp;</span><br><span class="line">                        grantResults[2] == PackageManager.PERMISSION_GRANTED &amp;&amp;</span><br><span class="line">                        grantResults[3] == PackageManager.PERMISSION_GRANTED &amp;&amp;</span><br><span class="line">                        grantResults[4] == PackageManager.PERMISSION_GRANTED &amp;&amp;</span><br><span class="line">                        grantResults[5] == PackageManager.PERMISSION_GRANTED) &#123;</span><br><span class="line">                    Toast.makeText(this, <span class="string">&quot;Permission granted!&quot;</span>, Toast.LENGTH_LONG).show();</span><br><span class="line">                &#125;</span><br><span class="line">                //cancelled or denied</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    Toast.makeText(this, <span class="string">&quot;Permission denied&quot;</span>, Toast.LENGTH_LONG).show();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void on(View v)&#123;</span><br><span class="line">        <span class="keyword">if</span> (!BA.isEnabled())&#123;</span><br><span class="line">            Intent turnOn = new Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE);</span><br><span class="line">            startActivityForResult(turnOn,0);</span><br><span class="line">            Toast.makeText(getApplicationContext(),<span class="string">&quot;Turned on&quot;</span>,Toast.LENGTH_LONG).show();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            Toast.makeText(getApplicationContext(),<span class="string">&quot;Already on&quot;</span>,Toast.LENGTH_LONG).show();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void off(View v)&#123;</span><br><span class="line">        BA.disable();</span><br><span class="line">        Toast.makeText(getApplicationContext(),<span class="string">&quot;Turned off&quot;</span>,Toast.LENGTH_LONG).show();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //<span class="built_in">let</span> other device can detect phone <span class="keyword">in</span> next several seconds</span><br><span class="line">    public void visible(View v)&#123;</span><br><span class="line">        Intent getVisible = new Intent(BluetoothAdapter.ACTION_REQUEST_DISCOVERABLE);</span><br><span class="line">        startActivityForResult(getVisible,0);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void list(View v) &#123;</span><br><span class="line">        //get list</span><br><span class="line">        pairedDevices = BA.getBondedDevices();</span><br><span class="line">        ArrayList list = new ArrayList();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (BluetoothDevice bt : pairedDevices) &#123;</span><br><span class="line">            list.add(bt.getName() + <span class="string">&quot;,&quot;</span> + bt.getAddress());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Toast.makeText(getApplicationContext(),<span class="string">&quot;Showing Paired Devices&quot;</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line"></span><br><span class="line">        final ArrayAdapter adapter = new ArrayAdapter(this,android.R.layout.simple_list_item_1,list);</span><br><span class="line">        listView.setAdapter(adapter);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Manifest-xml-1"><a href="#Manifest-xml-1" class="headerlink" title="Manifest.xml"></a>Manifest.xml</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;uses-permission android:name=<span class="string">&quot;android.permission.BLUETOOTH&quot;</span>/&gt;</span><br><span class="line">&lt;uses-permission android:name=<span class="string">&quot;android.permission.BLUETOOTH_ADMIN&quot;</span>/&gt;</span><br><span class="line">&lt;uses-permission android:name=<span class="string">&quot;android.permission.BLUETOOTH_ADVERTISE&quot;</span>/&gt;</span><br><span class="line">&lt;uses-permission android:name=<span class="string">&quot;android.permission.BLUETOOTH_CONNECT&quot;</span>/&gt;</span><br><span class="line">&lt;uses-permission android:name=<span class="string">&quot;android.permission.ACCESS_COARSE_LOCATION&quot;</span>/&gt;</span><br><span class="line">&lt;uses-permission android:name=<span class="string">&quot;android.permission.ACCESS_FINE_LOCATION&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><h2 id="layout-xml-1"><a href="#layout-xml-1" class="headerlink" title="layout.xml"></a>layout.xml</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">&lt;Button</span><br><span class="line">        android:id=<span class="string">&quot;@+id/on&quot;</span></span><br><span class="line">        android:onClick=<span class="string">&quot;on&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_marginStart=<span class="string">&quot;44dp&quot;</span></span><br><span class="line">        android:layout_marginTop=<span class="string">&quot;36dp&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;Turn on&quot;</span></span><br><span class="line">        app:layout_constraintStart_toStartOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:layout_constraintTop_toTopOf=<span class="string">&quot;parent&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=<span class="string">&quot;@+id/discoverable&quot;</span></span><br><span class="line">        android:onClick=<span class="string">&quot;visible&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_marginStart=<span class="string">&quot;131dp&quot;</span></span><br><span class="line">        android:layout_marginTop=<span class="string">&quot;36dp&quot;</span></span><br><span class="line">        android:layout_marginEnd=<span class="string">&quot;48dp&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;turn discoverable&quot;</span></span><br><span class="line">        app:layout_constraintEnd_toEndOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:layout_constraintHorizontal_bias=<span class="string">&quot;1.0&quot;</span></span><br><span class="line">        app:layout_constraintStart_toEndOf=<span class="string">&quot;@+id/on&quot;</span></span><br><span class="line">        app:layout_constraintTop_toTopOf=<span class="string">&quot;parent&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=<span class="string">&quot;@+id/off&quot;</span></span><br><span class="line">        android:onClick=<span class="string">&quot;off&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_marginStart=<span class="string">&quot;44dp&quot;</span></span><br><span class="line">        android:layout_marginTop=<span class="string">&quot;44dp&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;Turn off&quot;</span></span><br><span class="line">        app:layout_constraintStart_toStartOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:layout_constraintTop_toBottomOf=<span class="string">&quot;@+id/on&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=<span class="string">&quot;@+id/device&quot;</span></span><br><span class="line">        android:onClick=<span class="string">&quot;list&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_marginTop=<span class="string">&quot;44dp&quot;</span></span><br><span class="line">        android:layout_marginBottom=<span class="string">&quot;103dp&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;list device&quot;</span></span><br><span class="line">        app:layout_constraintBottom_toTopOf=<span class="string">&quot;@+id/listView&quot;</span></span><br><span class="line">        app:layout_constraintEnd_toEndOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:layout_constraintHorizontal_bias=<span class="string">&quot;0.644&quot;</span></span><br><span class="line">        app:layout_constraintStart_toEndOf=<span class="string">&quot;@+id/off&quot;</span></span><br><span class="line">        app:layout_constraintTop_toBottomOf=<span class="string">&quot;@+id/discoverable&quot;</span></span><br><span class="line">        app:layout_constraintVertical_bias=<span class="string">&quot;0.0&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/textView&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;117dp&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;25dp&quot;</span></span><br><span class="line">        android:layout_marginStart=<span class="string">&quot;44dp&quot;</span></span><br><span class="line">        android:layout_marginTop=<span class="string">&quot;32dp&quot;</span></span><br><span class="line">        android:layout_marginEnd=<span class="string">&quot;254dp&quot;</span></span><br><span class="line">        android:layout_marginBottom=<span class="string">&quot;32dp&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;paired device&quot;</span></span><br><span class="line">        android:textSize=<span class="string">&quot;20sp&quot;</span></span><br><span class="line">        app:layout_constraintBottom_toTopOf=<span class="string">&quot;@+id/listView&quot;</span></span><br><span class="line">        app:layout_constraintEnd_toEndOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:layout_constraintHorizontal_bias=<span class="string">&quot;0.0&quot;</span></span><br><span class="line">        app:layout_constraintStart_toStartOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:layout_constraintTop_toBottomOf=<span class="string">&quot;@+id/off&quot;</span></span><br><span class="line">        app:layout_constraintVertical_bias=<span class="string">&quot;1.0&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;ListView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/listView&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;339dp&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;400dp&quot;</span></span><br><span class="line">        android:layout_marginStart=<span class="string">&quot;36dp&quot;</span></span><br><span class="line">        android:layout_marginTop=<span class="string">&quot;8dp&quot;</span></span><br><span class="line">        android:layout_marginEnd=<span class="string">&quot;36dp&quot;</span></span><br><span class="line">        app:layout_constraintBottom_toBottomOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:layout_constraintEnd_toEndOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:layout_constraintHorizontal_bias=<span class="string">&quot;1.0&quot;</span></span><br><span class="line">        app:layout_constraintStart_toStartOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:layout_constraintTop_toBottomOf=<span class="string">&quot;@+id/textView&quot;</span> /&gt;</span><br></pre></td></tr></table></figure><h2 id="Result"><a href="#Result" class="headerlink" title="Result"></a>Result</h2><p><img src="/2022-2023/Embedded-mobile-and-Wireless-System-Code-Example-7273817ad39d/302.png" alt="302.png"></p><h1 id="Location-and-Google-Map"><a href="#Location-and-Google-Map" class="headerlink" title="Location and Google Map"></a>Location and Google Map</h1><h2 id="MainActivity-java-3"><a href="#MainActivity-java-3" class="headerlink" title="MainActivity.java"></a>MainActivity.java</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br></pre></td><td class="code"><pre><span class="line">package com.example.a7map;</span><br><span class="line"></span><br><span class="line">import androidx.annotation.NonNull;</span><br><span class="line">import androidx.core.app.ActivityCompat;</span><br><span class="line">import androidx.fragment.app.FragmentActivity;</span><br><span class="line"></span><br><span class="line">import android.Manifest;</span><br><span class="line">import android.content.Context;</span><br><span class="line">import android.content.pm.PackageManager;</span><br><span class="line">import android.location.Location;</span><br><span class="line">import android.location.LocationListener;</span><br><span class="line">import android.location.LocationManager;</span><br><span class="line">import android.os.Bundle;</span><br><span class="line">import android.widget.TextView;</span><br><span class="line">import android.widget.Toast;</span><br><span class="line"></span><br><span class="line">import com.google.android.gms.maps.CameraUpdateFactory;</span><br><span class="line">import com.google.android.gms.maps.GoogleMap;</span><br><span class="line">import com.google.android.gms.maps.OnMapReadyCallback;</span><br><span class="line">import com.google.android.gms.maps.SupportMapFragment;</span><br><span class="line">import com.google.android.gms.maps.model.LatLng;</span><br><span class="line">import com.google.android.gms.maps.model.MarkerOptions;</span><br><span class="line">import com.example.a7map.databinding.ActivityMapsBinding;</span><br><span class="line"></span><br><span class="line">public class MapsActivity extends FragmentActivity implements OnMapReadyCallback &#123;</span><br><span class="line"></span><br><span class="line">    private GoogleMap mMap;</span><br><span class="line">    private ActivityMapsBinding binding;</span><br><span class="line"></span><br><span class="line">    private static final int REQUEST_ID_LOCATION_PERMISSION = 99;</span><br><span class="line"></span><br><span class="line">    TextView textLat;</span><br><span class="line">    TextView textLong;</span><br><span class="line">    LocationManager locationManager;</span><br><span class="line">    LocationListener locationListener;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        super.onCreate(savedInstanceState);</span><br><span class="line"></span><br><span class="line">        binding = ActivityMapsBinding.inflate(getLayoutInflater());</span><br><span class="line">        setContentView(binding.getRoot());</span><br><span class="line"></span><br><span class="line">        // Obtain the SupportMapFragment and get notified when the map is ready to be used.</span><br><span class="line">        SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager()</span><br><span class="line">                .findFragmentById(R.id.map);</span><br><span class="line">        //<span class="built_in">let</span> us know the map is ready</span><br><span class="line">        mapFragment.getMapAsync(this);</span><br><span class="line"></span><br><span class="line">        askLocationPermission();</span><br><span class="line"></span><br><span class="line">        locationManager = (LocationManager) getSystemService(Context.LOCATION_SERVICE);</span><br><span class="line">        locationListener = new mylocationlistener();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Manipulates the map once available.</span><br><span class="line">     * This callback is triggered when the map is ready to be used.</span><br><span class="line">     * This is <span class="built_in">where</span> we can add markers or lines, add listeners or move the camera. In this <span class="keyword">case</span>,</span><br><span class="line">     * we just add a marker near Sydney, Australia.</span><br><span class="line">     * If Google Play services is not installed on the device, the user will be prompted to install</span><br><span class="line">     * it inside the SupportMapFragment. This method will only be triggered once the user has</span><br><span class="line">     * installed Google Play services and returned to the app.</span><br><span class="line">     */</span><br><span class="line">    @Override</span><br><span class="line">    public void onMapReady(GoogleMap googleMap) &#123;</span><br><span class="line">        mMap = googleMap;</span><br><span class="line"></span><br><span class="line">        // Add a marker <span class="keyword">in</span> Sydney and move the camera</span><br><span class="line">        LatLng Edinburgh = new LatLng(55.953251, -3.188267);</span><br><span class="line">        //add new markers</span><br><span class="line">        mMap.addMarker(new MarkerOptions().position(Edinburgh).title(<span class="string">&quot;Marker in Edinburgh&quot;</span>));</span><br><span class="line">        //move the center of camera to marker</span><br><span class="line">        mMap.moveCamera(CameraUpdateFactory.newLatLng(Edinburgh));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED &amp;&amp; ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) &#123;</span><br><span class="line">            // TODO: Consider calling</span><br><span class="line">            //    ActivityCompat<span class="comment">#requestPermissions</span></span><br><span class="line">            // here to request the missing permissions, and <span class="keyword">then</span> overriding</span><br><span class="line">            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,</span><br><span class="line">            //                                          int[] grantResults)</span><br><span class="line">            // to handle the <span class="keyword">case</span> <span class="built_in">where</span> the user grants the permission. See the documentation</span><br><span class="line">            // <span class="keyword">for</span> ActivityCompat<span class="comment">#requestPermissions for more details.</span></span><br><span class="line">            <span class="built_in">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        //<span class="built_in">enable</span> the location button</span><br><span class="line">        mMap.setMyLocationEnabled(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        mMap.setMapType(GoogleMap.MAP_TYPE_HYBRID);</span><br><span class="line">        mMap.getUiSettings().setCompassEnabled(<span class="literal">true</span>);</span><br><span class="line">        mMap.getUiSettings().setRotateGesturesEnabled(<span class="literal">true</span>);</span><br><span class="line">        mMap.getUiSettings().setScrollGesturesEnabled(<span class="literal">true</span>);</span><br><span class="line">        mMap.getUiSettings().setTiltGesturesEnabled(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void <span class="function"><span class="title">askLocationPermission</span></span>() &#123;</span><br><span class="line">        <span class="keyword">if</span> (android.os.Build.VERSION.SDK_INT &gt;= 23) &#123;</span><br><span class="line">            //check <span class="keyword">if</span> we have location permission</span><br><span class="line">            int CoarseLocation = ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION);</span><br><span class="line">            int FinaLocationPermission = ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION);</span><br><span class="line">            int internetPermission = ActivityCompat.checkSelfPermission(this, Manifest.permission.INTERNET);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (CoarseLocation != PackageManager.PERMISSION_GRANTED ||</span><br><span class="line">                    internetPermission != PackageManager.PERMISSION_GRANTED ||</span><br><span class="line">                    FinaLocationPermission != PackageManager.PERMISSION_GRANTED) &#123;</span><br><span class="line">                //<span class="keyword">if</span> dont permitted yet, prompt user</span><br><span class="line">                this.requestPermissions(</span><br><span class="line">                        new String[]&#123;</span><br><span class="line">                                Manifest.permission.ACCESS_COARSE_LOCATION,</span><br><span class="line">                                Manifest.permission.ACCESS_FINE_LOCATION,</span><br><span class="line">                                Manifest.permission.INTERNET</span><br><span class="line">                        &#125;,</span><br><span class="line">                        REQUEST_ID_LOCATION_PERMISSION</span><br><span class="line">                );</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) &#123;</span><br><span class="line">        super.onRequestPermissionsResult(requestCode, permissions, grantResults);</span><br><span class="line"></span><br><span class="line">        switch (requestCode) &#123;</span><br><span class="line">            <span class="keyword">case</span> REQUEST_ID_LOCATION_PERMISSION: &#123;</span><br><span class="line">                //<span class="keyword">if</span> request cancelled, result array becomes empty</span><br><span class="line">                <span class="keyword">if</span> (grantResults.length &gt; 1</span><br><span class="line">                        &amp;&amp; grantResults[0] == PackageManager.PERMISSION_GRANTED</span><br><span class="line">                        &amp;&amp; grantResults[1] == PackageManager.PERMISSION_GRANTED</span><br><span class="line">                        &amp;&amp; grantResults[2] == PackageManager.PERMISSION_GRANTED) &#123;</span><br><span class="line">                    Toast.makeText(this, <span class="string">&quot;Permission granted!&quot;</span>, Toast.LENGTH_LONG).show();</span><br><span class="line">                &#125;</span><br><span class="line">                //<span class="keyword">if</span> cancelled or denied</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    Toast.makeText(this, <span class="string">&quot;Permission denied!&quot;</span>, Toast.LENGTH_LONG).show();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (!locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)) &#123;</span><br><span class="line">                    Toast.makeText(this, <span class="string">&quot;Open GPS&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED &amp;&amp; ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) &#123;</span><br><span class="line">                    // TODO: Consider calling</span><br><span class="line">                    //    ActivityCompat<span class="comment">#requestPermissions</span></span><br><span class="line">                    // here to request the missing permissions, and <span class="keyword">then</span> overriding</span><br><span class="line">                    //   public void onRequestPermissionsResult(int requestCode, String[] permissions,</span><br><span class="line">                    //                                          int[] grantResults)</span><br><span class="line">                    // to handle the <span class="keyword">case</span> <span class="built_in">where</span> the user grants the permission. See the documentation</span><br><span class="line">                    // <span class="keyword">for</span> ActivityCompat<span class="comment">#requestPermissions for more details.</span></span><br><span class="line">                    <span class="built_in">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 0, 0, locationListener);</span><br><span class="line">                <span class="built_in">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    double tlat;</span><br><span class="line">    double tlong;</span><br><span class="line">    class mylocationlistener implements  LocationListener&#123;</span><br><span class="line">        @Override</span><br><span class="line">        //called when GPS changes</span><br><span class="line">        public void onLocationChanged(@NonNull Location location) &#123;</span><br><span class="line">            <span class="keyword">if</span> (location != null) &#123;</span><br><span class="line">                tlat = location.getLatitude();</span><br><span class="line">                tlong = location.getLongitude();</span><br><span class="line">                textLat.setText(Double.toString(tlat));</span><br><span class="line">                textLong.setText(Double.toString(tlong));</span><br><span class="line">                Toast.makeText(MapsActivity.this,<span class="string">&quot;New Location &quot;</span>+String.valueOf(tlat)+<span class="string">&quot; &quot;</span>+String.valueOf(tlong),Toast.LENGTH_LONG).show();</span><br><span class="line">                updateMap();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //add a new point marker and move camera to that place</span><br><span class="line">    private void <span class="function"><span class="title">updateMap</span></span>()&#123;</span><br><span class="line">        //Add a marker <span class="keyword">in</span> the Edinburgh and move the camera</span><br><span class="line">        LatLng latLng = new LatLng(tlat,tlong);</span><br><span class="line">        mMap.addMarker(new MarkerOptions().position(latLng).title(<span class="string">&quot;New location&quot;</span>));</span><br><span class="line">        //Move tie map camera to the new location</span><br><span class="line">        mMap.moveCamera(CameraUpdateFactory.newLatLng(latLng));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void <span class="function"><span class="title">setUpMapIfNeeded</span></span>()&#123;</span><br><span class="line">        //null check</span><br><span class="line">        <span class="keyword">if</span>(mMap==null)&#123;</span><br><span class="line">            SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager().findFragmentById(R.id.map);</span><br><span class="line">            mapFragment.getMapAsync(this);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void <span class="function"><span class="title">onPause</span></span>() &#123;</span><br><span class="line">        </span><br><span class="line">        super.onPause();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void <span class="function"><span class="title">onResume</span></span>() &#123;</span><br><span class="line">        super.onResume();</span><br><span class="line"></span><br><span class="line">        setUpMapIfNeeded();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Manifest-xml-2"><a href="#Manifest-xml-2" class="headerlink" title="Manifest.xml"></a>Manifest.xml</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;uses-permission android:name=<span class="string">&quot;android.permission.ACCESS_COARSE_LOCATION&quot;</span> /&gt;</span><br><span class="line">&lt;uses-permission android:name=<span class="string">&quot;android.permission.ACCESS_FINE_LOCATION&quot;</span> /&gt;</span><br><span class="line">&lt;uses-permission android:name=<span class="string">&quot;android.permission.INTERNET&quot;</span> /&gt;</span><br></pre></td></tr></table></figure><h2 id="layout-xml-2"><a href="#layout-xml-2" class="headerlink" title="layout.xml"></a>layout.xml</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;fragment xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">    xmlns:map=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class="line">    xmlns:tools=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span><br><span class="line">    android:id=<span class="string">&quot;@+id/map&quot;</span></span><br><span class="line">    android:name=<span class="string">&quot;com.google.android.gms.maps.SupportMapFragment&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    tools:context=<span class="string">&quot;.MapsActivity&quot;</span> /&gt;</span><br></pre></td></tr></table></figure><h2 id="google-maps-api-xml"><a href="#google-maps-api-xml" class="headerlink" title="google_maps_api.xml"></a>google_maps_api.xml</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;resources&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">    TODO: Before you run your application, you need a Google Maps API key.</span><br><span class="line"></span><br><span class="line">    To get one, follow this link, follow the directions and press <span class="string">&quot;Create&quot;</span> at the end:</span><br><span class="line"></span><br><span class="line">    https://console.developers.google.com/flows/enableapi?apiid=maps_android_backend&amp;keyType=CLIENT_SIDE_ANDROID&amp;r=E0:45:B0:55:16:4B:78:90:33:A3:6E:54:2F:7A:F7:8E:E2:44:DF:DB%3Bcom.example.a7map</span><br><span class="line"></span><br><span class="line">    You can also add your credentials to an existing key, using these values:</span><br><span class="line"></span><br><span class="line">    Package name:</span><br><span class="line">    com.example.a7map</span><br><span class="line"></span><br><span class="line">    SHA-1 certificate fingerprint:</span><br><span class="line">    E0:45:B0:55:16:4B:78:90:33:A3:6E:54:2F:7A:F7:8E:E2:44:DF:DB</span><br><span class="line"></span><br><span class="line">    Alternatively, follow the directions here:</span><br><span class="line">    https://developers.google.com/maps/documentation/android/start<span class="comment">#get-key</span></span><br><span class="line"></span><br><span class="line">    Once you have your key (it starts with <span class="string">&quot;AIza&quot;</span>), replace the <span class="string">&quot;google_maps_key&quot;</span></span><br><span class="line">    string <span class="keyword">in</span> this file.</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;string name=<span class="string">&quot;google_maps_key&quot;</span> templateMergeStrategy=<span class="string">&quot;preserve&quot;</span> translatable=<span class="string">&quot;false&quot;</span>&gt;AIzaSyBr7Z2f7_RceTGRvkK4XibuetGI5ScLItk&lt;/string&gt;</span><br><span class="line">&lt;/resources&gt;</span><br></pre></td></tr></table></figure><h2 id="Result-1"><a href="#Result-1" class="headerlink" title="Result"></a>Result</h2><p><img src="/2022-2023/Embedded-mobile-and-Wireless-System-Code-Example-7273817ad39d/401.png" alt="401.png"></p><h1 id="Camera"><a href="#Camera" class="headerlink" title="Camera"></a>Camera</h1><h2 id="MainActivity-java-4"><a href="#MainActivity-java-4" class="headerlink" title="MainActivity.java"></a>MainActivity.java</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line">package com.example.a8camera;</span><br><span class="line"></span><br><span class="line">import androidx.annotation.NonNull;</span><br><span class="line">import androidx.annotation.Nullable;</span><br><span class="line">import androidx.appcompat.app.AppCompatActivity;</span><br><span class="line">import androidx.core.app.ActivityCompat;</span><br><span class="line">import androidx.core.content.FileProvider;</span><br><span class="line"></span><br><span class="line">import android.Manifest;</span><br><span class="line">import android.content.Intent;</span><br><span class="line">import android.content.pm.PackageManager;</span><br><span class="line">import android.net.Uri;</span><br><span class="line">import android.os.Build;</span><br><span class="line">import android.os.Bundle;</span><br><span class="line">import android.os.Environment;</span><br><span class="line">import android.os.StrictMode;</span><br><span class="line">import android.provider.MediaStore;</span><br><span class="line">import android.util.Log;</span><br><span class="line">import android.view.View;</span><br><span class="line">import android.widget.Toast;</span><br><span class="line"></span><br><span class="line">import java.io.File;</span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.text.SimpleDateFormat;</span><br><span class="line">import java.util.Date;</span><br><span class="line"></span><br><span class="line">public class MainActivity extends AppCompatActivity &#123;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        super.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        askCameraPermission();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private static final int REQUEST_ID_READ_WRITE_PERMISSION = 99;</span><br><span class="line"></span><br><span class="line">    private void <span class="function"><span class="title">askCameraPermission</span></span>()&#123;</span><br><span class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT&gt;=23)&#123;</span><br><span class="line">            //check permissoins</span><br><span class="line">            int readPermission = ActivityCompat.checkSelfPermission(this, Manifest.permission.READ_EXTERNAL_STORAGE);</span><br><span class="line">            int writePermission = ActivityCompat.checkSelfPermission(this, Manifest.permission.WRITE_EXTERNAL_STORAGE);</span><br><span class="line">            int cameraPermission = ActivityCompat.checkSelfPermission(this, Manifest.permission.CAMERA);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (readPermission != PackageManager.PERMISSION_GRANTED ||</span><br><span class="line">                    writePermission != PackageManager.PERMISSION_GRANTED ||</span><br><span class="line">                    cameraPermission  != PackageManager.PERMISSION_GRANTED)&#123;</span><br><span class="line">                this.requestPermissions(</span><br><span class="line">                        new String[]&#123;</span><br><span class="line">                                Manifest.permission.WRITE_EXTERNAL_STORAGE,</span><br><span class="line">                                Manifest.permission.READ_EXTERNAL_STORAGE,</span><br><span class="line">                                Manifest.permission.CAMERA&#125;,</span><br><span class="line">                        REQUEST_ID_READ_WRITE_PERMISSION</span><br><span class="line">                );</span><br><span class="line">                <span class="built_in">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) &#123;</span><br><span class="line">        super.onRequestPermissionsResult(requestCode, permissions, grantResults);</span><br><span class="line">        switch (requestCode)&#123;</span><br><span class="line">            <span class="keyword">case</span> REQUEST_ID_READ_WRITE_PERMISSION: &#123;</span><br><span class="line">                <span class="keyword">if</span> (grantResults.length &gt; 1</span><br><span class="line">                    &amp;&amp; grantResults[0] == PackageManager.PERMISSION_GRANTED</span><br><span class="line">                        &amp;&amp; grantResults[1] == PackageManager.PERMISSION_GRANTED</span><br><span class="line">                        &amp;&amp; grantResults[2] == PackageManager.PERMISSION_GRANTED) &#123;</span><br><span class="line">                    Toast.makeText(this, <span class="string">&quot;Permission granted!&quot;</span>, Toast.LENGTH_LONG).show();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    Toast.makeText(this, <span class="string">&quot;Permission denied!&quot;</span>, Toast.LENGTH_LONG).show();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    static final int CAPTURE_IMAGE_ACTIVITY_REQUEST_CODE = 1;</span><br><span class="line"></span><br><span class="line">    public void takePhoto(View view)&#123;</span><br><span class="line">        //get intent <span class="keyword">if</span> MediaStore.ACTION_IMAGE_CAPTURE active</span><br><span class="line">        Intent takePictureIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);</span><br><span class="line">        //create file <span class="built_in">where</span> the photo should go</span><br><span class="line">        File photoFile = null;</span><br><span class="line">        try&#123;</span><br><span class="line">            photoFile = createImageFile();</span><br><span class="line">            Log.e(<span class="string">&quot;CameraApp&quot;</span>, photoFile.getAbsolutePath());</span><br><span class="line">        &#125; catch (IOException ex)&#123;</span><br><span class="line">            Log.e(<span class="string">&quot;error:&quot;</span>, ex.getMessage() );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        //<span class="built_in">continue</span> <span class="keyword">if</span> the file is successfully created</span><br><span class="line">        <span class="keyword">if</span> (photoFile != null)&#123;</span><br><span class="line">            //creates a URI object to represent the location <span class="built_in">where</span> the photo taken by the camera will be saved</span><br><span class="line">            Uri photoURI = FileProvider.getUriForFile(getApplicationContext(),<span class="string">&quot;com.example.a8camera&quot;</span>,photoFile);</span><br><span class="line">            //sets an extra parameter on the camera intent that indicates <span class="built_in">where</span> the resulting photo should be saved</span><br><span class="line">            takePictureIntent.putExtra(MediaStore.EXTRA_OUTPUT,photoURI);</span><br><span class="line">            //starts the camera intent, <span class="built_in">which</span> opens the camera application and allows the user to take a picture</span><br><span class="line">            startActivityForResult(takePictureIntent, CAPTURE_IMAGE_ACTIVITY_REQUEST_CODE);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    String currentPhotoPath;</span><br><span class="line">    private File createImageFile() throws IOException&#123;</span><br><span class="line">        //create an image file name</span><br><span class="line">        String timeStamp = new SimpleDateFormat(<span class="string">&quot;yyyyMMdd_HHmms&quot;</span>).format(new Date());</span><br><span class="line">        String imageFileName = <span class="string">&quot;JPEG_&quot;</span>+timeStamp+<span class="string">&quot;_&quot;</span>;</span><br><span class="line">        File storageDir = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES);</span><br><span class="line">        File image = File.createTempFile(imageFileName,<span class="string">&quot;.jpg&quot;</span>,storageDir);</span><br><span class="line"></span><br><span class="line">        //save a file</span><br><span class="line">        currentPhotoPath = image.getAbsolutePath();</span><br><span class="line">        <span class="built_in">return</span> image;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    //call this <span class="keyword">function</span> when finishes taking the picture</span><br><span class="line">    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) &#123;</span><br><span class="line">        super.onActivityResult(requestCode, resultCode, data);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (requestCode == CAPTURE_IMAGE_ACTIVITY_REQUEST_CODE)&#123;</span><br><span class="line">            <span class="keyword">if</span> (resultCode == RESULT_OK)&#123;</span><br><span class="line">                Toast.makeText(this, <span class="string">&quot;Image successfully saved&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                galleryAddPic();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (resultCode == RESULT_CANCELED)&#123;</span><br><span class="line">                Toast.makeText(this, <span class="string">&quot;Image saving is cancelled&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                Toast.makeText(this, <span class="string">&quot;Image failed&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void <span class="function"><span class="title">galleryAddPic</span></span>()&#123;</span><br><span class="line">        Intent mediaScanIntent = new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE);</span><br><span class="line">        File f = new File(currentPhotoPath);</span><br><span class="line">        Uri contentUri = Uri.fromFile(f);</span><br><span class="line">        mediaScanIntent.setData(contentUri);</span><br><span class="line">        this.sendBroadcast(mediaScanIntent);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Manifest-xml-3"><a href="#Manifest-xml-3" class="headerlink" title="Manifest.xml"></a>Manifest.xml</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;uses-permission android:name=<span class="string">&quot;android.permission.CAMERA&quot;</span> /&gt;</span><br><span class="line">    &lt;uses-feature android:name=<span class="string">&quot;android.hardware.camera&quot;</span></span><br><span class="line">        android:required=<span class="string">&quot;true&quot;</span>/&gt;</span><br><span class="line">    &lt;uses-permission android:name=<span class="string">&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;</span> /&gt;</span><br><span class="line">    &lt;uses-permission android:name=<span class="string">&quot;android.permission.READ_EXTERNAL_STORAGE&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">//<span class="keyword">in</span> &lt;application&gt;</span><br><span class="line">&lt;provider</span><br><span class="line">            android:authorities=<span class="string">&quot;com.example.a8camera&quot;</span></span><br><span class="line">            android:name=<span class="string">&quot;androidx.core.content.FileProvider&quot;</span></span><br><span class="line">            android:exported=<span class="string">&quot;false&quot;</span></span><br><span class="line">            android:grantUriPermissions=<span class="string">&quot;true&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- this one is used to know <span class="built_in">where</span> to look <span class="keyword">for</span> the paths to use--&gt;</span><br><span class="line">            &lt;meta-data</span><br><span class="line">                android:name=<span class="string">&quot;android.support.FILE_PROVIDER_PATHS&quot;</span></span><br><span class="line">                android:resource=<span class="string">&quot;@xml/file_paths&quot;</span>&gt;&lt;/meta-data&gt;</span><br><span class="line">        &lt;/provider&gt;</span><br></pre></td></tr></table></figure><h2 id="xml-file-paths-xml"><a href="#xml-file-paths-xml" class="headerlink" title="@xml/file_paths.xml"></a>@xml/file_paths.xml</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;paths&gt;</span><br><span class="line">    &lt;external-path</span><br><span class="line">        name=<span class="string">&quot;external&quot;</span></span><br><span class="line">        path=<span class="string">&quot;.&quot;</span>/&gt;</span><br><span class="line">    &lt;external-files-path</span><br><span class="line">        name=<span class="string">&quot;external_files&quot;</span></span><br><span class="line">        path=<span class="string">&quot;.&quot;</span>/&gt;</span><br><span class="line">    &lt;cache-path</span><br><span class="line">        name=<span class="string">&quot;cache&quot;</span></span><br><span class="line">        path=<span class="string">&quot;.&quot;</span>/&gt;</span><br><span class="line">    &lt;external-cache-path</span><br><span class="line">        name=<span class="string">&quot;external_cache&quot;</span></span><br><span class="line">        path=<span class="string">&quot;.&quot;</span>/&gt;</span><br><span class="line">    &lt;files-path</span><br><span class="line">        name=<span class="string">&quot;files&quot;</span></span><br><span class="line">        path=<span class="string">&quot;.&quot;</span>/&gt;</span><br><span class="line">&lt;/paths&gt;</span><br></pre></td></tr></table></figure><h1 id="Result-2"><a href="#Result-2" class="headerlink" title="Result"></a>Result</h1><p><img src="/2022-2023/Embedded-mobile-and-Wireless-System-Code-Example-7273817ad39d/601.png" alt="601.png"><br><img src="/2022-2023/Embedded-mobile-and-Wireless-System-Code-Example-7273817ad39d/602.png" alt="602.png"></p><h1 id="Build-SensorInterface"><a href="#Build-SensorInterface" class="headerlink" title="Build SensorInterface"></a>Build SensorInterface</h1><h2 id="MainActivity-java-5"><a href="#MainActivity-java-5" class="headerlink" title="MainActivity.java"></a>MainActivity.java</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">package com.example.a9sensorandcamera;</span><br><span class="line"></span><br><span class="line">import androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line">import android.content.Context;</span><br><span class="line">import android.hardware.Sensor;</span><br><span class="line">import android.hardware.SensorEvent;</span><br><span class="line">import android.hardware.SensorEventListener;</span><br><span class="line">import android.hardware.SensorManager;</span><br><span class="line">import android.os.Bundle;</span><br><span class="line">import android.widget.TextView;</span><br><span class="line"></span><br><span class="line">import org.w3c.dom.Text;</span><br><span class="line"></span><br><span class="line">public class MainActivity extends AppCompatActivity implements MotionSensorManager.OnMotionSensorManagerListener &#123;</span><br><span class="line">    //Motion sensor manager collect sensor information and gives it <span class="keyword">in</span> a readable form</span><br><span class="line">    private MotionSensorManager mMotionSensorManager;</span><br><span class="line"></span><br><span class="line">    private TextView mag_x;</span><br><span class="line">    private TextView mag_y;</span><br><span class="line">    private TextView mag_z;</span><br><span class="line">    private TextView mag_h;</span><br><span class="line">    private TextView acc_x;</span><br><span class="line">    private TextView acc_y;</span><br><span class="line">    private TextView acc_z;</span><br><span class="line">    private TextView gyr_x;</span><br><span class="line">    private TextView gyr_y;</span><br><span class="line">    private TextView gyr_z;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        super.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        //three motion detectors<span class="string">&#x27; manager</span></span><br><span class="line"><span class="string">        mMotionSensorManager = new MotionSensorManager(this);</span></span><br><span class="line"><span class="string">        //set listeners</span></span><br><span class="line"><span class="string">        mMotionSensorManager.setOnMotionSensorManagerListener(this);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        mag_x = findViewById(R.id.mag_x);</span></span><br><span class="line"><span class="string">        mag_y = findViewById(R.id.mag_y);</span></span><br><span class="line"><span class="string">        mag_z = findViewById(R.id.mag_z);</span></span><br><span class="line"><span class="string">        mag_h = findViewById(R.id.mag_h);</span></span><br><span class="line"><span class="string">        acc_x = findViewById(R.id.acc_x);</span></span><br><span class="line"><span class="string">        acc_y = findViewById(R.id.acc_y);</span></span><br><span class="line"><span class="string">        acc_z = findViewById(R.id.acc_z);</span></span><br><span class="line"><span class="string">        gyr_x = findViewById(R.id.gyr_x);</span></span><br><span class="line"><span class="string">        gyr_y = findViewById(R.id.gyr_y);</span></span><br><span class="line"><span class="string">        gyr_z = findViewById(R.id.gyr_z);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    @Override</span></span><br><span class="line"><span class="string">    protected void onResume() &#123;</span></span><br><span class="line"><span class="string">        super.onResume();</span></span><br><span class="line"><span class="string">        mMotionSensorManager.registerMotionSensors();</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    @Override</span></span><br><span class="line"><span class="string">    protected void onPause() &#123;</span></span><br><span class="line"><span class="string">        super.onPause();</span></span><br><span class="line"><span class="string">        mMotionSensorManager.unregisterMotionSensors();</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    @Override</span></span><br><span class="line"><span class="string">    public void onAccValueUpdated(float[] acceleration) &#123;</span></span><br><span class="line"><span class="string">        acc_x.setText(&quot;acc_Xaxis = &quot;+acceleration[0]);</span></span><br><span class="line"><span class="string">        acc_y.setText(&quot;acc_Yaxis = &quot;+acceleration[1]);</span></span><br><span class="line"><span class="string">        acc_z.setText(&quot;acc_Zaxis = &quot;+acceleration[2]);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    @Override</span></span><br><span class="line"><span class="string">    public void onGyoValueUpdated(float[] gyroscope) &#123;</span></span><br><span class="line"><span class="string">        gyr_x.setText(&quot;gyr_Xaxis = &quot;+gyroscope[0]);</span></span><br><span class="line"><span class="string">        gyr_y.setText(&quot;gyr_Yaxis = &quot;+gyroscope[1]);</span></span><br><span class="line"><span class="string">        gyr_z.setText(&quot;gyr_Zaxis = &quot;+gyroscope[2]);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    @Override</span></span><br><span class="line"><span class="string">    public void onMagValueUpdated(float[] magneticfield) &#123;</span></span><br><span class="line"><span class="string">        mag_x.setText(&quot;mag_Xaxis = &quot;+magneticfield[0]);</span></span><br><span class="line"><span class="string">        mag_y.setText(&quot;mag_Yaxis = &quot;+magneticfield[1]);</span></span><br><span class="line"><span class="string">        mag_z.setText(&quot;mag_zaxis = &quot;+magneticfield[2]);</span></span><br><span class="line"><span class="string">        mag_h.setText(&quot;mag_Haxis = &quot;+magneticfield[3]);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="MotionSensorManager-java"><a href="#MotionSensorManager-java" class="headerlink" title="MotionSensorManager.java"></a>MotionSensorManager.java</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">package com.example.a9sensorandcamera;</span><br><span class="line"></span><br><span class="line">import android.content.Context;</span><br><span class="line">import android.hardware.Sensor;</span><br><span class="line">import android.hardware.SensorEvent;</span><br><span class="line">import android.hardware.SensorEventListener;</span><br><span class="line">import android.hardware.SensorManager;</span><br><span class="line"></span><br><span class="line">public class MotionSensorManager implements SensorEventListener &#123;</span><br><span class="line">    //Information to the activity is being passed through the listener</span><br><span class="line">    private OnMotionSensorManagerListener motionSensorManagerListerner;</span><br><span class="line">    //Sensor manager is used to get access to all sensors</span><br><span class="line">    private SensorManager sensorManager;</span><br><span class="line">    private Sensor Accelerometer;</span><br><span class="line">    private Sensor Gyroscope;</span><br><span class="line">    private Sensor mMagneticField;</span><br><span class="line"></span><br><span class="line">    //class initialize</span><br><span class="line">    public MotionSensorManager(Context context)&#123;</span><br><span class="line">        //get instance of the snesor manager and <span class="keyword">then</span> access of the required sensors</span><br><span class="line">        sensorManager = (SensorManager) context.getSystemService(Context.SENSOR_SERVICE);</span><br><span class="line">        mMagneticField = sensorManager.getDefaultSensor(Sensor.TYPE_MAGNETIC_FIELD);</span><br><span class="line">        Accelerometer = sensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);</span><br><span class="line">        Gyroscope = sensorManager.getDefaultSensor(Sensor.TYPE_GYROSCOPE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //link listener</span><br><span class="line">    public void setOnMotionSensorManagerListener(OnMotionSensorManagerListener motionSensorManagerListener)&#123;</span><br><span class="line">        this.motionSensorManagerListerner = motionSensorManagerListener;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void <span class="function"><span class="title">unregisterMotionSensors</span></span>()&#123;</span><br><span class="line">        sensorManager.unregisterListener(this);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //<span class="built_in">set</span> listener with sensor manager</span><br><span class="line">    public void <span class="function"><span class="title">registerMotionSensors</span></span>()&#123;</span><br><span class="line">        sensorManager.registerListener(this,mMagneticField, SensorManager.SENSOR_DELAY_NORMAL);</span><br><span class="line">        sensorManager.registerListener(this,Accelerometer,SensorManager.SENSOR_DELAY_NORMAL);</span><br><span class="line">        sensorManager.registerListener(this,Gyroscope,SensorManager.SENSOR_DELAY_NORMAL);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //height value</span><br><span class="line">    private double h;</span><br><span class="line">    //coefficient of low pass filter</span><br><span class="line">    final <span class="built_in">float</span> alpha =(<span class="built_in">float</span>) 0.8;</span><br><span class="line">    private <span class="built_in">float</span> gravity [] = new <span class="built_in">float</span>[3];</span><br><span class="line">    @Override</span><br><span class="line">    public void onSensorChanged(SensorEvent event) &#123;</span><br><span class="line">        //be called when sensors are being updated</span><br><span class="line">        switch (event.sensor.getType())&#123;</span><br><span class="line">            <span class="keyword">case</span> Sensor.TYPE_ACCELEROMETER:</span><br><span class="line">                gravity[0] = alpha * gravity[0] + (1-alpha) * event.values[0];</span><br><span class="line">                gravity[1] = alpha * gravity[1] + (1-alpha) * event.values[1];</span><br><span class="line">                gravity[2] = alpha * gravity[2] + (1-alpha) * event.values[2];</span><br><span class="line"></span><br><span class="line">                <span class="built_in">float</span> linear_acceleration [] = new <span class="built_in">float</span>[3];</span><br><span class="line">                linear_acceleration[0] = event.values[0] - gravity[0];</span><br><span class="line">                linear_acceleration[1] = event.values[1] - gravity[1];</span><br><span class="line">                linear_acceleration[2] = event.values[2] - gravity[2];</span><br><span class="line"></span><br><span class="line">                //[acc_x,acc_y,acc_z]</span><br><span class="line">                motionSensorManagerListerner.onAccValueUpdated(new <span class="built_in">float</span>[]&#123;linear_acceleration[0],linear_acceleration[1],linear_acceleration[2]&#125;);</span><br><span class="line">                <span class="built_in">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">case</span> Sensor.TYPE_GYROSCOPE:</span><br><span class="line">                //[gyr_z,gyr_y,gyr_z]</span><br><span class="line">                motionSensorManagerListerner.onGyoValueUpdated(new <span class="built_in">float</span>[]&#123;event.values[0],event.values[1],event.values[2]&#125;);</span><br><span class="line">                <span class="built_in">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">case</span> Sensor.TYPE_MAGNETIC_FIELD:</span><br><span class="line">                h = Math.sqrt(event.values[0] * event.values[0] + event.values[1] * event.values[1] + event.values[2] * event.values[2]);</span><br><span class="line">                //[mag_x,mag_y,mag_z,mag_h]</span><br><span class="line">                motionSensorManagerListerner.onMagValueUpdated(new <span class="built_in">float</span>[]&#123;event.values[0],event.values[1],event.values[2],(<span class="built_in">float</span>) h&#125;);</span><br><span class="line">                <span class="built_in">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void onAccuracyChanged(Sensor sensor, int accuracy) &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //interface the <span class="keyword">function</span> to other class</span><br><span class="line">    public interface OnMotionSensorManagerListener &#123;</span><br><span class="line"></span><br><span class="line">        void onAccValueUpdated(<span class="built_in">float</span>[] acceleration);</span><br><span class="line"></span><br><span class="line">        void onGyoValueUpdated(<span class="built_in">float</span>[] gyroscope);</span><br><span class="line"></span><br><span class="line">        void onMagValueUpdated(<span class="built_in">float</span>[] magneticfield);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Result-3"><a href="#Result-3" class="headerlink" title="Result"></a>Result</h2><h2 id="activity-main-xml"><a href="#activity-main-xml" class="headerlink" title="activity_main.xml"></a>activity_main.xml</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">    xmlns:app=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class="line">    xmlns:tools=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    tools:context=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/textView&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_marginStart=<span class="string">&quot;24dp&quot;</span></span><br><span class="line">        android:layout_marginTop=<span class="string">&quot;16dp&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;EMF&quot;</span></span><br><span class="line">        android:textSize=<span class="string">&quot;34sp&quot;</span></span><br><span class="line">        app:layout_constraintStart_toStartOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:layout_constraintTop_toTopOf=<span class="string">&quot;parent&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/mag_x&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_marginStart=<span class="string">&quot;24dp&quot;</span></span><br><span class="line">        android:layout_marginTop=<span class="string">&quot;12dp&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;mag_x&quot;</span></span><br><span class="line">        app:layout_constraintStart_toStartOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:layout_constraintTop_toBottomOf=<span class="string">&quot;@+id/textView&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/mag_y&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_marginStart=<span class="string">&quot;24dp&quot;</span></span><br><span class="line">        android:layout_marginTop=<span class="string">&quot;12dp&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;mag_y&quot;</span></span><br><span class="line">        app:layout_constraintStart_toStartOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:layout_constraintTop_toBottomOf=<span class="string">&quot;@+id/mag_x&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/mag_z&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_marginStart=<span class="string">&quot;24dp&quot;</span></span><br><span class="line">        android:layout_marginTop=<span class="string">&quot;12dp&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;mag_z&quot;</span></span><br><span class="line">        app:layout_constraintStart_toStartOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:layout_constraintTop_toBottomOf=<span class="string">&quot;@+id/mag_y&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/mag_h&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_marginStart=<span class="string">&quot;24dp&quot;</span></span><br><span class="line">        android:layout_marginTop=<span class="string">&quot;12dp&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;mag_h&quot;</span></span><br><span class="line">        app:layout_constraintStart_toStartOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:layout_constraintTop_toBottomOf=<span class="string">&quot;@+id/mag_z&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/textView6&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_marginStart=<span class="string">&quot;24dp&quot;</span></span><br><span class="line">        android:layout_marginTop=<span class="string">&quot;24dp&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;Accelerometer&quot;</span></span><br><span class="line">        android:textSize=<span class="string">&quot;34sp&quot;</span></span><br><span class="line">        app:layout_constraintStart_toStartOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:layout_constraintTop_toBottomOf=<span class="string">&quot;@+id/mag_h&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/acc_x&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_marginStart=<span class="string">&quot;24dp&quot;</span></span><br><span class="line">        android:layout_marginTop=<span class="string">&quot;12dp&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;acc_x&quot;</span></span><br><span class="line">        app:layout_constraintStart_toStartOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:layout_constraintTop_toBottomOf=<span class="string">&quot;@+id/textView6&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/acc_y&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_marginStart=<span class="string">&quot;24dp&quot;</span></span><br><span class="line">        android:layout_marginTop=<span class="string">&quot;12dp&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;acc_y&quot;</span></span><br><span class="line">        app:layout_constraintStart_toStartOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:layout_constraintTop_toBottomOf=<span class="string">&quot;@+id/acc_x&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/acc_z&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_marginStart=<span class="string">&quot;24dp&quot;</span></span><br><span class="line">        android:layout_marginTop=<span class="string">&quot;12dp&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;acc_z&quot;</span></span><br><span class="line">        app:layout_constraintStart_toStartOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:layout_constraintTop_toBottomOf=<span class="string">&quot;@+id/acc_y&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/textView10&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_marginStart=<span class="string">&quot;24dp&quot;</span></span><br><span class="line">        android:layout_marginTop=<span class="string">&quot;24dp&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;Gyroscope&quot;</span></span><br><span class="line">        android:textSize=<span class="string">&quot;34sp&quot;</span></span><br><span class="line">        app:layout_constraintStart_toStartOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:layout_constraintTop_toBottomOf=<span class="string">&quot;@+id/acc_z&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/gyr_x&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_marginStart=<span class="string">&quot;24dp&quot;</span></span><br><span class="line">        android:layout_marginTop=<span class="string">&quot;12dp&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;gyr_x&quot;</span></span><br><span class="line">        app:layout_constraintStart_toStartOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:layout_constraintTop_toBottomOf=<span class="string">&quot;@+id/textView10&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/gyr_y&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_marginStart=<span class="string">&quot;24dp&quot;</span></span><br><span class="line">        android:layout_marginTop=<span class="string">&quot;12dp&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;gyr_y&quot;</span></span><br><span class="line">        app:layout_constraintStart_toStartOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:layout_constraintTop_toBottomOf=<span class="string">&quot;@+id/gyr_x&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/gyr_z&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_marginStart=<span class="string">&quot;24dp&quot;</span></span><br><span class="line">        android:layout_marginTop=<span class="string">&quot;12dp&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;gyr_z&quot;</span></span><br><span class="line">        app:layout_constraintStart_toStartOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:layout_constraintTop_toBottomOf=<span class="string">&quot;@+id/gyr_y&quot;</span> /&gt;</span><br><span class="line">&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;</span><br></pre></td></tr></table></figure><h2 id="Result-4"><a href="#Result-4" class="headerlink" title="Result"></a>Result</h2><p><img src="/2022-2023/Embedded-mobile-and-Wireless-System-Code-Example-7273817ad39d/603.png" alt="603.png"></p>]]></content>
      
      
      <categories>
          
          <category> academic material </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2022-2023 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Embedded mobile and Wireless System</title>
      <link href="/2022-2023/Embedded-mobile-and-Wireless-System-e97c63b4991e/"/>
      <url>/2022-2023/Embedded-mobile-and-Wireless-System-e97c63b4991e/</url>
      
        <content type="html"><![CDATA[<p>code example: (<a href="https://pipirima.top/2022-2023/Embedded-mobile-and-Wireless-System-Code-Example-7273817ad39d/">https://pipirima.top/2022-2023/Embedded-mobile-and-Wireless-System-Code-Example-7273817ad39d/</a>)</p><span id="more"></span><h1 id="initialization"><a href="#initialization" class="headerlink" title="initialization"></a>initialization</h1><p>APP: Android Studio v.2020.3.1.26 Patch4, published at December 8, 2021<br>(<a href="https://developer.android.com/studio/archive">https://developer.android.com/studio/archive</a>) please note: Change to English language or may not find this version<br>language: JAVA<br>Minimum SDK platform: Android 9 (pie)</p><p>tools -&gt; SDK manger<br>SDK tools: Android SDK build, Android Emulator, Android SDK platform (tool), (optional) HAXM installer</p><p>tools -&gt; AVD manager<br>Harware: Phone-Pixle 2<br>the emulator can be actived after build. If terminated, please check device’s virtual device support.</p><p><img src="/2022-2023/Embedded-mobile-and-Wireless-System-e97c63b4991e/000.png" alt="000.png"></p><p>one group of xml page have sutomatically initialized when creating a new project.<br>MainActivity (logic code) and activity_main.xml (page design)<br><img src="/2022-2023/Embedded-mobile-and-Wireless-System-e97c63b4991e/001.png" alt="001.png"></p><p>and a “Hello Word” programe is already coded, can directly ran the programe and test the setting.</p><h1 id="Usual-parameter-values"><a href="#Usual-parameter-values" class="headerlink" title="Usual parameter values"></a>Usual parameter values</h1><h2 id="Common-parameters"><a href="#Common-parameters" class="headerlink" title="Common parameters"></a>Common parameters</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">android:text=<span class="string">&quot;text&quot;</span></span><br><span class="line"></span><br><span class="line">android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line"></span><br><span class="line">app:layout_constraintBottom_toBottomOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">app:layout_constraintEnd_toEndOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">app:layout_constraintStart_toStartOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">app:layout_constraintTop_toTopOf=<span class="string">&quot;parent&quot;</span></span><br></pre></td></tr></table></figure><h2 id="set-veiwText’s-value"><a href="#set-veiwText’s-value" class="headerlink" title="set veiwText’s value"></a>set veiwText’s value</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//<span class="keyword">in</span> .java</span><br><span class="line">TextView your_view_name=findViewById(R.id.your_view_id); // find target textView</span><br><span class="line">String message=your_view_name.getText().toString(); // get written string <span class="keyword">in</span> this EditText </span><br><span class="line">your_view_name.setText(message); // input message to textView</span><br><span class="line"></span><br><span class="line">//<span class="keyword">in</span> .xml</span><br><span class="line">android:id=<span class="string">&quot;@+id/your_view_name&quot;</span></span><br></pre></td></tr></table></figure><h2 id="Special-parametres"><a href="#Special-parametres" class="headerlink" title="Special parametres"></a>Special parametres</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Edit Text:</span><br><span class="line">android:id=<span class="string">&quot;@+id/editTextTextPersonName&quot;</span></span><br><span class="line">android:hint=<span class="string">&quot;@string/edit_message&quot;</span></span><br><span class="line"></span><br><span class="line">Button:</span><br><span class="line">android:id=<span class="string">&quot;@+id/button&quot;</span></span><br><span class="line">android:onClick=<span class="string">&quot;sendMessage&quot;</span> // behavier <span class="keyword">function</span> name</span><br></pre></td></tr></table></figure><h2 id="Sensors"><a href="#Sensors" class="headerlink" title="Sensors"></a>Sensors</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">private SensorManager sensorManager; // control all msensors</span><br><span class="line">private Sensor sensorName; // represent a sensor</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">//initialize</span><br><span class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        super.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        sensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);</span><br><span class="line">        sensorName = sensorManager.getDefaultSensor(Sensor.%sensorType%);</span><br><span class="line"></span><br><span class="line">        //start listener</span><br><span class="line">        sensorManager.registerListener(this,sensorName,UI); //NORMAL:1, UI:2, GAME:3</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">//get value</span><br><span class="line">    public void onSensorChanged(SensorEvent event) &#123;</span><br><span class="line">        <span class="keyword">if</span> (event.sensor.getType() == Sensor.%sensorType%) //target sensor <span class="built_in">type</span></span><br><span class="line">            sensorName = event.values;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">//stop listener</span><br><span class="line">    protected void <span class="function"><span class="title">onPause</span></span>() &#123;</span><br><span class="line">        super.onPause();</span><br><span class="line">        sensormanager.unregisterListener(this);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">//restart listener</span><br><span class="line">    protected void <span class="function"><span class="title">onResume</span></span>() &#123;</span><br><span class="line">        super.onResume();</span><br><span class="line">        sensorManager.registerListener(this,sensorName,UI); //NORMAL:1, UI:2, GAME:3</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">Name</th><th align="left">sensorType</th></tr></thead><tbody><tr><td align="left">MagneticField</td><td align="left">Sensor.TYPE_MAGNETIC_FIELD</td></tr><tr><td align="left">Accelerometer</td><td align="left">Sensor.TYPE_ACCELEROMETER</td></tr><tr><td align="left">Gyroscope</td><td align="left">Sensor.TYPE_GYROSCOPE</td></tr><tr><td align="left">StepCounter</td><td align="left">Sensor.TYPE_STEP_DETECTOR</td></tr></tbody></table><h2 id="WIFI"><a href="#WIFI" class="headerlink" title="WIFI"></a>WIFI</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">WifiManager wifiManager;</span><br><span class="line">wifiManager = (WifiManager) getApplicationContext().getSystemService(Context.WIFI_SERVICE);</span><br><span class="line"></span><br><span class="line">wifiManager.setWifiEnabled(<span class="literal">true</span>);</span><br><span class="line">wifiManager.startScan();</span><br><span class="line"></span><br><span class="line">List&lt;ScanResult&gt; wifiScanList = wifiManager.getScanResults();</span><br></pre></td></tr></table></figure><h2 id="BlueTooth"><a href="#BlueTooth" class="headerlink" title="BlueTooth"></a>BlueTooth</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">//varibale to hold BluetoothAdapter instance</span><br><span class="line">private BluetoothAdapter BA;</span><br><span class="line">//display list of paired Bluetooth device</span><br><span class="line">private Set&lt;BluetoothDevice&gt; pairedDevices;</span><br><span class="line"></span><br><span class="line">BA = BluetoothAdapter.getDefaultAdapter();</span><br><span class="line"></span><br><span class="line">//get list</span><br><span class="line">pairedDevices = BA.getBondedDevices();</span><br></pre></td></tr></table></figure><h2 id="Location"><a href="#Location" class="headerlink" title="Location"></a>Location</h2><p>note the “onLocationChanged” will not be changes swiftly</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">    super.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">    LocationManager locationManager;</span><br><span class="line">    LocationListener locationListener;</span><br><span class="line"></span><br><span class="line">    locationManager = (LocationManager) getSystemService(Context.LOCATION_SERVICE);</span><br><span class="line">    locationListener = new mylocationlistener();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class mylocationlistener implements  LocationListener&#123;</span><br><span class="line">    @Override</span><br><span class="line">    // called when location  PGS changes</span><br><span class="line">    public void onLocationChanged(@NonNull Location location) &#123;</span><br><span class="line">        <span class="keyword">if</span> (location != null) &#123;</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Map-Location-and-Mark"><a href="#Map-Location-and-Mark" class="headerlink" title="Map Location and Mark"></a>Map Location and Mark</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">//be called when Map page is initialized ready</span><br><span class="line">public void onMapReady(GoogleMap googleMap) &#123;</span><br><span class="line">        mMap = googleMap;</span><br><span class="line"></span><br><span class="line">        // Add a marker <span class="keyword">in</span> Sydney and move the camera</span><br><span class="line">        LatLng Edinburgh = new LatLng(55.953251, -3.188267);</span><br><span class="line">        //add new markers</span><br><span class="line">        mMap.addMarker(new MarkerOptions().position(Edinburgh).title(<span class="string">&quot;Marker in Edinburgh&quot;</span>));</span><br><span class="line">        //move the center of camera to marker</span><br><span class="line">        mMap.moveCamera(CameraUpdateFactory.newLatLng(Edinburgh));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED &amp;&amp; ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) &#123;</span><br><span class="line">            // TODO: Consider calling</span><br><span class="line">            //    ActivityCompat<span class="comment">#requestPermissions</span></span><br><span class="line">            // here to request the missing permissions, and <span class="keyword">then</span> overriding</span><br><span class="line">            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,</span><br><span class="line">            //                                          int[] grantResults)</span><br><span class="line">            // to handle the <span class="keyword">case</span> <span class="built_in">where</span> the user grants the permission. See the documentation</span><br><span class="line">            // <span class="keyword">for</span> ActivityCompat<span class="comment">#requestPermissions for more details.</span></span><br><span class="line">            <span class="built_in">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        //<span class="built_in">enable</span> the location button, move the sign to your current place</span><br><span class="line">        mMap.setMyLocationEnabled(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        mMap.setMapType(GoogleMap.MAP_TYPE_HYBRID);</span><br><span class="line">        mMap.getUiSettings().setCompassEnabled(<span class="literal">true</span>);</span><br><span class="line">        mMap.getUiSettings().setRotateGesturesEnabled(<span class="literal">true</span>);</span><br><span class="line">        mMap.getUiSettings().setScrollGesturesEnabled(<span class="literal">true</span>);</span><br><span class="line">        mMap.getUiSettings().setTiltGesturesEnabled(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="Camera"><a href="#Camera" class="headerlink" title="Camera"></a>Camera</h2><p>the photo parameters are passed by intent<br>Please move to (<a href="https://pipirima.top/2022-2023/Embedded-mobile-and-Wireless-System-Code-Example-7273817ad39d/#Camera">https://pipirima.top/2022-2023/Embedded-mobile-and-Wireless-System-Code-Example-7273817ad39d/#Camera</a>) to check how to take and save a picture</p><h1 id="usful-code-group"><a href="#usful-code-group" class="headerlink" title="usful code group"></a>usful code group</h1><h2 id="intent"><a href="#intent" class="headerlink" title="intent"></a>intent</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">//<span class="keyword">in</span> main class</span><br><span class="line">intent intent=new Intent(this,New_class.class); // create an intent class <span class="built_in">which</span> will communicated with new class</span><br><span class="line">intent.putExtra(<span class="string">&#x27;extras_name&#x27;</span>, <span class="string">&#x27;your_message&#x27;</span>); // put the string into EXTRA_MESSAGE.</span><br><span class="line">startActivity (intent); // running intent</span><br><span class="line"></span><br><span class="line">//<span class="keyword">in</span> new class</span><br><span class="line">Intent intent=getIntent();</span><br><span class="line">string message=intent.getStringExtra(<span class="string">&#x27;extras_name&#x27;</span>);// message will get string value</span><br><span class="line">//you can use intent.getIntExtra(<span class="string">&#x27;extras_name&#x27;</span>) to get <span class="built_in">integer</span> value</span><br></pre></td></tr></table></figure><h2 id="read-battery-states"><a href="#read-battery-states" class="headerlink" title="read battery states"></a>read battery states</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">private IntentFilter ifilter;</span><br><span class="line">//<span class="keyword">in</span> OnCreate</span><br><span class="line">ifilter = new IntentFilter(Intent.ACTION_BATTERY_CHANGED); //ifilter have matched with a <span class="built_in">type</span> of action</span><br><span class="line">registerReceiver(mBatInforReceiver,ifilter); //the receiver will be called when any broadcast matches filter</span><br><span class="line"></span><br><span class="line">//<span class="keyword">in</span> mBatInforReceiver</span><br><span class="line">String action = intent.getAction();</span><br><span class="line"><span class="keyword">if</span> (Intent.ACTION_BATTERY_CHANGED.equals(action))&#123;</span><br><span class="line">    BatteryL=intent.getIntExtra(<span class="string">&quot;level&quot;</span>,0);</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">String</th><th align="left">Constant Value</th></tr></thead><tbody><tr><td align="left">EXTRA_LEVEL</td><td align="left">level</td></tr><tr><td align="left">EXTRA_VOLTAGE</td><td align="left">voltage</td></tr><tr><td align="left">EXTRA_TEMPERATURE</td><td align="left">temperature</td></tr><tr><td align="left">EXTRA_TECHNOLOGY</td><td align="left">technology</td></tr></tbody></table><table><thead><tr><th align="left">EXTRA_STATUS</th><th align="left">status</th></tr></thead><tbody><tr><td align="left">BATTERY_STATUS_CHARGING</td><td align="left">2 (0x00000002)</td></tr><tr><td align="left">BATTERY_STATUS_DISCHARGING</td><td align="left">3 (0x00000003)</td></tr><tr><td align="left">BATTERY_STATUS_NOT_CHARGING</td><td align="left">4 (0x00000004)</td></tr><tr><td align="left">BATTERY_STATUS_FULL</td><td align="left">5 (0x00000005)</td></tr><tr><td align="left">BATTERY_STATUS_UNKNOWN</td><td align="left">1 (0x00000001)</td></tr></tbody></table><table><thead><tr><th align="left">EXTRA_PLUGGED</th><th align="left">plugged</th></tr></thead><tbody><tr><td align="left">BATTERY_PLUGGED_AC</td><td align="left">1 (0x00000001)</td></tr><tr><td align="left">BATTERY_PLUGGED_USB</td><td align="left">2 (0x00000002)</td></tr><tr><td align="left">BATTERY_PLUGGED_WIRELESS</td><td align="left">4 (0x00000004)</td></tr></tbody></table><table><thead><tr><th align="left">EXTRA_HEALTH</th><th align="left">health</th></tr></thead><tbody><tr><td align="left">BATTERY_HEALTH_UNKNOWN</td><td align="left">1 (0x00000001)</td></tr><tr><td align="left">BATTERY_HEALTH_GOOD</td><td align="left">2 (0x00000002)</td></tr><tr><td align="left">BATTERY_HEALTH_DEAD</td><td align="left">4 (0x00000004)</td></tr><tr><td align="left">BATTERY_HEALTH_OVER_VOLTAGE</td><td align="left">5 (0x00000005)</td></tr><tr><td align="left">BATTERY_HEALTH_OVERHEAT</td><td align="left">3 (0x00000003)</td></tr></tbody></table><h2 id="create-onclick-event-on-View"><a href="#create-onclick-event-on-View" class="headerlink" title="create onclick event on View"></a>create onclick event on View</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">imageView.setOnClickListener(new View.<span class="function"><span class="title">OnClickListener</span></span>() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public void onClick(View v) &#123;</span><br><span class="line">                //your code</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><h2 id="count-down-timer"><a href="#count-down-timer" class="headerlink" title="count down timer"></a>count down timer</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">CountDownTimer countDownTimer = new CountDownTimer(500, 1000) &#123;</span><br><span class="line"></span><br><span class="line">        public void onTick(long millisUntilFinished) &#123;</span><br><span class="line">            // <span class="keyword">do</span> something after 0.5s</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public void <span class="function"><span class="title">onFinish</span></span>() &#123;</span><br><span class="line">            // <span class="keyword">do</span> something end after 1s</span><br><span class="line">            start(); //restart the timer</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure><h2 id="permission"><a href="#permission" class="headerlink" title="permission"></a>permission</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">//<span class="keyword">in</span> AndroidManifest.xml, <span class="keyword">in</span> &lt;manifest&gt;</span><br><span class="line">&lt;uses-permission android:name=<span class="string">&quot;android.permission.XXXX&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">//<span class="keyword">in</span> main.java</span><br><span class="line">private static final int REQUEST_ID_READ_WRITE_PERMISSION = 99;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        super.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= 23) &#123;</span><br><span class="line">            //check <span class="keyword">if</span> we have <span class="built_in">read</span> or write permission</span><br><span class="line">            int myPermission = ActivityCompat.checkSelfPermission(this, Manifest.permission.XXXX);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (myPermission != PackageManager.PERMISSION_GRANTED) &#123;</span><br><span class="line">                //prompt the user <span class="keyword">if</span> dont have permission</span><br><span class="line">                this.requestPermissions(</span><br><span class="line">                        new String[]&#123;Manifest.permission.XXXX&#125;,</span><br><span class="line">                        REQUEST_ID_READ_WRITE_PERMISSION</span><br><span class="line">                );</span><br><span class="line">                <span class="built_in">return</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">//When you have the request results</span><br><span class="line">    @Override</span><br><span class="line">    public void onRequestPermissionsResult(int requestCode, String permissions[], int[] grantResults) &#123;</span><br><span class="line">        super.onRequestPermissionsResult(requestCode, permissions, grantResults);</span><br><span class="line">        switch (requestCode) &#123;</span><br><span class="line">            <span class="keyword">case</span> REQUEST_ID_READ_WRITE_PERMISSION: &#123;</span><br><span class="line">                //(<span class="built_in">read</span> and write and camera) permissions granted</span><br><span class="line">                <span class="keyword">if</span> (grantResults.length &gt; 1 &amp;&amp;</span><br><span class="line">                        grantResults[0] == PackageManager.PERMISSION_GRANTED) &#123;</span><br><span class="line">                    Toast.makeText(this, <span class="string">&quot;Permission granted!&quot;</span>, Toast.LENGTH_LONG).show();</span><br><span class="line">                &#125;</span><br><span class="line">                //cancelled or denied</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    Toast.makeText(this, <span class="string">&quot;Permission denied&quot;</span>, Toast.LENGTH_LONG).show();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h1><h2 id="linked-Strings"><a href="#linked-Strings" class="headerlink" title="linked Strings"></a>linked Strings</h2><p>in res -&gt; values -&gt; strings.xml, we can set some default variable strings, in form like</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;resources&gt;</span><br><span class="line">    &lt;string name=<span class="string">&quot;app_name&quot;</span>&gt;My Application&lt;/string&gt;</span><br><span class="line">    &lt;string name=<span class="string">&quot;edit_message&quot;</span>&gt;Enter a message&lt;/string&gt;</span><br><span class="line">    &lt;string name=<span class="string">&quot;button_send&quot;</span>&gt;Send&lt;/string&gt;</span><br><span class="line">&lt;/resources&gt;</span><br></pre></td></tr></table></figure><p><img src="/2022-2023/Embedded-mobile-and-Wireless-System-e97c63b4991e/001.png" alt="001.png"><br>this code is like:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">android:hint=<span class="string">&quot;@string/edit_message&quot;</span> // <span class="built_in">which</span> shows <span class="string">&quot;Enter a message&quot;</span> <span class="keyword">in</span> layout</span><br></pre></td></tr></table></figure><h2 id="Google-Map-API"><a href="#Google-Map-API" class="headerlink" title="Google Map API"></a>Google Map API</h2><p>goto (<a href="https://developers.google.com/maps/documentation/android/start#get-key">https://developers.google.com/maps/documentation/android/start#get-key</a>), get Google API<br>copy API code, copy to file “res/values/google_maps_api.xml”</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;string name=<span class="string">&quot;google_maps_key&quot;</span> templateMergeStrategy=<span class="string">&quot;preserve&quot;</span> translatable=<span class="string">&quot;false&quot;</span>&gt;<span class="string">&quot;Copy API Here&quot;</span>&lt;/string&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> academic material </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2022-2023 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>n分频</title>
      <link href="/FPGA/n%E5%88%86%E9%A2%91-5b4ca775bb5a/"/>
      <url>/FPGA/n%E5%88%86%E9%A2%91-5b4ca775bb5a/</url>
      
        <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>使用计数器或触发器进行分频</p><span id="more"></span><h1 id="偶数分频"><a href="#偶数分频" class="headerlink" title="偶数分频"></a>偶数分频</h1><p>如果是2分频就一个D-FF就行</p><p>其他偶数分频：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">`timescale 1ns / 1ps</span><br><span class="line"></span><br><span class="line">module even_divider(</span><br><span class="line">    input [3:0] divider,</span><br><span class="line">    input clk,</span><br><span class="line">    input rst,</span><br><span class="line">    output reg out_clk</span><br><span class="line">    );</span><br><span class="line">    </span><br><span class="line">reg [2:0] count=3<span class="string">&#x27;d0;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">always @ (posedge clk or negedge rst) begin</span></span><br><span class="line"><span class="string">    if (!rst) begin</span></span><br><span class="line"><span class="string">        count &lt;= 3&#x27;</span>d0;</span><br><span class="line">        out_clk &lt;= 1<span class="string">&#x27;d0;</span></span><br><span class="line"><span class="string">    end</span></span><br><span class="line"><span class="string">end</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// N/2-1</span></span><br><span class="line"><span class="string">always @(posedge clk) begin</span></span><br><span class="line"><span class="string">        if (count==(divider/2)-1) begin</span></span><br><span class="line"><span class="string">            count &lt;= 3&#x27;</span>d0;</span><br><span class="line">            out_clk &lt;= !out_clk;</span><br><span class="line">        end</span><br><span class="line">        <span class="keyword">else</span> begin</span><br><span class="line">            count &lt;= count+1;</span><br><span class="line">        end</span><br><span class="line">end</span><br><span class="line">    </span><br><span class="line">endmodule</span><br></pre></td></tr></table></figure><h1 id="奇数分频"><a href="#奇数分频" class="headerlink" title="奇数分频"></a>奇数分频</h1><p>out_clk=p_clk | n_clk<br>p_clk: switch in posedge clk when count==N-1 or count==(N-1)/2<br>n_clk: same, but check in negedge</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">`timescale 1ns / 1ps</span><br><span class="line"></span><br><span class="line">module odd_divider(</span><br><span class="line">    input [3:0] divider,</span><br><span class="line">    input clk,</span><br><span class="line">    input rst,</span><br><span class="line">    output out_clk</span><br><span class="line">    );</span><br><span class="line">    </span><br><span class="line">reg p_clk=1<span class="string">&#x27;d0, n_clk=1&#x27;</span>d0;</span><br><span class="line">reg [3:0] count;</span><br><span class="line"></span><br><span class="line">assign out_clk=p_clk|n_clk;</span><br><span class="line">    </span><br><span class="line">always @(posedge clk or negedge rst) begin</span><br><span class="line">    <span class="keyword">if</span> (!rst) begin</span><br><span class="line">        count &lt;= 4<span class="string">&#x27;d0;</span></span><br><span class="line"><span class="string">    end</span></span><br><span class="line"><span class="string">    else if (count == divider-1) begin</span></span><br><span class="line"><span class="string">        count &lt;= 4&#x27;</span>d0;</span><br><span class="line">    end</span><br><span class="line">    <span class="keyword">else</span> begin</span><br><span class="line">        count &lt;= count+1<span class="string">&#x27;d1;</span></span><br><span class="line"><span class="string">    end</span></span><br><span class="line"><span class="string">end</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">always @(posedge clk or negedge rst) begin</span></span><br><span class="line"><span class="string">    if (!rst) begin</span></span><br><span class="line"><span class="string">        p_clk &lt;= 1&#x27;</span>d0;</span><br><span class="line">    end</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (count==divider-1<span class="string">&#x27;d1 || count==(divider-1&#x27;</span>d1)/2) begin</span><br><span class="line">        p_clk &lt;= !p_clk;</span><br><span class="line">    end</span><br><span class="line">    <span class="keyword">else</span> begin</span><br><span class="line">        p_clk &lt;= p_clk;</span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">always @(negedge clk or negedge rst) begin</span><br><span class="line">    <span class="keyword">if</span> (!rst) begin</span><br><span class="line">        n_clk &lt;= 1<span class="string">&#x27;d0;</span></span><br><span class="line"><span class="string">    end</span></span><br><span class="line"><span class="string">    else if (count==divider-1&#x27;</span>d1 || count==(divider-1<span class="string">&#x27;d1)/2) begin</span></span><br><span class="line"><span class="string">        n_clk &lt;= !n_clk;</span></span><br><span class="line"><span class="string">    end</span></span><br><span class="line"><span class="string">    else begin</span></span><br><span class="line"><span class="string">        n_clk &lt;= n_clk;</span></span><br><span class="line"><span class="string">    end</span></span><br><span class="line"><span class="string">end</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">endmodule</span></span><br></pre></td></tr></table></figure><h1 id="testbench"><a href="#testbench" class="headerlink" title="testbench"></a>testbench</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">`timescale 1ns / 1ps</span><br><span class="line"></span><br><span class="line">module test_bench();</span><br><span class="line"></span><br><span class="line">parameter [3:0] divider=3;</span><br><span class="line"></span><br><span class="line">reg clk,rst;</span><br><span class="line">wire out_clk;</span><br><span class="line"></span><br><span class="line">always <span class="comment">#10 clk = !clk;</span></span><br><span class="line"></span><br><span class="line">odd_divider UUT(</span><br><span class="line">    .divider(divider),</span><br><span class="line">    .clk(clk),</span><br><span class="line">    .rst(rst),</span><br><span class="line">    .out_clk(out_clk)</span><br><span class="line">    );</span><br><span class="line">    </span><br><span class="line">initial begin</span><br><span class="line">    clk=0; rst=0;</span><br><span class="line">    <span class="comment">#40 rst=1;</span></span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">endmodule</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> FPGA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> FPGA </tag>
            
            <tag> HDL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vivado tutorial</title>
      <link href="/FPGA/Vivado-tutorial-1616cdeb4195/"/>
      <url>/FPGA/Vivado-tutorial-1616cdeb4195/</url>
      
        <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>关于如何使用Vivado编写Verilog, 仿真，综合，上板子教程</p><span id="more"></span><h1 id="start"><a href="#start" class="headerlink" title="start"></a>start</h1><ol><li>Create new programe -&gt; Next -&gt; set project name and address</li><li>select Project types: RTL Project: the most common project type, design Verilog or VHDL programe. have IP integrator, generate IP, RTL analysis, synthesis, implementation, design planning</li><li>Create new source, can be ignored</li><li>default</li><li>Define module, click “bus” if have multi-bits data stream</li></ol><h1 id="add-files"><a href="#add-files" class="headerlink" title="add files"></a>add files</h1><ol><li>File -&gt; add sources -&gt; add or create design source -&gt; “+” -&gt; add file -&gt; enter file name and press OK -&gt; finish<br><img src="/FPGA/Vivado-tutorial-1616cdeb4195/001.png" alt="001.png"></li><li>set port names. click “Bus” is this port has multi-bits -&gt; OK</li><li>new file will be generated<br><img src="/FPGA/Vivado-tutorial-1616cdeb4195/002.png" alt="002.png"></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">`timescale 1ns / 1ps</span><br><span class="line"></span><br><span class="line">module <span class="built_in">test</span>(</span><br><span class="line">    input rst,</span><br><span class="line">    input clk,</span><br><span class="line">    output [3:0] cmd</span><br><span class="line">    );</span><br><span class="line">    </span><br><span class="line">reg [3:0] value=0;</span><br><span class="line">    </span><br><span class="line">assign cmd=value;</span><br><span class="line">    </span><br><span class="line">always@ (posedge clk or negedge rst) begin</span><br><span class="line">    <span class="keyword">if</span> (!rst) begin</span><br><span class="line">        value&lt;=0;</span><br><span class="line">    end</span><br><span class="line">    value&lt;=value+1;</span><br><span class="line">end</span><br><span class="line">    </span><br><span class="line">endmodule</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="add-testbench-and-simulation"><a href="#add-testbench-and-simulation" class="headerlink" title="add testbench and simulation"></a>add testbench and simulation</h1><ol><li>File -&gt; add sources -&gt; add or create simularion source -&gt; “+” -&gt; add file -&gt; enter file name and press OK -&gt; finish</li><li>set reg and wire</li><li>set initial</li><li>import source and set all variables</li><li>the imported source file will be folded under testbench.<br><img src="/FPGA/Vivado-tutorial-1616cdeb4195/003.png" alt="003.png"></li><li>to set top simulation file:<br><img src="/FPGA/Vivado-tutorial-1616cdeb4195/004.png" alt="004.png"></li><li>left bar, Simulation -&gt; run simulation</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">`timescale 1ns / 1ps</span><br><span class="line"></span><br><span class="line">module test_bench();</span><br><span class="line"></span><br><span class="line">reg clk;</span><br><span class="line">reg rst;</span><br><span class="line">wire [3:0] cmd;</span><br><span class="line"></span><br><span class="line">always <span class="comment">#10 clk=!clk;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">test</span> UUT (</span><br><span class="line">    .rst(rst),</span><br><span class="line">    .clk(clk),</span><br><span class="line">    .cmd(cmd)</span><br><span class="line">    );</span><br><span class="line">    </span><br><span class="line">initial begin</span><br><span class="line">    rst=0; clk=0;</span><br><span class="line">    <span class="comment">#40 rst=1;</span></span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">endmodule</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> FPGA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> APP </tag>
            
            <tag> FPGA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FSM 状态机</title>
      <link href="/FPGA/FSM-%E7%8A%B6%E6%80%81%E6%9C%BA-357296d8bb97/"/>
      <url>/FPGA/FSM-%E7%8A%B6%E6%80%81%E6%9C%BA-357296d8bb97/</url>
      
        <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>Mealy, Moore状态机；一，二，三段式状态机代码</p><span id="more"></span><h1 id="Mealy-and-Moore"><a href="#Mealy-and-Moore" class="headerlink" title="Mealy and Moore"></a>Mealy and Moore</h1><p>Mealy状态机：时序逻辑的输出不仅取决于当前状态，还与输入有关；<br>Moore状态机：时序逻辑的输出只与当前状态有关。</p><h1 id="test-bench"><a href="#test-bench" class="headerlink" title="test bench"></a>test bench</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">`timescale 1ns / 1ps</span><br><span class="line"></span><br><span class="line">module FSM_test();</span><br><span class="line"></span><br><span class="line">reg clk=1<span class="string">&#x27;d0, rst=1&#x27;</span>d0, <span class="keyword">in</span>=1<span class="string">&#x27;d0;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">wire [2:0] out;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">always #10 clk=!clk;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">One_part UUT (</span></span><br><span class="line"><span class="string">    .clk(clk),</span></span><br><span class="line"><span class="string">    .rst(rst),</span></span><br><span class="line"><span class="string">    .in(in),</span></span><br><span class="line"><span class="string">    .out(out)</span></span><br><span class="line"><span class="string">    );</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">initial begin</span></span><br><span class="line"><span class="string">    #40 rst=1&#x27;</span>d1;</span><br><span class="line">    <span class="comment">#40 in=1&#x27;d1;</span></span><br><span class="line">    <span class="comment">#80 in=1&#x27;d0;</span></span><br><span class="line">    <span class="comment">#40 in=1&#x27;d1;</span></span><br><span class="line">    <span class="comment">#40 in=1&#x27;d0;</span></span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">endmodule</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="一段式"><a href="#一段式" class="headerlink" title="一段式"></a>一段式</h1><p>只有一个always block，把所有的逻辑（输入、输出、状态）都在一个always block的时序逻辑中实现<br>但是不利于维护<br><img src="/FPGA/FSM-%E7%8A%B6%E6%80%81%E6%9C%BA-357296d8bb97/001.png" alt="001.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">`timescale 1ns / 1ps</span><br><span class="line"></span><br><span class="line">module One_part(</span><br><span class="line">    input clk, rst,</span><br><span class="line">    input <span class="keyword">in</span>,</span><br><span class="line">    output [2:0] out</span><br><span class="line">    );</span><br><span class="line">    </span><br><span class="line">reg [1:0] state=2<span class="string">&#x27;d0;</span></span><br><span class="line"><span class="string">reg [2:0] out_d=3&#x27;</span>d0;</span><br><span class="line"></span><br><span class="line">assign out=out_d;</span><br><span class="line"></span><br><span class="line">always @(posedge clk or negedge rst) begin</span><br><span class="line">    <span class="keyword">if</span> (!rst) begin</span><br><span class="line">        state &lt;= 2<span class="string">&#x27;d0;</span></span><br><span class="line"><span class="string">    end</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    else begin</span></span><br><span class="line"><span class="string">        case (state)</span></span><br><span class="line"><span class="string">            2&#x27;</span>d0: begin</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">in</span>) begin //输入</span><br><span class="line">                    state &lt;= 2<span class="string">&#x27;d1; //判断</span></span><br><span class="line"><span class="string">                    out_d &lt;= 3&#x27;</span>d2; //输出</span><br><span class="line">                end</span><br><span class="line">                <span class="keyword">else</span> begin</span><br><span class="line">                    state &lt;= 2<span class="string">&#x27;d1;</span></span><br><span class="line"><span class="string">                    out_d &lt;= 3&#x27;</span>d0;</span><br><span class="line">                end</span><br><span class="line">            end</span><br><span class="line">            </span><br><span class="line">            2<span class="string">&#x27;d1: begin</span></span><br><span class="line"><span class="string">                if (in) begin</span></span><br><span class="line"><span class="string">                    state &lt;= 2&#x27;</span>d2;</span><br><span class="line">                    out_d &lt;= 3<span class="string">&#x27;d3;</span></span><br><span class="line"><span class="string">                end</span></span><br><span class="line"><span class="string">                else begin</span></span><br><span class="line"><span class="string">                    state &lt;= 2&#x27;</span>d0;</span><br><span class="line">                    out_d &lt;= 3<span class="string">&#x27;d8;</span></span><br><span class="line"><span class="string">                end</span></span><br><span class="line"><span class="string">            end</span></span><br><span class="line"><span class="string">            </span></span><br><span class="line"><span class="string">            2&#x27;</span>d2: begin</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">in</span>) begin</span><br><span class="line">                    state &lt;= 2<span class="string">&#x27;d3;</span></span><br><span class="line"><span class="string">                    out_d &lt;= 3&#x27;</span>d4;</span><br><span class="line">                end</span><br><span class="line">                <span class="keyword">else</span> begin</span><br><span class="line">                    state &lt;= 2<span class="string">&#x27;d2;</span></span><br><span class="line"><span class="string">                    out_d &lt;= 3&#x27;</span>d7;</span><br><span class="line">                end</span><br><span class="line">            end</span><br><span class="line">            </span><br><span class="line">            2<span class="string">&#x27;d3: begin</span></span><br><span class="line"><span class="string">                if (in) begin</span></span><br><span class="line"><span class="string">                    state &lt;= 2&#x27;</span>d1;</span><br><span class="line">                    out_d &lt;= 3<span class="string">&#x27;d5;</span></span><br><span class="line"><span class="string">                end</span></span><br><span class="line"><span class="string">                else begin</span></span><br><span class="line"><span class="string">                    state &lt;= 2&#x27;</span>d2;</span><br><span class="line">                    out_d &lt;= 3<span class="string">&#x27;d6;</span></span><br><span class="line"><span class="string">                end</span></span><br><span class="line"><span class="string">            end</span></span><br><span class="line"><span class="string">            </span></span><br><span class="line"><span class="string">            default: state &lt;= 2&#x27;</span>d0;</span><br><span class="line">        endcase</span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">endmodule</span><br></pre></td></tr></table></figure><h1 id="二段式"><a href="#二段式" class="headerlink" title="二段式"></a>二段式</h1><p>有两个always block，把时序逻辑和组合逻辑分隔开来。时序逻辑里进行当前状态和下一状态的切换，组合逻辑实现各个输入、输出以及状态判断。<br>可能存在竞争和冒险，产生毛刺<br>把第二和第三段合在一起<br><img src="/FPGA/FSM-%E7%8A%B6%E6%80%81%E6%9C%BA-357296d8bb97/002.png" alt="002.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">`timescale 1ns / 1ps</span><br><span class="line"></span><br><span class="line">module two_parts(</span><br><span class="line">    input clk, rst,</span><br><span class="line">    input <span class="keyword">in</span>,</span><br><span class="line">    output [2:0] out</span><br><span class="line">    );</span><br><span class="line">    </span><br><span class="line">reg [1:0] current_state=2<span class="string">&#x27;d0, next_state=2&#x27;</span>d0;</span><br><span class="line">reg [2:0] out_d=3<span class="string">&#x27;d0;</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">assign out=out_d;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">always @(posedge clk or negedge rst) begin</span></span><br><span class="line"><span class="string">    if (!rst) begin</span></span><br><span class="line"><span class="string">        current_state &lt;= 1&#x27;</span>d0;</span><br><span class="line">    end</span><br><span class="line">    <span class="keyword">else</span> begin</span><br><span class="line">        current_state &lt;= next_state;</span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">always @(*) begin</span><br><span class="line">    <span class="keyword">case</span> (current_state)</span><br><span class="line">        2<span class="string">&#x27;d0: begin</span></span><br><span class="line"><span class="string">            out_d &lt;= 3&#x27;</span>d0;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">in</span>) begin</span><br><span class="line">                next_state &lt;= 2<span class="string">&#x27;d1;</span></span><br><span class="line"><span class="string">            end</span></span><br><span class="line"><span class="string">            else begin</span></span><br><span class="line"><span class="string">                next_state &lt;= 2&#x27;</span>d0;</span><br><span class="line">            end</span><br><span class="line">        end</span><br><span class="line">        </span><br><span class="line">        2<span class="string">&#x27;d1: begin</span></span><br><span class="line"><span class="string">            out_d &lt;= 3&#x27;</span>d1;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">in</span>) begin</span><br><span class="line">                next_state &lt;= 2<span class="string">&#x27;d2;</span></span><br><span class="line"><span class="string">            end</span></span><br><span class="line"><span class="string">            else begin</span></span><br><span class="line"><span class="string">                next_state &lt;= 2&#x27;</span>d0;</span><br><span class="line">            end</span><br><span class="line">        end</span><br><span class="line">            </span><br><span class="line">        2<span class="string">&#x27;d2: begin</span></span><br><span class="line"><span class="string">            out_d &lt;= 3&#x27;</span>d2;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">in</span>) begin</span><br><span class="line">                next_state &lt;= 2<span class="string">&#x27;d3;</span></span><br><span class="line"><span class="string">            end</span></span><br><span class="line"><span class="string">            else begin</span></span><br><span class="line"><span class="string">                next_state &lt;= 2&#x27;</span>d2;</span><br><span class="line">            end</span><br><span class="line">        end</span><br><span class="line">        </span><br><span class="line">        2<span class="string">&#x27;d3: begin</span></span><br><span class="line"><span class="string">            out_d &lt;= 3&#x27;</span>d3;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">in</span>) begin</span><br><span class="line">                next_state &lt;= 2<span class="string">&#x27;d1;</span></span><br><span class="line"><span class="string">            end</span></span><br><span class="line"><span class="string">            else begin</span></span><br><span class="line"><span class="string">                next_state &lt;= 2&#x27;</span>d2;</span><br><span class="line">            end</span><br><span class="line">        end</span><br><span class="line">        </span><br><span class="line">    endcase</span><br><span class="line">end</span><br><span class="line">    </span><br><span class="line">endmodule</span><br></pre></td></tr></table></figure><h1 id="三段式"><a href="#三段式" class="headerlink" title="三段式"></a>三段式</h1><p>一个时序逻辑采用同步时序的方式描述状态转移，一个采用组合逻辑的方式判断状态转移条件、描述状态转移规律，第三个模块使用同步时序的方式描述每个状态的输出。<br>解决了两段式组合逻辑的毛刺问题，但是从资源消耗的角度上看，三段式的资源消耗多一些.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">`timescale 1ns / 1ps</span><br><span class="line"></span><br><span class="line">module three_parts(</span><br><span class="line">    input clk, rst,</span><br><span class="line">    input <span class="keyword">in</span>,</span><br><span class="line">    output [2:0] out</span><br><span class="line">    );</span><br><span class="line">    </span><br><span class="line">reg [1:0] current_state=2<span class="string">&#x27;d0, next_state=2&#x27;</span>d0;</span><br><span class="line">reg [2:0] out_d=3<span class="string">&#x27;d0;</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">assign out=out_d;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">always @(posedge clk or negedge rst) begin</span></span><br><span class="line"><span class="string">    if (!rst) begin</span></span><br><span class="line"><span class="string">        current_state &lt;= 1&#x27;</span>d0;</span><br><span class="line">    end</span><br><span class="line">    <span class="keyword">else</span> begin</span><br><span class="line">        current_state &lt;= next_state;</span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">always @(*) begin</span><br><span class="line">    <span class="keyword">case</span> (current_state)</span><br><span class="line">        2<span class="string">&#x27;d0: begin</span></span><br><span class="line"><span class="string">            if (in) begin</span></span><br><span class="line"><span class="string">                next_state &lt;= 2&#x27;</span>d1;</span><br><span class="line">            end</span><br><span class="line">            <span class="keyword">else</span> begin</span><br><span class="line">                next_state &lt;= 2<span class="string">&#x27;d0;</span></span><br><span class="line"><span class="string">            end</span></span><br><span class="line"><span class="string">        end</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">        2&#x27;</span>d1: begin</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">in</span>) begin</span><br><span class="line">                next_state &lt;= 2<span class="string">&#x27;d2;</span></span><br><span class="line"><span class="string">            end</span></span><br><span class="line"><span class="string">            else begin</span></span><br><span class="line"><span class="string">                next_state &lt;= 2&#x27;</span>d0;</span><br><span class="line">            end</span><br><span class="line">        end</span><br><span class="line">            </span><br><span class="line">        2<span class="string">&#x27;d2: begin</span></span><br><span class="line"><span class="string">            if (in) begin</span></span><br><span class="line"><span class="string">                next_state &lt;= 2&#x27;</span>d3;</span><br><span class="line">            end</span><br><span class="line">            <span class="keyword">else</span> begin</span><br><span class="line">                next_state &lt;= 2<span class="string">&#x27;d2;</span></span><br><span class="line"><span class="string">            end</span></span><br><span class="line"><span class="string">        end</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">        2&#x27;</span>d3: begin</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">in</span>) begin</span><br><span class="line">                next_state &lt;= 2<span class="string">&#x27;d1;</span></span><br><span class="line"><span class="string">            end</span></span><br><span class="line"><span class="string">            else begin</span></span><br><span class="line"><span class="string">                next_state &lt;= 2&#x27;</span>d2;</span><br><span class="line">            end</span><br><span class="line">        end</span><br><span class="line">        </span><br><span class="line">    endcase</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">always @(posedge clk) begin</span><br><span class="line">    <span class="keyword">case</span> (current_state)</span><br><span class="line">        2<span class="string">&#x27;d0: begin</span></span><br><span class="line"><span class="string">            out_d &lt;= 3&#x27;</span>d0;</span><br><span class="line">        end</span><br><span class="line">        </span><br><span class="line">        2<span class="string">&#x27;d1: begin</span></span><br><span class="line"><span class="string">            out_d &lt;= 3&#x27;</span>d1;</span><br><span class="line">        end</span><br><span class="line">            </span><br><span class="line">        2<span class="string">&#x27;d2: begin</span></span><br><span class="line"><span class="string">            out_d &lt;= 3&#x27;</span>d2;</span><br><span class="line">        end</span><br><span class="line">        </span><br><span class="line">        2<span class="string">&#x27;d3: begin</span></span><br><span class="line"><span class="string">            out_d &lt;= 3&#x27;</span>d3;</span><br><span class="line">        end</span><br><span class="line">    </span><br><span class="line">    endcase</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">endmodule</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> FPGA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> FPGA </tag>
            
            <tag> HDL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Principle of Microelectronics</title>
      <link href="/2022-2023/Principle-of-Microelectronics-7a974485f953/"/>
      <url>/2022-2023/Principle-of-Microelectronics-7a974485f953/</url>
      
        <content type="html"><![CDATA[<p>Formular sheets and slids: (<a href="https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/">https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/</a>)</p><span id="more"></span><h1 id="1-1"><a href="#1-1" class="headerlink" title="1-1"></a>1-1</h1><h2 id="Blackbody-radiation"><a href="#Blackbody-radiation" class="headerlink" title="Blackbody radiation"></a>Blackbody radiation</h2><p>Blackbody radiation is the thermal electromagnetic radiation within or emanating from a body in thermodynamic equilibrium with its environment, or emitted by a black body (an idealized physical body that absorbs all incident electromagnetic radiation) with a temperature above absolute zero.<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-1-1.png" alt="1-1-1.png"><br>The higher the temperature of the body, the shorter the wavelength of the peak of the spectrum, and the higher the intensity of the radiation. the peak wavelength is in range of infra-red</p><h2 id="Photoelectric-effect"><a href="#Photoelectric-effect" class="headerlink" title="Photoelectric effect"></a>Photoelectric effect</h2><p>A physical phenomenon in which electrons are emitted from the surface of a metal or other material when it is exposed to light or other electromagnetic radiation.<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-1-2.png" alt="1-1-2.png"></p><ol><li>Cathode part metal contact light</li><li>electrons absorb energy in one photon</li><li>if energy permitted, it will emitted to anode material<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-1-3.png" alt="1-1-3.png"><br>the electron has a constant energy required freuqnecy f0. if incident light freuqnecy f&gt;f0, energy from photon is bigger than required energy level in electron, hence electron can be emitted.<br>the ourput current will be constant with stable light luminance. as one electron can only absorbe energy from one photon. the total current is fixed</li></ol><p>the energy which allowed an electron just been emitted is called work function = eϕ, where ϕ is in voltage<br>the total kinetic energy an electron has when it is just been emitted is = photon energy – work function:<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-1-4.png" alt="1-1-4.png"></p><h2 id="Bohr-atom"><a href="#Bohr-atom" class="headerlink" title="Bohr atom"></a>Bohr atom</h2><p>Bohr atom is the atom with central nucleus with electrons travelling in a circular orbit around it<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-1-5.png" alt="1-1-5.png"><br>coulomb force on the electron due to the e-field of the positive nucleus is just sufficient to provide inward acceleration for circular motion at a constant radius r<br>the electrons can only allowed to make a transition from one energy level to another level.<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-1-6.png" alt="1-1-6.png"></p><h2 id="Particle-wave-duality"><a href="#Particle-wave-duality" class="headerlink" title="Particle-wave duality"></a>Particle-wave duality</h2><p><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-1-7.png" alt="1-1-7.png"><br>The momentum of the photons is:<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-1-8.png" alt="1-1-8.png"><br>where p is momentum in kg.m/s, h is constant, λ is wavelength</p><p>a particle can both conatins wave and particle properties</p><h2 id="wave-packet"><a href="#wave-packet" class="headerlink" title="wave-packet"></a>wave-packet</h2><p>Wave-packets are useful for describing the behavior of particles because they allow us to describe the probability of finding a particle at a specific location at a specific time.<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-1-9.png" alt="1-1-9.png"><br>β=2*pi/λ<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-1-10.png" alt="1-1-10.png"><br>vph=vλ<br>vph is phase velocity, that represents the velocity of phases along propagation direction of the wave (small signal shape)<br>it describes frequency and wavelength of the signal<br>vph is possible to faster than light</p><p><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-1-11.png" alt="1-1-11.png"><br>group velocity is the shape of wave-packet (whole big shape). group velocity is usually less or euqal to phase velocity</p><p><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-1-12.png" alt="1-1-12.png"></p><h1 id="Schroedinger-equation"><a href="#Schroedinger-equation" class="headerlink" title="Schroedinger equation"></a>Schroedinger equation</h1><h2 id="1D-Schroedinger-equation"><a href="#1D-Schroedinger-equation" class="headerlink" title="1D Schroedinger equation"></a>1D Schroedinger equation</h2><p><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-2-1.png" alt="1-2-1.png"><br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-2-2.png" alt="1-2-2.png"><br>this equation governs the behaviour in 1D of all particles, but no proof method</p><h2 id="3D-equation"><a href="#3D-equation" class="headerlink" title="3D equation"></a>3D equation</h2><p><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-2-3.png" alt="1-2-3.png"></p><p>this equation can be simplifier by remove time-position dependent part:<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-2-4.png" alt="1-2-4.png"><br>where Ψ is a function of space and time coordinates. it is one particle’s position in fixed time T.<br>Ψ is usually a complex number<br>and |Ψ|^2 ΔV is proportional to the<br>probability that a particle will be found in the volume element ΔV</p><p>like for the probaibility to find a particle in range x+dx,y+dy,z+dz:<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-2-5.png" alt="1-2-5.png"></p><h2 id="Normalization"><a href="#Normalization" class="headerlink" title="Normalization"></a>Normalization</h2><p>From previous function, it is clear that:<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-2-6.png" alt="1-2-6.png"><br>please note Ψ must in continious</p><h2 id="Uncertainty-principle"><a href="#Uncertainty-principle" class="headerlink" title="Uncertainty principle"></a>Uncertainty principle</h2><p>the accurate position and energy value can not be measured in same time.<br>this is mainly beacuse un-accurated measure methode. the measurment from one parameter will influence measurement to another parameter.<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-2-7.png" alt="1-2-7.png"><br>the accurency of x increase range of f<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-2-8.png" alt="1-2-8.png"><br>(?)</p><h2 id="particles-in-potential-box"><a href="#particles-in-potential-box" class="headerlink" title="particles in potential box"></a>particles in potential box</h2><p><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-2-9.png" alt="1-2-9.png"><br>second plot is the probability where the particle is, when x axis is range form [0,d]. the sum of this wave may be the constant vlaue 1.<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-2-10.png" alt="1-2-10.png"><br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-2-11.png" alt="1-2-11.png"><br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-2-12.png" alt="1-2-12.png"><br>it can be simplified as:<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-2-13.png" alt="1-2-13.png"><br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-2-14.png" alt="1-2-14.png"></p><p><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-2-15.png" alt="1-2-15.png"><br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-2-16.png" alt="1-2-16.png"><br>The total energy of the bound particle has only a discrete set of allowed values:<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-2-17.png" alt="1-2-17.png"></p><p>from page 31<br>(?)</p><h1 id="Band-gap"><a href="#Band-gap" class="headerlink" title="Band gap"></a>Band gap</h1><p><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-3-1.png" alt="1-3-1.png"><br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-3-2.png" alt="1-3-2.png"><br>1D idealised model of an array of atoms in a solid Kronig-Penney model (square potentials)<br>the level of potential energy can be seen as probability of electrons</p><p>if 0 &lt;= x &lt;= b, V=0<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-3-3.png" alt="1-3-3.png"><br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-3-8.png" alt="1-3-8.png"></p><p>if x&gt;b, V&gt;E,<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-3-4.png" alt="1-3-4.png"><br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-3-5.png" alt="1-3-5.png"></p><p>Now if the w becomes vary small and L becomes infinity, wV will be constant, and equation changes as:<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-3-6.png" alt="1-3-6.png"><br>Uk is the Bloch function, a periodic function which varies with the same periodicity as the S equation is in periodically</p><p><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-3-7.png" alt="1-3-7.png"><br>and note E=h^2/2m^2, where E is free electron case. the electrons can move freely in solid</p><p><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-3-9.png" alt="1-3-9.png"><br>x-axis is momentum<br>this figure shows all possible position that electrons will be</p><p>hence, energy gap will appeared between soild material</p><p>it will be influenced by electric field,<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-3-10.png" alt="1-3-10.png"><br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-3-11.png" alt="1-3-11.png"></p><p><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-3-12.png" alt="1-3-12.png"><br>from a -&gt; b, energy increased, velocity is also increase<br>from c -&gt; d, energy increased, velocity is decreased (trend &lt;1)</p><p>from page 29 (?)</p><h1 id="Metal-semiconductor-contacts"><a href="#Metal-semiconductor-contacts" class="headerlink" title="Metal-semiconductor contacts"></a>Metal-semiconductor contacts</h1><p>When contact is made between two dissimilar materials, a contact potential (barrier) typically develops at the interface between the materials<br>can be categorised as non-rectifying (ohmic) and rectifying (Schottky barrier type diodes)<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-4-1.png" alt="1-4-1.png"><br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-4-2.png" alt="1-4-2.png"><br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-4-3.png" alt="1-4-3.png"></p><p>contact:<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-4-4.png" alt="1-4-4.png"><br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-4-5.png" alt="1-4-5.png"></p><p><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-4-6.png" alt="1-4-6.png"></p><p>Ohmic contact:<br>allows current to flow in either direction with contact resistance as low as possible (no barrier)<br>if Ψm&lt;Ψs:<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-4-7.png" alt="1-4-7.png"><br>celectrons with no bias<br>and because majority is electrons (n-type), hence this is ohmic contact</p><p>but if Ψm&gt;Ψs:<br>the specific contact resistance Rc depends on doping<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-4-8.png" alt="1-4-8.png"><br>high doping it has, more narrow the barrier will be</p><p>the contact resistance depends on:</p><ol><li>metal and semiconductor work functions</li><li>temperature</li><li>chemical reaction</li></ol><p>Schottky contact:<br>only allows current to flow in one direction<br>must be Ψm&gt;Ψs</p><p><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-4-9.png" alt="1-4-9.png"><br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-4-10.png" alt="1-4-10.png"></p><p>The relationship between charge and potential in a Schottky diode is from Poisson’s equation:<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-4-11.png" alt="1-4-11.png"><br>V is the potential, ρ is the charge density, ε is the permittivity and r is the real space vector<br>The total charge is:<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-4-12.png" alt="1-4-12.png"><br>where A is the diode area on the semiconductor surface</p><p><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-4-13.png" alt="1-4-13.png"></p><h2 id="Anderson’s-rule"><a href="#Anderson’s-rule" class="headerlink" title="Anderson’s rule"></a>Anderson’s rule</h2><p>the vacuum levels of the two materials of a heterojunction should be lined up</p><p>∆Ec=Ec_B – Ec_A = χA - χ B<br>χ = electron affinity of the material, which is independente with Fermi level</p><p>e.g. GaAs has χ = 4.07eV and Al0.3Ga0.7 As has χ = 3.74eV, predicting ∆Ec = 0.33eV</p><h2 id="Heterjunction"><a href="#Heterjunction" class="headerlink" title="Heterjunction"></a>Heterjunction</h2><p>A junction between p-type and n-type layers in the same material is called a homojunction<br>A junction between two different materials is called a heterojunction. they offer to manipulate the behaviour of electrons and holes through band engineering<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-5-1.png" alt="1-5-1.png"></p><p>High Electron Mobility Transistors (HEMT):<br>Main reasons for their superior behaviour</p><p>Modulation doping:<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-5-2.png" alt="1-5-2.png"></p><ol><li>High mobility due to reduced scattering as partocles are all stopped in carrier channel</li><li>Can control gain by optimising carrier density, space layer thickness, channel distance</li><li>Can choose material with a small effective mass (hign intrinsic carrier mobility)</li></ol><p>The maximum transconductance increases, as</p><ol><li>increasing threshold voltage</li><li>increasing doping of the AlGaAs layer</li><li>decreasing space thickness</li></ol><p>By making T-shaped gates – decreases the RC time constant for switching</p><h1 id="Density-of-state"><a href="#Density-of-state" class="headerlink" title="Density of state"></a>Density of state</h1><p><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-6-1.png" alt="1-6-1.png"><br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-6-2.png" alt="1-6-2.png"></p><p><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-6-3.png" alt="1-6-3.png"><br>High current appear if Epk is horizontally matched with grey area in left</p><p><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-6-4.png" alt="1-6-4.png"></p><h1 id="Hall-effect"><a href="#Hall-effect" class="headerlink" title="Hall effect"></a>Hall effect</h1><p>If a current is passed through a semiconductor and a magnetic field B is applied at right angles to the direction of current flow, an electric field is induced in a direction mutually perpendicular to B and the direction of current flow.<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-7-1.png" alt="1-7-1.png"></p><p>The Hall coefficient, RH:<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-7-2.png" alt="1-7-2.png"><br>Hall mobility:<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-7-3.png" alt="1-7-3.png"></p><p>Hall bar structure:<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-7-4.png" alt="1-7-4.png"><br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/1-7-5.png" alt="1-7-5.png"></p><p>advantages:</p><ol><li>can combine etching and releasing together</li><li>suit for batch process</li><li>can be designed during MEMS design</li></ol><h1 id="Liquid-crystal-display-LCD"><a href="#Liquid-crystal-display-LCD" class="headerlink" title="Liquid crystal display (LCD)"></a>Liquid crystal display (LCD)</h1><h2 id="EMR"><a href="#EMR" class="headerlink" title="EMR:"></a>EMR:</h2><p>Visible light is a form of Electro-Magnetic Radiation (EMR) with wavelength in the region 390 - 750 nm (790 - 400 THz).<br>EMR have both electric and magnetic field components. the normal propagating traced as an ellips, but some special cases will include a circle (circularly polarized) or a straight line (linearly polarized)<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-2-1.png" alt="2-2-1.png"><br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-2-2.png" alt="2-2-2.png"></p><h2 id="liquid-crystal"><a href="#liquid-crystal" class="headerlink" title="liquid crystal"></a>liquid crystal</h2><p>“liquid crystal” describes a group of meso-phases between solid crystal and isotropic liquid that exist for a number of organic molecular materials.<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-2-3.png" alt="2-2-3.png"><br>liquid crystal is a state between liquid and solid. It can bound some moleculars, but can also rotate.</p><p>the LC moleculars are normally in two shaps: rod-like (used in LCD) and disk-like (in other applications)<br>The LC particles can usually be aligned by some ‘surface force’ when placing between two plates. We can also control their direction by electric field.Use electric force.<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-2-4.png" alt="2-2-4.png"></p><p><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-2-5.png" alt="2-2-5.png"><br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-2-6.png" alt="2-2-6.png"><br>S is an order parameter that shows how well the eceltric field control LC’s direction. bigger S is, more LC moleculars will face the correct direction</p><p><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-2-7.png" alt="2-2-7.png"><br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-2-8.png" alt="2-2-8.png"><br>the dielectric permittivity  ε is a physical quantity describes how LC molecular will be effected by electric filed.<br>dielectric anisotropy is: Δε = εII - ε⊥<br>if Δε&gt;0, LC molecular will be parallel with electric field,<br>if Δε&lt;0, it will be perpendicular with electric field.</p><p>many LC material configurations exhibit switchable birefringence, where birefringence material is one in which the refractive index alongone axis (extra-ordinary) is different to that along the other two (ordinary) perpendicular axesl that outputs two different polarized light waves, like rambow-colored plastic.</p><p><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-2-12.png" alt="2-2-12.png"><br>(a)Splay shape, k11<br>(b)Twist shape, k22<br>(c) Bend shape, k33<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-2-13.png" alt="2-2-13.png"></p><p>this is a basic LCD structure<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-2-9.png" alt="2-2-9.png"></p><ol><li>Analyzer and Polarizer are all polarized board.</li><li>Indium Tin Oxide (ITO) electrode is a transparent conductive material,</li><li>Align layer can align LC particles into twisted or other shapes whenthere have no electric field</li><li>LC layer &lt;1 to several µm thick</li><li>Modern LCD has many other structures</li></ol><h2 id="Twisted-Nematic-TN-Effect"><a href="#Twisted-Nematic-TN-Effect" class="headerlink" title="Twisted Nematic (TN) Effect"></a>Twisted Nematic (TN) Effect</h2><p><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-2-10.png" alt="2-2-10.png"><br>left part can pass the light, but right part will block the light.<br>the twisted LC psrticles are influenced by align layer, while straight LC particles are forced by electric field</p><p>the Active-matrix liquid-crystal display (AMLCD) strcture:<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-2-11.png" alt="2-2-11.png"></p><p><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-2-14.png" alt="2-2-14.png"><br>Vth is the point when LC particles start to move based on electric field, which is called Freedericksz Transition<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-2-15.png" alt="2-2-15.png"><br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-2-16.png" alt="2-2-16.png"></p><h2 id="Vertically-Aligned-VA-LC"><a href="#Vertically-Aligned-VA-LC" class="headerlink" title="Vertically Aligned (VA) LC"></a>Vertically Aligned (VA) LC</h2><p><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-2-17.png" alt="2-2-17.png"><br>VALCD use negative dielectric anisotropy which are aligned perpendicular to the electric field</p><h2 id="In-Plane-Switching-IPS-LC"><a href="#In-Plane-Switching-IPS-LC" class="headerlink" title="In-Plane Switching (IPS) LC"></a>In-Plane Switching (IPS) LC</h2><p><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-2-18.png" alt="2-2-18.png"><br>use positive dielectric anisotropy, and creates much lower viewing angle dependence than in TN and VA displays</p><h1 id="LCD-passive-matrix-addressing"><a href="#LCD-passive-matrix-addressing" class="headerlink" title="LCD passive matrix addressing"></a>LCD passive matrix addressing</h1><p>LCD can be drived by active-matrix driver or passitive-matrix driver.<br>we want fast in active matrix, but slow in passitive matrix<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-4-1.png" alt="2-4-1.png"></p><p>the passive matrix:<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-4-2.png" alt="2-4-2.png"><br>• Back electrode is vertical columns<br>• Front electrode is horizontal rows (?)<br>• M*N pixels requires only M+N drivers</p><p>working process:</p><ol><li>select first row</li><li>drive some column lines, so some pixcels on first row will turn on</li><li>select seond rwo, and go on</li></ol><p><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-4-9.png" alt="2-4-9.png"></p><p>the real waveform of passive matrix, assume Vth=1.7V, is like:<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-4-3.png" alt="2-4-3.png"><br>where 3-1=2, Voff=((2^2+3)/4)^0.5=1.3<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-4-4.png" alt="2-4-4.png"><br>3-(-1)=4, Von=((4^2+3)/4)^0.5=2.2<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-4-5.png" alt="2-4-5.png"></p><p>foe example, in following figure, only point D2S2, D2S3 will turn on<br>S1,2,3,4 are turned one by one,<br>but D1234 are turned (on or off) in same time<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-4-6.png" alt="2-4-6.png"></p><p>discrimination ratio:<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-4-7.png" alt="2-4-7.png"><br>this will decrease rapidly with increasing number of rows N</p><p>in inverse, maximum number N ca be computed as:<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-4-8.png" alt="2-4-8.png"><br>smaller Von/Voff has, more number N can be contained in design</p><table><thead><tr><th align="left"></th><th align="left">advantage</th><th align="left">disadvantage</th></tr></thead><tbody><tr><td align="left">passive-matrix</td><td align="left">more lines than segmented</td><td align="left">lines limited by design</td></tr><tr><td align="left"></td><td align="left">cost↓</td><td align="left">when lines ↑, Limited contrast, pixcel Crosstalk, More driver requirements, more requirements for LC material</td></tr></tbody></table><h1 id="LCD-active-matrix"><a href="#LCD-active-matrix" class="headerlink" title="LCD active matrix"></a>LCD active matrix</h1><p>the active matrix can:</p><ol><li>increase duty cycle</li><li>reduce cross-talk</li><li>simplify addressing waveform</li></ol><p><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-5-1.png" alt="2-5-1.png"><br>each group is combined with 1 TFT transistor, and 1 storage cup (pixcel electrods)<br>Other driver process is same with passive-matrix</p><ol><li>sweep column lines, and select row lines</li><li>if pixel is selected, TFT will turn on</li><li>storage cup charged</li><li>liquid cyrstal open</li></ol><p>row:<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-5-2.png" alt="2-5-2.png"><br>column:<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-5-3.png" alt="2-5-3.png"></p><p><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-5-4.png" alt="2-5-4.png"><br>(?)</p><p>kickback(?)</p><h1 id="Active-matrix-tech"><a href="#Active-matrix-tech" class="headerlink" title="Active matrix tech"></a>Active matrix tech</h1><p><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-6-1.png" alt="2-6-1.png"><br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-6-2.png" alt="2-6-2.png"><br>(?)</p><h1 id="OLED-structure"><a href="#OLED-structure" class="headerlink" title="OLED structure"></a>OLED structure</h1><p>OLED is quite similar with LED principle, but change those structures into orginac materials</p><p>simple OLED<br>this is structure of simple OLED<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-7-1.png" alt="2-7-1.png"><br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-7-2.png" alt="2-7-2.png"><br>• LUMO is like valance band, HOMO is like conduction band<br>• Cathode assist electron injection<br>• Anode assist hole injection<br>• High mobility to reduce voltage and increase recombination probability<br>• emitted color is depended on energy gap</p><p>Simple Bilayer OLED Device<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-7-3.png" alt="2-7-3.png"></p><p>Advanced high-efficiency OLED Device<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-7-4.png" alt="2-7-4.png"><br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-7-14.png" alt="2-7-14.png"><br>EIL(HIL): Electron (Hole) Injection layer<br>EIL(HIL): Electron (Hole) transport layer<br>EML: Emitter material layer<br>EBL(HBL): Electron (Hole) Block layer</p><p>bottom and top emitting:<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-7-5.png" alt="2-7-5.png"><br>top emitter have a reflactive anode and transparent cathode<br>bottom emitter has a transparent anode and reflective cathode</p><p><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-7-6.png" alt="2-7-6.png"><br>Luminance proportional to current density over many decades of dynamic range</p><p><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-7-7.png" alt="2-7-7.png"></p><p><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-7-8.png" alt="2-7-8.png"><br>HTL’s thickness will influence final emitted light’s efficiency.</p><p>OLED image sticking problem: Pixels used more become dimmer sooner. life time, image will tuen yellow or grey</p><p><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-7-9.png" alt="2-7-9.png"><br>thermionic emission and tunning are two main electron/hole injection methode.<br>thermionic emission:<br>J is the emission current density,<br>T is the temperature of the metal,<br>k is the Boltzmann constant,<br>and A is a parameter constant<br>(?)</p><p>OLED zero bias, no charge injection.A (very) small current can flow due to dissociation of photo-excited excitons.<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-7-10.png" alt="2-7-10.png"><br>LEP: light-emitting polymer<br>PEDOT: poly(3,4-ethylenedioxythiophene)<br>threshold, OLED start to turn on, Thermionic emission allows carriers over the barriers to injection (mainly dependent on temperature)<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-7-11.png" alt="2-7-11.png"><br>carrier injection, OLED under forward bias. current is limited by carrier injection and space charging<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-7-12.png" alt="2-7-12.png"></p><p>Charge Mobility µ is very low compared to inorganic semiconductors<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-7-13.png" alt="2-7-13.png"></p><h1 id="OLED-display"><a href="#OLED-display" class="headerlink" title="OLED display"></a>OLED display</h1><p><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-9-1.png" alt="2-9-1.png"><br>voltage-luminance relations. turn on voltage is 2.1V, luminance increases with increased voltage, but efficiency drops in hign voltage</p><p>Addressing comare<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-9-2.png" alt="2-9-2.png"></p><h2 id="Passive-matrix-driver"><a href="#Passive-matrix-driver" class="headerlink" title="Passive matrix driver"></a>Passive matrix driver</h2><p><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-9-3.png" alt="2-9-3.png"><br>Usually ITO anodes are ‘columns’ and Al cathodes are ‘rows’ due to the large peak currents the rows must cope with<br>driving method is same with passitive-matrix LCD</p><p><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-9-4.png" alt="2-9-4.png"></p><p>main power consumption is baed on four parts:<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-9-5.png" alt="2-9-5.png"><br>that diode (between anode and cathode) is the main consumpted part<br>So using more ‘standby’ or ‘pass blanklines’ can better save the power</p><h2 id="Active-matrix"><a href="#Active-matrix" class="headerlink" title="Active matrix"></a>Active matrix</h2><p>use TFT control<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-9-6.png" alt="2-9-6.png"><br>the active matrix has longer, less intense current pulse, which reduce power comsumption.</p><p>but this AMOLED have limitaitons:</p><ol><li>OLED luminance delay and TFT aging</li><li>fixed pattern noise</li><li>batch variability</li></ol><p><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-9-7.png" alt="2-9-7.png"><br>(LCD ?)<br>LCD is drived by voltage, and OLED is drived by current</p><p>for simple actibe-matrix OLED:<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-9-8.png" alt="2-9-8.png"></p><ol><li>row line is selected first, and then column is also been selected</li><li>M1 been selected, and pass</li><li>M2 is selected and open, drive LED</li></ol><p>have many other sifferent designes. see them later</p><p><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-9-9.png" alt="2-9-9.png"></p><h1 id="Micro-display"><a href="#Micro-display" class="headerlink" title="Micro display"></a>Micro display</h1><p>the small display has:</p><ol><li>large image for eye</li><li>lower manufactoe cost</li><li>lower power consumption and battery lifetime</li><li>often use AM-CMOS structure</li></ol><p><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-10-1.png" alt="2-10-1.png"></p><p><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-10-2.png" alt="2-10-2.png"><br>(?)</p><p>different projected methode:<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-10-3.png" alt="2-10-3.png"><br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-10-4.png" alt="2-10-4.png"><br>backlight is turned on in sequence, and create a final image finally</p><p>the second display method is better than first one, as scrolling methode can mix different color, but first methode is basicly has three different colors on screen.<br>FSC has simplier display structure, but some scence will increase color break-up if move fast</p><p><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-10-6.png" alt="2-10-6.png"><br>left hand is transmissive LCD, right hand is reflective LCD. the Transmissive LCD has wider side barrier, while reflective LCD has more narrower side gap.<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-10-5.png" alt="2-10-5.png"><br>same in front/back emit OLED<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-10-7.png" alt="2-10-7.png"></p><p>TI DMD (Digital Micromirror Device) / DLP (Digital Light Processing)<br>It works by using thousands of tiny mirrors that can be rapidly controlled to reflect light onto a screen, creating an image<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/2-10-8.png" alt="2-10-8.png"></p><h1 id="Virtual-image-displays"><a href="#Virtual-image-displays" class="headerlink" title="Virtual image displays"></a>Virtual image displays</h1><p>the slab glass can help change light view and outputs a virtual image<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/g-1-1.png" alt="g-1-1.png"><br>the output different angle light line can help eye create a virtual object by slab. The slab is a glass with slightly emboss one side<br>the angle a light line enter the salb can maintain where the seen virtual object are</p><p>we can see a file if there has a projector under this slab<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/g-1-2.png" alt="g-1-2.png"></p><p>the LED need use gating ti enter the slab, to avoid diffraction due to line-width<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/g-1-3.png" alt="g-1-3.png"></p><p>so we can create a vertical line by adding another slab, and output a full screen image<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/g-1-4.png" alt="g-1-4.png"></p><p>The effect of diffraction can be shown in a semi-sphere, k1 is entered light angle, k2 is diffractive direction, and kg is projected direction that entered light been diffractived.<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/g-1-5.png" alt="g-1-5.png"><br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/g-1-6.png" alt="g-1-6.png"><br>the ray angle under 42° will not be guided, and roung 90° may not hit the gating. hence 42°-72° is a good choice (projected grey ring)<br>1 -&gt; 2 : first reflection<br>2 -&gt; 3: second reflection<br>so finally ray will move to eye’s center</p><p>RGB virtual figure display. It needs three cameras due to different color’s wavelength.<br>this design will cause a really heavy device<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/g-1-7.png" alt="g-1-7.png"></p><h1 id="Liquid-crystal-photonics"><a href="#Liquid-crystal-photonics" class="headerlink" title="Liquid crystal photonics"></a>Liquid crystal photonics</h1><h2 id="LC-lenses-Surface-relief-approach"><a href="#LC-lenses-Surface-relief-approach" class="headerlink" title="LC lenses: Surface relief approach"></a>LC lenses: Surface relief approach</h2><p><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/g-2-1.png" alt="g-2-1.png"></p><p>Variable index approach<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/g-2-2.png" alt="g-2-2.png"></p><p>Modal addressing<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/g-2-3.png" alt="g-2-3.png"></p><h2 id="Hybrid-liquid-crystal-lenses"><a href="#Hybrid-liquid-crystal-lenses" class="headerlink" title="Hybrid liquid crystal lenses"></a>Hybrid liquid crystal lenses</h2><p><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/g-2-4.png" alt="g-2-4.png"><br>birefringence len may is the LC layer. why FLC can be rotated? change the ne/no?</p><p><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/g-2-5.png" alt="g-2-5.png"><br>two polariser can be rotated by controller<br>this device can generate a 3-D virtual image</p><h2 id="Liquid-crystal-lasers"><a href="#Liquid-crystal-lasers" class="headerlink" title="Liquid crystal lasers"></a>Liquid crystal lasers</h2><p><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/g-2-6.png" alt="g-2-6.png"><br>note the Resonant cavity is liquid cyrstal</p><p>if the liquid crystal is in twisted, different color waveform could be seperated using different twisted angle<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/g-2-7.png" alt="g-2-7.png"><br>So a mixed-color laser can be seperated into multiple single-color laser<br><img src="/2022-2023/Principle-of-Microelectronics-7a974485f953/g-2-8.png" alt="g-2-8.png"></p><h1 id="Quantum-Rods-LEDs"><a href="#Quantum-Rods-LEDs" class="headerlink" title="Quantum Rods LEDs"></a>Quantum Rods LEDs</h1><p>(?)</p><h1 id="LIGHT-FIELD-AND-HOLOGRAPHIC-3D-DISPLAY-TECHNOLOGIES"><a href="#LIGHT-FIELD-AND-HOLOGRAPHIC-3D-DISPLAY-TECHNOLOGIES" class="headerlink" title="LIGHT FIELD AND HOLOGRAPHIC 3D DISPLAY TECHNOLOGIES"></a>LIGHT FIELD AND HOLOGRAPHIC 3D DISPLAY TECHNOLOGIES</h1>]]></content>
      
      
      <categories>
          
          <category> academic material </category>
          
          <category> PDF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2022-2023 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Analogue IC Design Slides</title>
      <link href="/2022-2023/Analogue-IC-Design-Slides-ee210f4e9f8f/"/>
      <url>/2022-2023/Analogue-IC-Design-Slides-ee210f4e9f8f/</url>
      
        <content type="html"><![CDATA[<p>note: <a href="https://pipirima.top/2022-2023/Analogue-IC-Design-3b9841577c80/#more">https://pipirima.top/2022-2023/Analogue-IC-Design-3b9841577c80/#more</a></p><h1 id="Intro-chip-Design"><a href="#Intro-chip-Design" class="headerlink" title="Intro chip Design"></a>Intro chip Design</h1><p><a href="https://pipirima.top/2022-2023/Analogue-IC-Design-Slides-ee210f4e9f8f/Intro_chip_Design.pdf">https://pipirima.top/2022-2023/Analogue-IC-Design-Slides-ee210f4e9f8f/Intro_chip_Design.pdf</a></p><div class="pdf-container" data-target="Intro_chip_Design.pdf" data-height="500px"></div><h1 id="FET-operations"><a href="#FET-operations" class="headerlink" title="FET_operations"></a>FET_operations</h1><p><a href="https://pipirima.top/2022-2023/Analogue-IC-Design-Slides-ee210f4e9f8f/FET_operations.pdf">https://pipirima.top/2022-2023/Analogue-IC-Design-Slides-ee210f4e9f8f/FET_operations.pdf</a></p><div class="pdf-container" data-target="FET_operations.pdf" data-height="500px"></div><h1 id="FET-Amps-part1"><a href="#FET-Amps-part1" class="headerlink" title="FET_Amps(part1)"></a>FET_Amps(part1)</h1><p><a href="https://pipirima.top/2022-2023/Analogue-IC-Design-Slides-ee210f4e9f8f/FET_Amps(part1).pdf">https://pipirima.top/2022-2023/Analogue-IC-Design-Slides-ee210f4e9f8f/FET_Amps(part1).pdf</a></p><div class="pdf-container" data-target="FET_Amps(part1).pdf" data-height="500px"></div><h1 id="FET-Amps-part2"><a href="#FET-Amps-part2" class="headerlink" title="FET_Amps(part2)"></a>FET_Amps(part2)</h1><p><a href="https://pipirima.top/2022-2023/Analogue-IC-Design-Slides-ee210f4e9f8f/FET_Amps(part2).pdf">https://pipirima.top/2022-2023/Analogue-IC-Design-Slides-ee210f4e9f8f/FET_Amps(part2).pdf</a></p><div class="pdf-container" data-target="FET_Amps(part2).pdf" data-height="500px"></div><h1 id="Current-Mirrors"><a href="#Current-Mirrors" class="headerlink" title="Current_Mirrors"></a>Current_Mirrors</h1><p><a href="https://pipirima.top/2022-2023/Analogue-IC-Design-Slides-ee210f4e9f8f/Current_Mirrors.pdf">https://pipirima.top/2022-2023/Analogue-IC-Design-Slides-ee210f4e9f8f/Current_Mirrors.pdf</a></p><div class="pdf-container" data-target="FCurrent_Mirrors.pdf" data-height="500px"></div><h1 id="Diff-Amps"><a href="#Diff-Amps" class="headerlink" title="Diff_Amps"></a>Diff_Amps</h1><p><a href="https://pipirima.top/2022-2023/Analogue-IC-Design-Slides-ee210f4e9f8f/Diff_Amps.pdf">https://pipirima.top/2022-2023/Analogue-IC-Design-Slides-ee210f4e9f8f/Diff_Amps.pdf</a></p><div class="pdf-container" data-target="Diff_Amps.pdf" data-height="500px"></div>]]></content>
      
      
      <categories>
          
          <category> academic material </category>
          
          <category> PDF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2022-2023 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Principle of Microelectronics Slides</title>
      <link href="/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/"/>
      <url>/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/</url>
      
        <content type="html"><![CDATA[<p>Notes:(<a href="https://pipirima.top/2022-2023/Principle-of-Microelectronics-7a974485f953/#more">https://pipirima.top/2022-2023/Principle-of-Microelectronics-7a974485f953/#more</a>)</p><h1 id="1-1"><a href="#1-1" class="headerlink" title="1-1"></a>1-1</h1><p><a href="https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/1-1.pdf">https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/1-1.pdf</a></p><div class="pdf-container" data-target="1-1.pdf" data-height="500px"></div><h1 id="1-2"><a href="#1-2" class="headerlink" title="1-2"></a>1-2</h1><p><a href="https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/1-2.pdf">https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/1-2.pdf</a></p><div class="pdf-container" data-target="1-2.pdf" data-height="500px"></div><h1 id="1-3"><a href="#1-3" class="headerlink" title="1-3"></a>1-3</h1><p><a href="https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/1-3.pdf">https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/1-3.pdf</a></p><div class="pdf-container" data-target="1-3.pdf" data-height="500px"></div><h1 id="1-4"><a href="#1-4" class="headerlink" title="1-4"></a>1-4</h1><p><a href="https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/1-4.pdf">https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/1-4.pdf</a></p><div class="pdf-container" data-target="1-4.pdf" data-height="500px"></div><h1 id="1-5"><a href="#1-5" class="headerlink" title="1-5"></a>1-5</h1><p><a href="https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/1-5.pdf">https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/1-5.pdf</a></p><div class="pdf-container" data-target="1-5.pdf" data-height="500px"></div><h1 id="1-6"><a href="#1-6" class="headerlink" title="1-6"></a>1-6</h1><p><a href="https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/1-6.pdf">https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/1-6.pdf</a></p><div class="pdf-container" data-target="1-6.pdf" data-height="500px"></div><h1 id="1-7"><a href="#1-7" class="headerlink" title="1-7"></a>1-7</h1><p><a href="https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/1-7.pdf">https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/1-7.pdf</a></p><div class="pdf-container" data-target="1-7.pdf" data-height="500px"></div><h1 id="1-8"><a href="#1-8" class="headerlink" title="1-8"></a>1-8</h1><p><a href="https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/1-8.pdf">https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/1-8.pdf</a></p><div class="pdf-container" data-target="1-8.pdf" data-height="500px"></div><h1 id="a-1"><a href="#a-1" class="headerlink" title="a-1"></a>a-1</h1><p><a href="https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/a-1.pdf">https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/a-1.pdf</a></p><div class="pdf-container" data-target="a-1.pdf" data-height="500px"></div><h1 id="a-2"><a href="#a-2" class="headerlink" title="a-2"></a>a-2</h1><p><a href="https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/a-2.pdf">https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/a-2.pdf</a></p><div class="pdf-container" data-target="a-2.pdf" data-height="500px"></div><h1 id="a-3"><a href="#a-3" class="headerlink" title="a-3"></a>a-3</h1><p><a href="https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/a-3.pdf">https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/a-3.pdf</a></p><div class="pdf-container" data-target="a-3.pdf" data-height="500px"></div><h1 id="a-4"><a href="#a-4" class="headerlink" title="a-4"></a>a-4</h1><p><a href="https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/a-4.pdf">https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/a-4.pdf</a></p><div class="pdf-container" data-target="a-4.pdf" data-height="500px"></div><h1 id="a-5"><a href="#a-5" class="headerlink" title="a-5"></a>a-5</h1><p><a href="https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/a-5.pdf">https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/a-5.pdf</a></p><div class="pdf-container" data-target="a-5.pdf" data-height="500px"></div><h1 id="a-6"><a href="#a-6" class="headerlink" title="a-6"></a>a-6</h1><p><a href="https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/a-6.pdf">https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/a-6.pdf</a></p><div class="pdf-container" data-target="a-6.pdf" data-height="500px"></div><h1 id="part-2-formular-sheet"><a href="#part-2-formular-sheet" class="headerlink" title="part_2_formular_sheet"></a>part_2_formular_sheet</h1><p><a href="https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/part_2_formular_sheet.pdf">https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/part_2_formular_sheet.pdf</a></p><div class="pdf-container" data-target="part_2_formular_sheet.pdf" data-height="500px"></div><h1 id="2-1"><a href="#2-1" class="headerlink" title="2-1"></a>2-1</h1><p><a href="https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/2-1.pdf">https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/2-1.pdf</a></p><div class="pdf-container" data-target="2-1.pdf" data-height="500px"></div><h1 id="2-3"><a href="#2-3" class="headerlink" title="2-3"></a>2-3</h1><p><a href="https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/2-3.pdf">https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/2-3.pdf</a></p><div class="pdf-container" data-target="2-3.pdf" data-height="500px"></div><h1 id="2-4"><a href="#2-4" class="headerlink" title="2-4"></a>2-4</h1><p><a href="https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/2-4.pdf">https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/2-4.pdf</a></p><div class="pdf-container" data-target="2-4.pdf" data-height="500px"></div><h1 id="2-5"><a href="#2-5" class="headerlink" title="2-5"></a>2-5</h1><p><a href="https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/2-5.pdf">https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/2-5.pdf</a></p><div class="pdf-container" data-target="2-5.pdf" data-height="500px"></div><h1 id="2-6"><a href="#2-6" class="headerlink" title="2-6"></a>2-6</h1><p><a href="https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/2-6.pdf">https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/2-6.pdf</a></p><div class="pdf-container" data-target="2-6.pdf" data-height="500px"></div><h1 id="2-8"><a href="#2-8" class="headerlink" title="2-8"></a>2-8</h1><p><a href="https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/2-8.pdf">https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/2-8.pdf</a></p><div class="pdf-container" data-target="2-8.pdf" data-height="500px"></div><h1 id="2-9"><a href="#2-9" class="headerlink" title="2-9"></a>2-9</h1><p><a href="https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/2-9.pdf">https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/2-9.pdf</a></p><div class="pdf-container" data-target="2-9.pdf" data-height="500px"></div><h1 id="2-10"><a href="#2-10" class="headerlink" title="2-10"></a>2-10</h1><p><a href="https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/2-10.pdf">https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/2-10.pdf</a></p><div class="pdf-container" data-target="2-10.pdf" data-height="500px"></div><h1 id="guest-1"><a href="#guest-1" class="headerlink" title="guest-1"></a>guest-1</h1><p><a href="https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/guest-1.pdf">https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/guest-1.pdf</a></p><div class="pdf-container" data-target="guest-1.pdf" data-height="500px"></div><h1 id="guest-2"><a href="#guest-2" class="headerlink" title="guest-2"></a>guest-2</h1><p><a href="https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/guest-2.pdf">https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/guest-2.pdf</a></p><div class="pdf-container" data-target="guest-2.pdf" data-height="500px"></div><h1 id="guest-3"><a href="#guest-3" class="headerlink" title="guest-3"></a>guest-3</h1><p><a href="https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/guest-3.pdf">https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/guest-3.pdf</a></p><div class="pdf-container" data-target="guest-3.pdf" data-height="500px"></div><h1 id="guest-4"><a href="#guest-4" class="headerlink" title="guest-4"></a>guest-4</h1><p><a href="https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/guest-4.pdf">https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/guest-2.pdf</a></p><div class="pdf-container" data-target="guest-4.pdf" data-height="500px"></div><h1 id="guest-5"><a href="#guest-5" class="headerlink" title="guest-5"></a>guest-5</h1><p><a href="https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/guest-5.pdf">https://pipirima.top/2022-2023/Principle-of-Microelectronics-Slides-4dd36568acfc/guest-5.pdf</a></p><div class="pdf-container" data-target="guest-5.pdf" data-height="500px"></div>]]></content>
      
      
      <categories>
          
          <category> academic material </category>
          
          <category> PDF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2022-2023 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git Command</title>
      <link href="/Git/Git-Command-dfa83592da59/"/>
      <url>/Git/Git-Command-dfa83592da59/</url>
      
        <content type="html"><![CDATA[<p>Git 语句和 GutHub 简单使用流程</p><span id="more"></span><p>教程：<a href="https://www.runoob.com/git">https://www.runoob.com/git</a></p><h1 id="下载git"><a href="#下载git" class="headerlink" title="下载git"></a>下载git</h1><p><a href="https://gitforwindows.org/">git官网地址</a><br>会一同下载Git GUI，Git CMD和Git Bash<br>Git Bash不能像Linux使用sudo命令，如有需要则要下载Node.js里的npm功能代替。<br><a href="https://nodejs.org/en/download/">nodejs下载地址</a><br>记得翻墙</p><p>这里使用的是 git 2.33.0.windows.2, node v16.8.0, npm 7.21.0</p><h1 id="建立本地仓库"><a href="#建立本地仓库" class="headerlink" title="建立本地仓库"></a>建立本地仓库</h1><p><img src="/Git/Git-Command-dfa83592da59/001.png" alt="001.png"><br>workspace：本地文件夹<br>staging area：暂存区/缓存区<br>local repository：版本库或本地仓库<br>remote repository：远程仓库<br>打开需要作为仓库的文件夹，在文件夹里打开Git Bash，<br>输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git init <span class="comment">#初始化仓库</span></span><br><span class="line"><span class="comment">#成功会显示：Initialized empty Git repository in XXX</span></span><br></pre></td></tr></table></figure><p>此时如果显示隐藏文件，会找到一个隐藏的”.git”文件，如果将其删除则会同样删除仓库。<br>之后输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">git add . <span class="comment">#将文件从文件夹存至暂存区</span></span><br><span class="line">git status <span class="comment">#检查仓库文件和暂存区文件是否一样</span></span><br><span class="line"><span class="comment">#如暂存区多了文件会绿色显示，如文件夹多了文件未存至暂存区会以红色提示使用add命令</span></span><br><span class="line">git rm [fileName] <span class="comment">#将文件从暂存区和文件夹中删除</span></span><br><span class="line">git rm --cached [fileName] <span class="comment">#只将文件从暂存区删除</span></span><br><span class="line">git reset <span class="comment">#删除暂存区内全部文件</span></span><br><span class="line">git commit -m <span class="string">&quot;CommitName&quot;</span> <span class="comment">#将文件从暂存区上传本地仓库</span></span><br><span class="line">git commit -am <span class="string">&quot;CommitName&quot;</span> <span class="comment">#可直接将文件上传本地仓库</span></span><br></pre></td></tr></table></figure><h2 id="远程仓库上传"><a href="#远程仓库上传" class="headerlink" title="远程仓库上传"></a>远程仓库上传</h2><p>先确保注册了github账号，并建立了远程仓库<br>Bash登录github和SSH相关可看<a href="https://pipirima.top/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-cee5c8cdb4b0/#%E7%94%9F%E6%88%90SSH">Hexo个人博客创建引导（二）</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git remote add [ReposioryName] [url] <span class="comment">#连接本地仓库和远程仓库</span></span><br><span class="line"><span class="comment"># 如： git remote add LittlePrograme https://github.com/ycen2111/Little-Programe.git</span></span><br></pre></td></tr></table></figure><p>再打开.git -&gt; config 会看见已经添加了远程仓库的信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git push -u [ReposioryName] [branchName] <span class="comment">#上传到仓库的指定branch，之后再上传就不用输入-u了，已经指定该branch为默认branch了</span></span><br><span class="line">git push [ReposioryName] [branchName]</span><br><span class="line"><span class="comment">#如：git push origin master</span></span><br><span class="line"></span><br><span class="line">git pull [ReposioryName] [branchName]</span><br></pre></td></tr></table></figure><p>如果push显示 error: failed to push some refs，如已经设置SSH，请尝试输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>注意git会删除缺少的内容然后重新上传，需谨慎</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">git add *</span><br><span class="line">git commit -m <span class="string">&quot;#&quot;</span></span><br><span class="line">git push origin master <span class="comment">#正常上传三部曲</span></span><br><span class="line"></span><br><span class="line">git add * &amp;&amp; git commit -m <span class="string">&quot;#&quot;</span> &amp;&amp; git push origin master</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">read</span> -n 1</span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>Please note: 如果单个文件过大(&gt;100M)，会被拒绝上传</p><p>如果遇到无法更新云端文件的问题(git changes not staged for commit)，可尝试将git add *改为git add ./</p>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> Basic Command </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Analogue IC Design</title>
      <link href="/2022-2023/Analogue-IC-Design-3b9841577c80/"/>
      <url>/2022-2023/Analogue-IC-Design-3b9841577c80/</url>
      
        <content type="html"><![CDATA[<p>slides:<a href="https://pipirima.top/2022-2023/Analogue-IC-Design-Slides-ee210f4e9f8f/">https://pipirima.top/2022-2023/Analogue-IC-Design-Slides-ee210f4e9f8f/</a></p><span id="more"></span><h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>The previous several slide is almost same as the slids in undergraduate and been ignored.</p><p><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/101.png" alt="101.png"><br>Normally in real manufactory, there have two more taps placed on two sides of MOSFET, in order to avoid body effect and let MOSFET works more like a FET.<br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/102.png" alt="102.png"><br>A MOSFET device with multiple view directions:<br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/103.png" alt="103.png"></p><p>Development of FET:<br>Transistor -&gt; LOCOS -&gt; STA -&gt; High-K/Metal gate -&gt; FinFET -&gt; RibbonFET</p><p>Chips are made my many wires called “Interconnect” which influences the speed, Power, and Noise in chip.<br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/104.png" alt="104.png"></p><p>There have three types of wires used in chip design<br>M1 for within-cell routing<br>M2 for vertical routing between cells<br>M3 for horizontal routing between cells<br>More deeper the chip is, Much thiner and narrower the wires is.<br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/105.png" alt="105.png"></p><p>For packaging, Ball-Wedge gold wire for low currents and Wedge-Wedge aluminum for high currents<br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/106.png" alt="106.png"></p><h1 id="FET-theory"><a href="#FET-theory" class="headerlink" title="FET theory"></a>FET theory</h1><p>A FET(filed-effect transistor) is worked based on generated channel between source and drain terminal (by the effect of applied voltage)<br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/201.png" alt="201.png"><br>Normally the VT for n-mos is 0.3-1.0 V. Opposite value for p-mos</p><p>Quantity of charge in the channel is<br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/202.png" alt="202.png"><br>where C is capacitor and A is area, d is distance<br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/203.png" alt="203.png"><br>And Cox=εox/tox, tox is thickese of oxid, εox= material permittivaty*ε0, ε0=8.854 E−12 F/m</p><p>Normally N-mos is better than P-mos as electron mobility if nearly 2-4 higher than holes. hence N-mos can be switched much faster.</p><p><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/204.png" alt="204.png"><br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/205.png" alt="205.png"><br>Kn is the MOSFET transconductance parameter</p><p><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/206.png" alt="206.png"><br>the id and rds can only used on VDS is small number</p><p><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/207.png" alt="207.png"><br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/208.png" alt="208.png"><br>the final channel width is influenced by VDS. this figure is shown cases when Vov&gt;VDS (non-saturation)</p><p><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/209.png" alt="209.png"><br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/210.png" alt="210.png"><br>and the final channel width will completely disappeared (pinch-off) when VDS&gt;Vov (saturation region)</p><p><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/211.png" alt="211.png"><br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/212.png" alt="212.png"></p><p>The output resistence r0 for saturated transistor is inifite, but in practice, increasing VDS beyond Vov does affect the channel. As VDS is increased, the channel pinch-off point is slightly moved away from the drain towards the source. which is called “channel-length modulation”.<br>the slop in channel-length modulation is = 1/r0 = (1+λVDS)/λID = 1/λID<br>with “channel-length modulation” :<br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/213.png" alt="213.png"><br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/214.png" alt="214.png"></p><p>the body effect is happened when the voltage drop on body terminal is not equals voltage on source.<br>Normally will influence Vth voltage<br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/215.png" alt="215.png"></p><h1 id="FET-amplifiers-part1"><a href="#FET-amplifiers-part1" class="headerlink" title="FET amplifiers (part1)"></a>FET amplifiers (part1)</h1><p><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/301.png" alt="301.png"><br>Signal analysis steps</p><ol><li>small signal can only use in AC analysis</li><li>set all DC voltage in zero</li><li>large capacitor becone short</li><li>analyse using Ohm’s Law and Kirchhoff’s Laws</li><li>get gm and rds<br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/304.png" alt="304.png"></li></ol><p><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/302.png" alt="302.png"><br>this the the most useful amplifier module<br>Rin is the amplifier inputimpedance (usually infinite for perfect MOS circuits)<br>Rout is the amplifier output impedance<br>G is the amplifier gain, usually negative</p><p>the ideal transistor plot in saturation region should be a linear current mirror for both p-type and n-type transistor<br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/303.png" alt="303.png"><br>this slop will be horizontal if Rout is infinite</p><p><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/305.png" alt="305.png"><br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/306.png" alt="306.png"><br>where gm is from transistor, and gds+GD is for other resistance</p><h2 id="Diode-connected-FET"><a href="#Diode-connected-FET" class="headerlink" title="Diode connected FET"></a>Diode connected FET</h2><p>the Diode connected FET is always in saturation region, which can be seen as a resistance<br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/307.png" alt="307.png"><br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/429.png" alt="429.png"><br>where VDS=VGS, AC resistence assumed as 1/gm<br>a Diode-connected active load is:<br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/308.png" alt="308.png"><br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/309.png" alt="309.png"><br>gm2Vout can be seen as a resistance g2. hence<br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/310.png" alt="310.png"><br>because gm&gt;&gt;gds,<br>Av will just be like -gm1/gm2, and<br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/311.png" alt="311.png"><br>So the gain will be very small in this amplifier.<br>For high gain, then the device will have disproportionately wide or long transistors, which will cause limited bandwidth</p><p>Which channel length modulation:<br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/313.png" alt="313.png"><br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/312.png" alt="312.png"></p><h2 id="Key-points"><a href="#Key-points" class="headerlink" title="Key points:"></a>Key points:</h2><p>Gain=gm*Rl<br>where gm converter input voltage to input current,<br>and Rl converter output current into output voltage</p><p>Bandwidth=1/(Rl*Cl)<br>where Rl is output impedance<br>Cl is output load capacitor</p><p>Hence Gain-Bandwidth product (GBP)=(gm * RL ) * [1/(RL CL )] = gm /CL</p><h2 id="Current-Source-Load"><a href="#Current-Source-Load" class="headerlink" title="Current Source Load"></a>Current Source Load</h2><p><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/314.png" alt="314.png"><br>the P-mos can be seen as current source and must in saturation region<br>while N-mos is best be saturation<br>small signal:<br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/315.png" alt="315.png"><br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/316.png" alt="316.png"></p><h1 id="FET-amplifiers-part2"><a href="#FET-amplifiers-part2" class="headerlink" title="FET amplifiers (part2)"></a>FET amplifiers (part2)</h1><h2 id="Two-Transistor-CMOS-Amplifier"><a href="#Two-Transistor-CMOS-Amplifier" class="headerlink" title="Two Transistor (CMOS) Amplifier"></a>Two Transistor (CMOS) Amplifier</h2><p><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/401.png" alt="401.png"><br>Advantage: high gain, not too many noise<br>Disadvantage: hard to maintain DC bias, take lot DC current</p><p><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/402.png" alt="402.png"><br>The current is maximum vakue if P-mos and N-mos are saturated<br>input voltage -&gt; id current -&gt; output voltage<br>N-mos: A-&gt;C cutoff, C-&gt;E active, E-&gt;F saturated, F-&gt;K active<br>Pmos: A-&gt;E Active, E-&gt;F Saturated, F-&gt;I Active, I-&gt;K cut-off<br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/406.png" alt="406.png"><br>VM is voltage when Vin=Vout</p><p><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/403.png" alt="403.png"><br>(?)<br>Note that in Cmos Amplifier, the T-rise time will be shorter than T_fall time, as resistance in P-mos is smaller than in N-mos</p><p>small signal analysis<br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/404.png" alt="404.png"><br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/405.png" alt="405.png"></p><h2 id="Source-follower-common-drain-circuit"><a href="#Source-follower-common-drain-circuit" class="headerlink" title="Source follower (common-drain circuit)"></a>Source follower (common-drain circuit)</h2><p><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/407.png" alt="407.png"></p><ol><li>use N-mos</li><li>SF has gain approximate as 1</li><li>Can be seen as a buffer</li><li>Easy to have body effect as VBS=Vout is large<br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/408.png" alt="408.png"><br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/409.png" alt="409.png"><br>which gain will slightly less than 1<br>So SF usually beed connect bulk and source together to limite body effect, but also will limite bandwidth</li></ol><h2 id="Cascode-amplifier"><a href="#Cascode-amplifier" class="headerlink" title="Cascode amplifier"></a>Cascode amplifier</h2><p><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/410.png" alt="410.png"></p><ol><li>R3 is a current-source load, and also can be seen as a resistance</li><li>Vbias2 is constant, so VS2 is also constant</li><li>So M1 has a constant current, and no λ term in M1. Hence output resistance of M1 is very high</li><li>No Miller effect</li></ol><p><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/411.png" alt="411.png"><br>M3 has been a resistance<br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/412.png" alt="412.png"></p><p><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/413.png" alt="413.png"><br>the amplifier with cascode can increase its gain in factor of gm2/gDS2</p><p><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/414.png" alt="414.png"><br>the Vin can be ignored because only output current is interested<br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/415.png" alt="415.png"><br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/416.png" alt="416.png"><br>output resistance is only related with M1 and M2</p><p>Hence Cascode can increase Gain and output resistance in factor of gm2/gDS2</p><h2 id="AC-circuit-analysis"><a href="#AC-circuit-analysis" class="headerlink" title="AC circuit analysis"></a>AC circuit analysis</h2><p><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/417.png" alt="417.png"><br>the RC circuit is a low-pass filter. It has circuit bandwidth:<br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/418.png" alt="418.png"><br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/419.png" alt="419.png"></p><p>So the final bandwidth is completely controlled by resistance and capacitor:<br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/420.png" alt="420.png"><br>the small signal cna be chaned as:<br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/421.png" alt="421.png"><br>where CM = Cgd1 + Cgd2<br>according to node analysis, Rout can be changed as:<br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/422.png" alt="422.png"><br>R_parallel ≈ Rin , just the original value<br>R_series ≈ Rout /(G + 1), relatively small<br>and the small signal can be changed as:<br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/423.png" alt="423.png"><br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/424.png" alt="424.png"></p><ol><li>two amplifiers are in cascade</li><li>Cin1 and Cin2 will be increased greatly based on Miller effect</li></ol><h2 id="Body-effect"><a href="#Body-effect" class="headerlink" title="Body effect"></a>Body effect</h2><p><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/425.png" alt="425.png"><br>Normally the bulk is connect to VDD or VSS to svoid body effect,<br>But Change the voltahe drop on substract will influence threshold voltage.</p><ol><li>if bulk voltage drop decreased, more wider the depletion region will be</li><li>wider depletion region need to charge more electrics</li><li>Vt threshold voltage is related with depletion region’s charge effect</li><li>So bigger body effect means bigger threshold voltage</li></ol><p><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/427.png" alt="427.png"><br>φf is usually 0.35V, γ is usually 0.5(V)^(1/2)<br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/426.png" alt="426.png"><br>gmbs is based on body effect<br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/428.png" alt="428.png"></p><h1 id="Current-mirror"><a href="#Current-mirror" class="headerlink" title="Current mirror"></a>Current mirror</h1><p>Both n-type and p-type transister can be analyzed as current source<br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/501.png" alt="501.png"><br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/502.png" alt="502.png"><br>a ideal current source should have vary high output impedance and very low input impedance, means gain of amplifier will be really low -&gt; only current, but no voltage, will be changed</p><h2 id="Basic-current-mirror"><a href="#Basic-current-mirror" class="headerlink" title="Basic current mirror"></a>Basic current mirror</h2><p><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/503.png" alt="503.png"><br>Rout=1/λId<br>Rin≈1/gm</p><p>If we assume:<br>Vmin(M1)=Von+Vt, than<br>Vmin(M2)=Von<br>hence both transistors must in saturation region</p><p>Small signal of M2:<br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/504.png" alt="504.png"><br>because vin from M1 is always constant, hence Vin is a DC voltage, hence should be ignored in this case<br>hence M2’s small signal circuit is just a resistance<br>Where rDS2 is rout</p><ol><li>fixed Iref and M1 makes VGS2 constant</li><li>constant VGS2 and saturated M2 makes Ids2 constant</li><li>But value of VDS2 is variable, so Ids2 will also varying<br>So we have a small input impedance and huge output impedance (1MΩ, but still not enough to most purpose)</li></ol><h2 id="Wilson-current-mirror"><a href="#Wilson-current-mirror" class="headerlink" title="Wilson current mirror"></a>Wilson current mirror</h2><p>Wilson current mirror is a negative feedback system<br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/505.png" alt="505.png"></p><ol><li>if Iout rises, VDS2 also rises</li><li>VGS1 rises, but Iref not change, hence VDS1 falls</li><li>VGS3 falls, hence Iout falls again</li></ol><p>current gain of Wilson current mirror is same as basic current mirror</p><p><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/506.png" alt="506.png"><br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/507.png" alt="507.png"><br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/508.png" alt="508.png"><br>So rout≈gm*rds^2</p><p>Vout(min)=2Von+VT,<br>as VDS2=Von+VT, VDS3=Von</p><h2 id="Cascode-current-mirror"><a href="#Cascode-current-mirror" class="headerlink" title="Cascode current mirror"></a>Cascode current mirror</h2><p><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/509.png" alt="509.png"><br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/510.png" alt="510.png"><br>analysis order: M1 -&gt; M3 -&gt; M4 -&gt; M2<br>Vout(min)=2Von+VT,<br>and VDS1=VDS2, which mean no need to worry about channel length modulation</p><p>small signal:<br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/511.png" alt="511.png"><br>M1 and M3 are diode connect, can directly been ignored<br>VG2 and VG4 are all constant, hence VG2=VG4=0<br>hence VGS2=0, M2 just has resistance<br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/512.png" alt="512.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">process:</span><br><span class="line">Vo=Vds2+(Io-gm4Vgs4)*rds4</span><br><span class="line">Vo=Iords2+(Io-gm4Vgs4)*rds4</span><br><span class="line">Vo=Iords2+(Io+gm4*Iords2)*rds4</span><br><span class="line">Ro=rds2+rds4+gm4rds2rds4</span><br></pre></td></tr></table></figure><p>rout≈gm*ro^2<br>which is a hign output impedance</p><p>therefore,<br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/513.png" alt="513.png"><br>If we make W/L for M2 “n” times bigger than W/L for M1, Iout = nIref</p><p>This is an important result, as we could use it to make a DAC, as different W/L ratio will result in different current output, and we could sum them together to get analodge value.</p><h1 id="Diff-amplifier"><a href="#Diff-amplifier" class="headerlink" title="Diff amplifier"></a>Diff amplifier</h1><p>A differential signal: Measured between two nodes that have equal and opposite signal excursions around a fixed potential.<br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/601.png" alt="601.png"><br>Note: the potential dash line in middle of borh signal is called ‘Common Mode’(CM) level<br>VP is VCM</p><p><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/602.png" alt="602.png"><br>Common-mode rejection ratio (CMRR):<br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/603.png" alt="603.png"><br>AVID = differential-mode voltage gain<br>AVCM = common-mode voltage gain<br>VID = differential-mode voltage (with different phase)<br>VIC = common-mode voltage</p><h1 id="Large-signal"><a href="#Large-signal" class="headerlink" title="Large signal:"></a>Large signal:</h1><p><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/604.png" alt="604.png"><br>Vid=vgs1-vgs2<br>Iss=iD1+iD2</p><p><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/605.png" alt="605.png"><br>because ISS is from current source, it cannot change. Hence iD1+iD2 is always constant</p><p><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/607.png" alt="607.png"><br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/606.png" alt="606.png"></p><p>for differential gain:<br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/608.png" alt="608.png"><br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/609.png" alt="609.png"></p><p>for common mode gain:<br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/610.png" alt="610.png"><br>so iD and vcm have no relations.</p><h1 id="Small-signal"><a href="#Small-signal" class="headerlink" title="Small signal:"></a>Small signal:</h1><p><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/611.png" alt="611.png"><br>Small signal can only analysis half part because symmetric<br>parallel 2*2RS is total in RS only, the output impedence in current source</p><p><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/612.png" alt="612.png"><br>(?)</p><h2 id="Diode-connect-load"><a href="#Diode-connect-load" class="headerlink" title="Diode connect load"></a>Diode connect load</h2><p><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/613.png" alt="613.png"></p><h2 id="Current-mirror-load"><a href="#Current-mirror-load" class="headerlink" title="Current mirror load"></a>Current mirror load</h2><p><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/614.png" alt="614.png"><br>• Vin1 and Vin2 are VCM only<br>• gm1 = gm2<br>• gm3 = gm4<br>• ro1 = ro2<br>• ro3 = ro4<br>• I3=I4</p><p>Common mode:<br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/615.png" alt="615.png"><br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/616.png" alt="616.png"></p><p>differential:<br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/617.png" alt="617.png"><br><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/618.png" alt="618.png"><br>only o2 is related with differential voltage</p><p><img src="/2022-2023/Analogue-IC-Design-3b9841577c80/619.png" alt="619.png"><br>the current mirror amplifier is better,<br>as it has almost fixed common mode gain (around 1/2)<br>as big differential gain</p>]]></content>
      
      
      <categories>
          
          <category> academic material </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2022-2023 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Discrete-Time formula sheet</title>
      <link href="/2022-2023/Discrete-Time-formula-sheet-4d6b2d11b3d4/"/>
      <url>/2022-2023/Discrete-Time-formula-sheet-4d6b2d11b3d4/</url>
      
        <content type="html"><![CDATA[<p>Lecture Material:(<a href="https://pipirima.top/2022-2023/Discrete-Time-Signals-b5b4479f4373/">https://pipirima.top/2022-2023/Discrete-Time-Signals-b5b4479f4373/</a>)</p><h1 id="Formula-Sheet"><a href="#Formula-Sheet" class="headerlink" title="Formula Sheet"></a>Formula Sheet</h1><p>(<a href="https://pipirima.top/2022-2023/Discrete-Time-formula-sheet-4d6b2d11b3d4/FormulaSheet.pdf">https://pipirima.top/2022-2023/Discrete-Time-formula-sheet-4d6b2d11b3d4/FormulaSheet.pdf</a>)</p><div class="pdf-container" data-target="FormulaSheet.pdf" data-height="500px"></div><h1 id="Week-1"><a href="#Week-1" class="headerlink" title="Week 1"></a>Week 1</h1><p>(<a href="https://pipirima.top/2022-2023/Discrete-Time-formula-sheet-4d6b2d11b3d4/Week1.pdf">https://pipirima.top/2022-2023/Discrete-Time-formula-sheet-4d6b2d11b3d4/Week1.pdf</a>)</p><div class="pdf-container" data-target="Week1.pdf" data-height="500px"></div><h1 id="Week-2"><a href="#Week-2" class="headerlink" title="Week 2"></a>Week 2</h1><p>(<a href="https://pipirima.top/2022-2023/Discrete-Time-formula-sheet-4d6b2d11b3d4/Week2.pdf">https://pipirima.top/2022-2023/Discrete-Time-formula-sheet-4d6b2d11b3d4/Week2.pdf</a>)</p><div class="pdf-container" data-target="Week2.pdf" data-height="500px"></div><h1 id="Week-3"><a href="#Week-3" class="headerlink" title="Week 3"></a>Week 3</h1><p>(<a href="https://pipirima.top/2022-2023/Discrete-Time-formula-sheet-4d6b2d11b3d4/Week3.pdf">https://pipirima.top/2022-2023/Discrete-Time-formula-sheet-4d6b2d11b3d4/Week3.pdf</a>)</p><div class="pdf-container" data-target="Week3.pdf" data-height="500px"></div><h1 id="Week-4"><a href="#Week-4" class="headerlink" title="Week 4"></a>Week 4</h1><p>(<a href="https://pipirima.top/2022-2023/Discrete-Time-formula-sheet-4d6b2d11b3d4/Week4.pdf">https://pipirima.top/2022-2023/Discrete-Time-formula-sheet-4d6b2d11b3d4/Week4.pdf</a>)</p><div class="pdf-container" data-target="Week4.pdf" data-height="500px"></div><h1 id="Week-5"><a href="#Week-5" class="headerlink" title="Week 5"></a>Week 5</h1><p>(<a href="https://pipirima.top/2022-2023/Discrete-Time-formula-sheet-4d6b2d11b3d4/Week5.pdf">https://pipirima.top/2022-2023/Discrete-Time-formula-sheet-4d6b2d11b3d4/Week5.pdf</a>)</p><div class="pdf-container" data-target="Week5.pdf" data-height="500px"></div><h1 id="Week-6"><a href="#Week-6" class="headerlink" title="Week 6"></a>Week 6</h1><p>(<a href="https://pipirima.top/2022-2023/Discrete-Time-formula-sheet-4d6b2d11b3d4/Week6.pdf">https://pipirima.top/2022-2023/Discrete-Time-formula-sheet-4d6b2d11b3d4/Week6.pdf</a>)</p><div class="pdf-container" data-target="Week6.pdf" data-height="500px"></div><h1 id="Week-7"><a href="#Week-7" class="headerlink" title="Week 7"></a>Week 7</h1><p>(<a href="https://pipirima.top/2022-2023/Discrete-Time-formula-sheet-4d6b2d11b3d4/Week7.pdf">https://pipirima.top/2022-2023/Discrete-Time-formula-sheet-4d6b2d11b3d4/Week7.pdf</a>)</p><div class="pdf-container" data-target="Week7.pdf" data-height="500px"></div><h1 id="Week-8"><a href="#Week-8" class="headerlink" title="Week 8"></a>Week 8</h1><p>(<a href="https://pipirima.top/2022-2023/Discrete-Time-formula-sheet-4d6b2d11b3d4/week8.pdf">https://pipirima.top/2022-2023/Discrete-Time-formula-sheet-4d6b2d11b3d4/week8.pdf</a>)</p><div class="pdf-container" data-target="week8.pdf" data-height="500px"></div><h1 id="Week-9"><a href="#Week-9" class="headerlink" title="Week 9"></a>Week 9</h1><p>(<a href="https://pipirima.top/2022-2023/Discrete-Time-formula-sheet-4d6b2d11b3d4/week9.pdf">https://pipirima.top/2022-2023/Discrete-Time-formula-sheet-4d6b2d11b3d4/week9.pdf</a>)</p><div class="pdf-container" data-target="week9.pdf" data-height="500px"></div><h1 id="Week-10"><a href="#Week-10" class="headerlink" title="Week 10"></a>Week 10</h1><p>(<a href="https://pipirima.top/2022-2023/Discrete-Time-formula-sheet-4d6b2d11b3d4/week10.pdf">https://pipirima.top/2022-2023/Discrete-Time-formula-sheet-4d6b2d11b3d4/week10.pdf</a>)</p><div class="pdf-container" data-target="week10.pdf" data-height="500px"></div><h1 id="Tutorial"><a href="#Tutorial" class="headerlink" title="Tutorial"></a>Tutorial</h1><p>(<a href="https://pipirima.top/2022-2023/Discrete-Time-formula-sheet-4d6b2d11b3d4/tutorial.pdf">https://pipirima.top/2022-2023/Discrete-Time-formula-sheet-4d6b2d11b3d4/tutorial.pdf</a>)</p><div class="pdf-container" data-target="tutorial.pdf" data-height="500px"></div><h1 id="Soluitons"><a href="#Soluitons" class="headerlink" title="Soluitons"></a>Soluitons</h1><p>(<a href="https://pipirima.top/2022-2023/Discrete-Time-formula-sheet-4d6b2d11b3d4/solutions.pdf">https://pipirima.top/2022-2023/Discrete-Time-formula-sheet-4d6b2d11b3d4/solutions.pdf</a>)</p><div class="pdf-container" data-target="solutions.pdf" data-height="500px"></div>]]></content>
      
      
      <categories>
          
          <category> academic material </category>
          
          <category> PDF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2022-2023 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Discrete-Time Signals</title>
      <link href="/2022-2023/Discrete-Time-Signals-b5b4479f4373/"/>
      <url>/2022-2023/Discrete-Time-Signals-b5b4479f4373/</url>
      
        <content type="html"><![CDATA[<p>Formula sheet: (<a href="https://pipirima.top/2022-2023/Discrete-Time-formula-sheet-4d6b2d11b3d4/">https://pipirima.top/2022-2023/Discrete-Time-formula-sheet-4d6b2d11b3d4/</a>)</p><span id="more"></span><h1 id="Frequency-Analysis-of-Signals"><a href="#Frequency-Analysis-of-Signals" class="headerlink" title="Frequency Analysis of Signals"></a>Frequency Analysis of Signals</h1><p>Fourier transform usually used in aperiodic and continuous signals turning from time domain to frequency domain as:<br><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/101.png" alt="101.png"></p><p>The complex exponential can be explained as sine and cosn format:<br><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/102.png" alt="102.png"><br>Hence cos(x) only has real part and sin(x) only contains imagine part</p><table><thead><tr><th align="left"></th><th align="left">Continuous</th><th align="left">Discrete</th></tr></thead><tbody><tr><td align="left">Periodic</td><td align="left">Fourier series</td><td align="left">Discrete-time Fourier series</td></tr><tr><td align="left">Aperiodic</td><td align="left">Fourier transform</td><td align="left">Discrete-time Fourier transform</td></tr></tbody></table><p><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/105.png" alt="105.png"></p><p>PDS(Power Density Spectra) of DTFS is:<br><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/103.png" alt="103.png"></p><p>PDS(Power Density Spectra) of DTFT is:<br><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/104.png" alt="104.png"></p><h1 id="The-Discrete-Fourier-Transform"><a href="#The-Discrete-Fourier-Transform" class="headerlink" title="The Discrete Fourier Transform"></a>The Discrete Fourier Transform</h1><p>DFT(Discrete Fourier Transform) is usually sampled by a finite period of DTFT(Discrete-time Fourier transform) signal, as it is easy to represented indigital system.<br>Like N is number of samples taken in one period, fs = sampled frequency, ∆t = sampled spacing time<br><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/201.png" alt="201.png"><br>If N&gt;L, rest of N will be separated by zero points with no alising (or leakage?).<br>But if N &lt; L, severial original descrete points will be ignored and deal with alising.<br>Hence normally N shold be &gt; or = to L.</p><p><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/202.png" alt="202.png"><br>For real valued inputs, Re(x(n)) = x(n),<br>the transform is complex conjugate symmetric: X(k) = X*(-k) = X*(N - k),</p><p>Like X(1)=1+j=X*(-1) = X*(5 - 1)=X*(4)<br><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/203.png" alt="203.png"></p><p>FFT(fast Fourier transform) is a fast computer calculation mathod for Fourier transform. N for FFT should be a number with power of 2 (eg. 2,4,8,16,32,…). So if L of original signal is 30, its sampled number N will increased to 32 with 2 zero-padding points.</p><p>for signal cos(nπ/32), angular frequency ω=π/32, frequency f=2π/(π/32)=64Hz. And N=L=128, ∆t=2π/128=π/64. So there have 2 peaks seperatly on π/32 and -π/32 on frequency domain.<br><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/204.png" alt="204.png"></p><p>However, if peak frequency f not reaches intager times of ∆t, multiple non-zero samples will appeared which called the leakage.<br><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/205.png" alt="205.png"><br>Which only two non-zero points should be sampled.</p><p>There have two methods to reduce the leakge. Sampling in frequency (zero padding and add more input samples) and Windowing.<br>With window method, the result signal will have a wider mainlobe nearing target frequency, and lower value away from peaklobes<br><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/206.png" alt="206.png"><br>The zero padding and add more input samples can be used after windowing. by increasing both N and L to 4 times bigger than before, the peaklobe will be 4 times narrow than origin plot.<br><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/207.png" alt="207.png"></p><p><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/208.png" alt="208.png"><br><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/209.png" alt="209.png"><br>Peak sidelob level can also called as dynamic range of transform</p><h1 id="Correlation"><a href="#Correlation" class="headerlink" title="Correlation"></a>Correlation</h1><p>Correlation is a technique that determines the relationship between two signals, allowing for a displacement in time.<br><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/301.png" alt="301.png"><br>Where the similarity of f(x) anf f(y) is large, rxy(l) will also be large<br>Where the similarity of f(x) anf f(y) is samll, rxy(l) will also be tiny<br>The correlation sequence rxy(l) is not symetric, as rxy(l)=ryx(-l)<br>Hence rxx(l)=rxx(-l), autocorrelation is symmetric.</p><p>rxx(0) = Ex is the energy of the sequence, if x(n) is a finite sequence.</p><p>The normalised correlations is defined to detect the strong level of a correlation system<br><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/302.png" alt="302.png"><br>When ρ is close to |1|, means the correlation is strong (fit with energy sequence).</p><p>For signal y(x) with finite sampling number M,<br><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/303.png" alt="303.png"></p><h1 id="Transform-of-a-Linear-Time-Invariant-LTI-system"><a href="#Transform-of-a-Linear-Time-Invariant-LTI-system" class="headerlink" title="Transform of a Linear Time Invariant (LTI) system"></a>Transform of a Linear Time Invariant (LTI) system</h1><p>The z-transform is a frequency representation of a signal, or system.<br><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/401.png" alt="401.png"><br>note z=exp(jω)</p><p>For causal systems to be stable, they must have all poles within the unit circle, although zeros are allowed at any location in the z-plane.<br><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/402.png" alt="402.png"><br>B(z) determines pole points, A(z) determines zero points</p><p><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/403.png" alt="403.png"><br>Sxx(ω) is the density spectrum of the system input, Syy(ω) is the density spectrum of the system output.</p><p><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/404.png" alt="404.png"><br>Hence |H(ω)|^2 is the discrete-time Fourier transform of the autocorrelation of the impulse response h(m)</p><p>|H(ω)| can be seen as the sum of dictence from a point which is on unit circle to all poles and zeros in this unit circle.<br>If we have two zeros 0 and -1, and also two poles -0.5 and 0.4, and choose the point where ω=exp(jπ/4),<br>|H(ω)| is total length of these four lines =1.713<br><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/405.png" alt="405.png"></p><h1 id="Random-Signal"><a href="#Random-Signal" class="headerlink" title="Random Signal"></a>Random Signal</h1><p><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/501.png" alt="501.png"><br><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/502.png" alt="502.png"></p><h1 id="Digital-Filters"><a href="#Digital-Filters" class="headerlink" title="Digital Filters"></a>Digital Filters</h1><p>There is a delay of an infinitelength before the output can be obtained<br>The filter requires future values of the input in order to determine the current output<br><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/601.png" alt="601.png"><br>A practical filter will differ from the ideal with a frequency response. It may have ripple, and may not.<br>End edge of passband is the frequency drop below -3dB bandwidth frequency.<br>The stopband edge is the frequency at which the response drops to the desired stopband height.<br>reducing δ1, δ2 or the width of the transition band results in an increase in the other parameters</p><p>Linear phase is a property of a filter where the phase response of the filter is a linear function of frequency. The result is that all frequency components of the input signal are shifted in time (usually delayed) by the same constant amount.<br>The linear phase filte h(n) can be defined in pure real (evidente as left equation) and imaginary (evidente as right equation) frequency response<br><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/602.png" alt="602.png"><br>in real response, h(n)=h(-n), H(ω)=H(-ω), filter is symmetric<br>in imaginary reponse, h(n)=-h(-n), filter is anti-symmetric</p><p>equation of FIR is:<br><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/603.png" alt="603.png"><br>where h(n) is defined as the impulse response of a causal filter, M is number of taps</p><p>any zero that is real, and does not lie on z = 1 or z = −1 must have one other zero that is its reciprocal. eg. z2 and 1/z2<br>complex zeros, not lying on the unit circle, occur in groups of four. eg. z1, z1*, 1/z1, 1/z1*<br><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/604.png" alt="604.png"><br>There have M-1 zero points for M-tap FIR filter normally.<br>Hence this figure shows an odd-tap filter.</p><p>If the filter is in even-tap, there must have zero equals 1 or -1 on circle.<br>depends on symmetrix or anti-symmetric</p><p>for Frequency response characteristics,<br><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/605.png" alt="605.png"></p><p><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/606.png" alt="606.png"></p><p>For a low-pass filter design, a symmetric response is required as an anti-symmetric filter places a zero at z = 1. For a high-pass design, a symmetric or an antisymmetric impulse response can be used provided that M is chosen such that a zero is not placed at z = −1.</p><p>For design a desired filter response, HRD(ω) defines the idealised filter. The idealised filter will either be symmetric, or antisymmetric (HRD(ω) = ±HRD(−ω))<br>To make the final filter of length M causal, a delay of (M−1)/2 samples is required.<br><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/607.png" alt="607.png"></p><p><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/608.png" alt="608.png"><br>For a low-pass filter design, a symmetric response is required as an anti-symmetric filter places a zero at z = 1. For a high-pass design, a symmetric or an antisymmetric impulse response can be used provided that M is chosen such that a zero is not placed at z = −1.</p><table><thead><tr><th align="left">filter</th><th align="left">β</th></tr></thead><tbody><tr><td align="left">low pass</td><td align="left">β=0</td></tr><tr><td align="left">high pass</td><td align="left">β=1</td></tr></tbody></table><p><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/609.png" alt="609.png"><br>like if sampled frequency=8kHz, and 16-tap filter, the shift frequency when α=0.5 is: 8k/2*16=0.25k</p><p>The transition bandwidth is: (transition_frequency/sampling_frequency)*2pi<br>which can get the number of filter taps</p><p>if calculated tap number is larger than designed number, then the calculated number can be seen as more complex</p><p>For Naïve approach:<br>The impulse response is based on DFT equation<br><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/610.png" alt="610.png"><br><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/611.png" alt="611.png"><br>usually, the frequency repsonse when α = 0 has lower passband ripple but higher stopband ripple,<br>the frequency response when α = 0.5 has higher passband ripple but lower stopband ripple.<br>it should be careful to choose which filter is much better</p><p>example:<br><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/612.png" alt="612.png"></p><h1 id="Power-spectrum"><a href="#Power-spectrum" class="headerlink" title="Power spectrum"></a>Power spectrum</h1><p>The definition for an ergodic power signal can similarly be defined:<br><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/701.png" alt="701.png"><br>where N is number of samples, L is length of DFT sequence. Usually N less than L<br>But it is not a good idea to calculate whole priodic, as priodogram will have big variance and easy influenced by windowing<br>more detailed the sampling is, much bigger the variation is.</p><p>Bartlett method is transform each small blocks, and calculate its average value<br><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/702.png" alt="702.png"><br><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/703.png" alt="703.png"><br>block number K=N/M</p><p>Welch method using more blocks with much less variation<br><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/704.png" alt="704.png"><br><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/705.png" alt="705.png"></p><p>but divide block is same as add a rectangle window. Hence we can choose other window type to reduce spectrum leakage.<br>Note: narrower mainlobe, higher revolution. higher sidelobe, worse spectrum leakage<br>best choice is choose -30dB between mainlobe and sidelobe</p><p>Blackman and Tukey<br>this method will calculate correletion first and than calculate its DFT spectrum<br><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/706.png" alt="706.png"><br>value |m| shoud be less than M<br>value rxx(m)=0 for all |m|&gt;M<br><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/707.png" alt="707.png"><br>First two windows have high sidelobe and narrow mainlobe<br>Next two window have low sidelobe and wide mainlobe</p><p>Complexity<br>Techniques with a low computational complexity can be executed more quickly, and run more often, than those with a high complexity<br>multiplication is generally used as the metric to gauge complexity.</p><h1 id="Multirate-Digital-Signal-Processing"><a href="#Multirate-Digital-Signal-Processing" class="headerlink" title="Multirate Digital Signal Processing"></a>Multirate Digital Signal Processing</h1><p>multirate techniques a signal, with a new sampling rate, that represents the original signal.<br><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/801.png" alt="801.png"><br>The multirate structure will could obviously decrease tap number in filter design</p><p>For resampling, D and I should all be integers<br>D is Decimation<br>I is Interpolation<br><img src="/2022-2023/Discrete-Time-Signals-b5b4479f4373/802.png" alt="802.png"></p>]]></content>
      
      
      <categories>
          
          <category> academic material </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2022-2023 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VLSI lab</title>
      <link href="/2022-2023/VLSI-lab-64940dbc8136/"/>
      <url>/2022-2023/VLSI-lab-64940dbc8136/</url>
      
        <content type="html"><![CDATA[<h1 id="Remote-Access-to-Linux-Labs"><a href="#Remote-Access-to-Linux-Labs" class="headerlink" title="Remote Access to Linux Labs"></a>Remote Access to Linux Labs</h1><ol start="0"><li>Connect to University VPN</li><li>Open Remote Desktop Connection</li><li>Computer: s2314951.studentlinux.eng.ed.ac.uk</li><li>UserName: ED\s2314951</li><li>In advanced -&gt; Setting -&gt; Use these RD gateway server setting:</li><li>serverName: portico.is.ed.ac.uk</li><li>Ok, connect</li><li>quit the log in: System -&gt; Log out</li></ol><span id="more"></span><h1 id="Normal-Start-Cadence"><a href="#Normal-Start-Cadence" class="headerlink" title="Normal Start Cadence"></a>Normal Start Cadence</h1><ol><li>Open Terminal</li><li>Type ‘ssh vlx’</li><li>Move into that directory - ‘cd AVLSIA’</li><li>Type ‘avlsilaunch &amp;’</li></ol><h1 id="Generate-new-cell"><a href="#Generate-new-cell" class="headerlink" title="Generate new cell"></a>Generate new cell</h1><ol><li>Library Manager -&gt; File -&gt; New -&gt; Library</li><li>File -&gt; New -&gt; Cell View</li></ol><h1 id="Common-parameters"><a href="#Common-parameters" class="headerlink" title="Common parameters"></a>Common parameters</h1><p>New Instance: Create -&gt; Instance -&gt; Browse</p><table><thead><tr><th align="left">Instance</th><th align="left">Library</th><th align="left">Cell</th></tr></thead><tbody><tr><td align="left">NMOS</td><td align="left">PRIMLIB</td><td align="left">nmosm4</td></tr><tr><td align="left">PMOS</td><td align="left">PRIMLIB</td><td align="left">pmosm4</td></tr><tr><td align="left">Voltage source</td><td align="left">analogLib</td><td align="left">vdc</td></tr><tr><td align="left">multi Voltage source</td><td align="left">analogLib</td><td align="left">vsource</td></tr><tr><td align="left">Current source</td><td align="left">analogLib</td><td align="left">idc</td></tr><tr><td align="left">Ground</td><td align="left">analogLib</td><td align="left">gnd</td></tr><tr><td align="left">Resistor</td><td align="left">analogLib</td><td align="left">res</td></tr><tr><td align="left">NAND</td><td align="left">ahdlLib</td><td align="left">nand_gate</td></tr></tbody></table><p>change parameters: click instance -&gt; press Q<br>Draw line: Create -&gt; Wire narrow</p><p>Note: remember click “check and save” after editing</p><h1 id="ADE"><a href="#ADE" class="headerlink" title="ADE"></a>ADE</h1><ol><li>Launch -&gt; ADE_L (open ADE)</li><li>Analyses -&gt; choose (choose analyses type)</li><li>Output -&gt; To be plotted -&gt; choose node or branch in schemetic (plotted wave)</li><li>Click run button on right bar (check again if schemetic is check and saved)</li><li>Session -&gt; Save state (save ADE)</li><li>Session -&gt; Load state</li></ol><h2 id="tran"><a href="#tran" class="headerlink" title=".tran"></a>.tran</h2><p>Based on time flowing, just select stop time</p><h2 id="dc"><a href="#dc" class="headerlink" title=".dc"></a>.dc</h2><ol><li>Sweep Variable -&gt; Component Parameter -&gt; Select Component -&gt; click wanted component in Schemetic</li><li>fill Parameter type</li><li>Sweep Range -&gt; fill start value and stop value</li><li>choose sweep type</li></ol><h2 id="ac"><a href="#ac" class="headerlink" title=".ac"></a>.ac</h2><ol><li>choose frequency analysis</li><li>choose start and stop value</li><li>choose logarithmic as sweep type</li><li>fill 5 points per decade</li></ol><h1 id="Anaysis-plot"><a href="#Anaysis-plot" class="headerlink" title="Anaysis plot"></a>Anaysis plot</h1><p>Line: Marker -&gt; Create marker -&gt; Horizontal/Vertical<br>Press M to measure value on this point<br>And keep press D when first point is still selected, to measure distance and trend between two points<br>Press U to undo the operation</p><h1 id="Calculator"><a href="#Calculator" class="headerlink" title="Calculator"></a>Calculator</h1><ol><li>Tool -&gt; Calculator</li><li>Press “Wave” radio button to analysis wave values</li><li>Press 7th icon on the bar under expression box to clear history memory</li><li>Click Legend on plot window to input variable wave</li><li>Choose functions on function panel</li><li>Click Evaluate the buffer to plot the result (result will directly output in expression box if the result is a constant value)<br><img src="/2022-2023/VLSI-lab-64940dbc8136/Calculator.png" alt="Calculator.png"></li></ol><p>The calculated result can also be plotted automatically by placing expression in Output box in ADE_L:<br>Output -&gt; Set up -&gt; fill name -&gt; phase expression, or press “Get Expression” (if there has an expression displayed in calculator already)</p><h1 id="Parametic-analysis"><a href="#Parametic-analysis" class="headerlink" title="Parametic analysis"></a>Parametic analysis</h1><p>The second variable should be set up at first if you want change two variables in one simulation</p><ol><li>Let one parameter’s value into letter type (like Voltage=V)</li><li>in ADE_L -&gt; Variables -&gt; Edit -&gt; fill name and initialize value (like V=5)</li><li>Tools -&gt; Parametic analysis -&gt; fill variable name, start and stop value -&gt; select Step mode and step value or total point number</li><li>Click green run button on top bar</li></ol><h1 id="ADE-XL"><a href="#ADE-XL" class="headerlink" title="ADE XL"></a>ADE XL</h1><p>Combining multiple simulation and schmetics in one window and control them together<br>Start a ADE_XL: open one schmatic -&gt; launch -&gt; ADE_XL -&gt; Create New View -&gt; XXX_ADE_XL (New XL cell will be generated)</p><p><img src="/2022-2023/VLSI-lab-64940dbc8136/ADE_XL.png" alt="ADE_XL.png"></p><ol><li>click ‘Click to add test’ to select one schematic, and load state if have</li><li>test editor is opened by double clicking here, Tests will automatically added from test editor</li><li>expression can be added by right click region here, select ‘Add Expression’</li><li>Only expressions and set specification here, by bouble clicking the grey area</li><li>run the simulation. It can save up to 10 past histories</li><li>Output results can be checked here<br><img src="/2022-2023/VLSI-lab-64940dbc8136/ADE_XL1_RESULT.png" alt="ADE_XL1_RESULT.png"></li><li>wave polt can be displayed here</li></ol><h1 id="symbol"><a href="#symbol" class="headerlink" title="symbol"></a>symbol</h1><ol><li>in target cell, create -&gt; Cell view -&gt; From cellview -&gt; OK</li><li>set pins</li><li>change the shape</li><li>new cell view have generated in library menu</li></ol><h1 id="Mismatch-simulation"><a href="#Mismatch-simulation" class="headerlink" title="Mismatch simulation"></a>Mismatch simulation</h1><p>in virtuoso window, Hit-Kit Utilities -&gt; Simulation Utilities -&gt; Model Manager</p><ol><li>change the “change all” into ‘monte carlo’</li><li>click ‘Select section’ making sure all parameters are end in ‘mc’ and click ‘Apply’ and ‘OK’</li><li>double check all model files are end in ‘mc’ as well, and close window<br><img src="/2022-2023/VLSI-lab-64940dbc8136/Model_Manager.png" alt="Model_Manager.png"></li></ol><p>now can open previous ADE_XL file<br>and check the sections are really chnaged<br><img src="/2022-2023/VLSI-lab-64940dbc8136/Model_Library.png" alt="Model_Library.png"></p><p>Now can add new expressions by right clicking blank area in working place, and ‘Add expression’<br>if we want measure the current when Voltage in drain terminal is 2.5V, can write as:<br>‘value(IS(“/MN0/D”) 2.5)’</p><p>Now can go to monte carloanalysis.</p><ol><li>change the drop down menu into conte carlo type</li><li>click OK after making sure everything is OK</li><li>start the simulation<br><img src="/2022-2023/VLSI-lab-64940dbc8136/Monte_Carlo_sampling.png" alt="Monte_Carlo_sampling.png"></li></ol><h1 id="Set-an-Osillator-by-ring-invertors"><a href="#Set-an-Osillator-by-ring-invertors" class="headerlink" title="Set an Osillator by ring invertors"></a>Set an Osillator by ring invertors</h1><p><img src="/2022-2023/VLSI-lab-64940dbc8136/Ring_Ocilattor.png" alt="Ring_Ocilattor.png"><br>There have two global variables (svdd! and svss!) which also been set in invertor parameter.</p><p>Please note the initial condiction must be set on one wire, or the osillator will be happened<br>ADE_L -&gt; simulation -&gt; convergence aids -&gt; initial condition -&gt; set as 0 or 5V<br>and its better to choose 2.5V as a supply voltage, to drive it much similar as a real pulse signal<br>the little peaks which larger than supply voltage is porproated with CMOS area. less area CMOS has, lower peak the signal will have and will performed as a normal pulse signal<br>1<a href="Ring_Ocilattor1.png">Ring_Ocilattor1.png</a></p><p>and next can add a enable signal to control this pulse signal by NAND gate</p>]]></content>
      
      
      <categories>
          
          <category> academic material </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2022-2023 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>COVID症状</title>
      <link href="/%E7%9E%8E%E8%AE%B0%E8%AE%B0/COVID%E7%97%87%E7%8A%B6-a9885b0ac14c/"/>
      <url>/%E7%9E%8E%E8%AE%B0%E8%AE%B0/COVID%E7%97%87%E7%8A%B6-a9885b0ac14c/</url>
      
        <content type="html"><![CDATA[<p>来英第三年，还是中招了。。不过幸好没在考试周或course work期间发作，不幸中的万幸吧。<br>低烧，轻微腰疼，喉咙吞咽疼。但在转阴后反而开始咳嗽。<br>时间：2022/09/22 - 2022/09/29</p><p>day 1: 早上起来就感觉喉咙口糊了一层东西，哑哑的。测第一次为阴。结果下午三点多和同学讨论到一半突然感觉全身隐痛+头晕无力，回家就立马低烧头疼。<br>day 2: 持续低烧，附带轻度腰疼（奇了怪了），喉咙有点疼，声音变哑，有痰咳不出。<br>day 3: 低烧结束，但喉咙有刀割痛感。测第二次，阳性中奖。开始吃Strepils + Difflam缓解喉咙疼（没啥用）。轻微咳嗽，但咳痰轻松。<br>day 4: 继续喉咙痛，大量咳痰（所以我把带传染源的垃圾也扔进bin area真的没事吗，原来这就是躺平是吗hhh）。鼻炎发作，开始流鼻涕。喉咙痛位置变化，往左边扁桃体和耳朵那块偏。<br>day 5: 喉咙痛，咳痰，鼻炎。测第三次，仍是阳性。<br>day 6: 喉咙痛和鼻炎结束，但很容易喉咙干咳嗽。喉咙长了一些小小的溃疡，怀疑是前两天吐痰损伤产生的。声音恢复七八成。<br>day 7: 开始有点咳嗽，喉咙长出了快十个溃疡，喉咙痛基本是由溃疡导致的了。弱阳。<br>day 8: 终于阴了，缓慢恢复。</p>]]></content>
      
      
      <categories>
          
          <category> 瞎记记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 瞎记记 </tag>
            
            <tag> 英国 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux Command</title>
      <link href="/Linux/Linux-Command-3210a44a41b4/"/>
      <url>/Linux/Linux-Command-3210a44a41b4/</url>
      
        <content type="html"><![CDATA[<p>Linux系统基础命令行指令</p><span id="more"></span><h1 id="Command-list"><a href="#Command-list" class="headerlink" title="Command list"></a>Command list</h1><p><a href="http://c.biancheng.net/linux_tutorial/">http://c.biancheng.net/linux_tutorial/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//基本命令行格式，<span class="comment">#为超级管理者，$为普通管理者</span></span><br><span class="line"><span class="comment"># 命令[选项][参数]</span></span><br></pre></td></tr></table></figure><p>命令分为系统内部命令和外部命令，可以用 type 查询，如：type pwd<br>内部命令会显示为 “shell buildin”<br>外部命令会直接返回命令在内存中的地址<br>通常来说内部命令执行速度快于外部命令</p><table><thead><tr><th align="left">Command</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left">cd</td><td align="left">打开文件夹</td></tr><tr><td align="left">ls</td><td align="left">list 显示当前目录所有文件</td></tr><tr><td align="left">pwd</td><td align="left">Print Working Directory 打印工作目录</td></tr><tr><td align="left">mkdir</td><td align="left">创建文件夹</td></tr><tr><td align="left">rmdir</td><td align="left">删除文件夹(一般不用，直接rm -r同时删除文件夹)</td></tr><tr><td align="left">touch</td><td align="left">创建文件</td></tr><tr><td align="left">in</td><td align="left">给文件创建链接</td></tr><tr><td align="left">cp</td><td align="left">复制文件夹和文件</td></tr><tr><td align="left">rm</td><td align="left">删除文件</td></tr><tr><td align="left">mv</td><td align="left">移动文件,如果移动到源文件夹则可以改名</td></tr><tr><td align="left">env</td><td align="left">显示环境变量</td></tr><tr><td align="left">tar</td><td align="left">文件打包到一个.tar结尾的文件，并可以继续压缩成gz或bz2</td></tr><tr><td align="left">zip</td><td align="left">压缩成zip格式</td></tr></tbody></table><h1 id="cd"><a href="#cd" class="headerlink" title="cd"></a>cd</h1><table><thead><tr><th align="left">参数</th><th align="left">用法</th></tr></thead><tbody><tr><td align="left">.</td><td align="left">当前目录</td></tr><tr><td align="left">..</td><td align="left">当前目录的上一层目录，父目录</td></tr><tr><td align="left">~</td><td align="left">主目录</td></tr><tr><td align="left">-</td><td align="left">之前打开的目录</td></tr></tbody></table><h1 id="ls"><a href="#ls" class="headerlink" title="ls"></a>ls</h1><table><thead><tr><th align="left">参数</th><th align="left">用法</th></tr></thead><tbody><tr><td align="left">-a</td><td align="left">全部包含隐藏的文件</td></tr><tr><td align="left">-l</td><td align="left">long list，长格式</td></tr><tr><td align="left">-R</td><td align="left">连同子目录内容一起列出来，等于将该目录下的所有文件都显示出来</td></tr><tr><td align="left">-t</td><td align="left">以时间排序</td></tr><tr><td align="left">–full-time</td><td align="left">和时间一起输出</td></tr></tbody></table><h1 id="mkdir"><a href="#mkdir" class="headerlink" title="mkdir"></a>mkdir</h1><table><thead><tr><th align="left">参数</th><th align="left">用法</th></tr></thead><tbody><tr><td align="left">-m</td><td align="left">改动配置所创建目录的权限</td></tr><tr><td align="left">-p</td><td align="left">统一建立目录上所有未建立文件夹</td></tr></tbody></table><h1 id="touch"><a href="#touch" class="headerlink" title="touch"></a>touch</h1><p>可以直接创建文件，或者修改文件时间(WTF?)<br>如果文件不存在就创建，存在的话只会修改时间</p><p>Linux 系统中，每个文件主要拥有 3 个时间参数（通过 stat 命令进行查看），分别是文件的访问时间、数据修改时间以及状态修改时间：<br>访问时间（Access Time，简称 atime）：只要文件的内容被读取，访问时间就会更新。例如，使用 cat 命令可以查看文件的内容，此时文件的访问时间就会发生改变。<br>数据修改时间（Modify Time，简称 mtime）：当文件的内容数据发生改变，此文件的数据修改时间就会跟着相应改变。<br>状态修改时间（Change Time，简称 ctime）：当文件的状态发生变化，就会相应改变这个时间。比如说，如果文件的权限或者属性发生改变，此时间就会相应改变。</p><table><thead><tr><th align="left">参数</th><th align="left">用法</th></tr></thead><tbody><tr><td align="left">-a</td><td align="left">修改文件的访问时间</td></tr><tr><td align="left">-c</td><td align="left">修改文件的时间参数（3 个时间参数都改变），如果文件不存在也不会建立新文件</td></tr><tr><td align="left">-m</td><td align="left">修改文件的数据修改时间</td></tr><tr><td align="left">-d</td><td align="left">后面可以跟任何日期，而不用当前的日期</td></tr></tbody></table><p>如 touch -d “2017-05-04 15:44” bols</p><h1 id="cp"><a href="#cp" class="headerlink" title="cp"></a>cp</h1><p>硬文件是文件副本<br>软文件是文件链接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp [选项] 源文件 目标文件</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">参数</th><th align="left">用法</th></tr></thead><tbody><tr><td align="left">-d</td><td align="left">如果源文件为软链接（对硬链接无效），则复制出的目标文件也为软链接</td></tr><tr><td align="left">-p</td><td align="left">复制后目标文件保留源文件的属性(时间，所有人等)</td></tr><tr><td align="left">-r</td><td align="left">同时创建复制目录</td></tr><tr><td align="left">-a</td><td align="left">-d -p -r的集合</td></tr><tr><td align="left">-l</td><td align="left">创建源文件的硬文件</td></tr><tr><td align="left">-s</td><td align="left">创建源文件的软文件</td></tr></tbody></table><h1 id="rm"><a href="#rm" class="headerlink" title="rm"></a>rm</h1><table><thead><tr><th align="left">参数</th><th align="left">用法</th></tr></thead><tbody><tr><td align="left">-f</td><td align="left">不询问直接删除</td></tr><tr><td align="left">-r</td><td align="left">删除指定文件夹下所有子文件夹和文件</td></tr></tbody></table><h1 id="mv"><a href="#mv" class="headerlink" title="mv"></a>mv</h1><table><thead><tr><th align="left">参数</th><th align="left">用法</th></tr></thead><tbody><tr><td align="left">-f</td><td align="left">强制覆盖</td></tr><tr><td align="left">-n</td><td align="left">不会覆盖重复文件</td></tr><tr><td align="left">-v</td><td align="left">显示移动过程</td></tr><tr><td align="left">-u</td><td align="left">如果源文件更新就覆盖</td></tr></tbody></table><h1 id="tar"><a href="#tar" class="headerlink" title="tar"></a>tar</h1><p>在Linux上通常使用gz和bz2格式进行压缩。bz2压缩效果更好，但压缩时间指数型变长。</p><table><thead><tr><th align="left">参数</th><th align="left">用法</th></tr></thead><tbody><tr><td align="left">-c</td><td align="left">多个文件或目录打包</td></tr><tr><td align="left">-x</td><td align="left">解压打包文件</td></tr><tr><td align="left">-A</td><td align="left">添加新内容到.tar内</td></tr><tr><td align="left">-f PackName</td><td align="left">指定打包名</td></tr><tr><td align="left">-f</td><td align="left">指定解压包名</td></tr><tr><td align="left">-C AddName</td><td align="left">解压/拆包到指定的地址</td></tr><tr><td align="left">-v</td><td align="left">显示过程</td></tr><tr><td align="left">-z</td><td align="left">压缩/解压.gz格式</td></tr><tr><td align="left">-j</td><td align="left">压缩/解压.bz2格式</td></tr></tbody></table><p>打包文件夹./test到test.tar<br>tar -cfv test.tar ./test<br>注意要设置文件名为.tar</p><p>拆包test.tar到当前文件夹下<br>tar -xfv ./test.tar</p><p>打包并压缩文件夹./test到test.tar.gz<br>tar -zcfv test.tar.gz ./test</p><p>解压文件夹./test.tar.gz到当前文件夹下<br>tar -zxfv test.tar.gz ./test</p><p>打包并压缩文件夹./test到test.tar.bz2<br>tar -jcfv test.tar.bz2 ./test</p><h1 id="zip"><a href="#zip" class="headerlink" title="zip"></a>zip</h1><table><thead><tr><th align="left">参数</th><th align="left">用法</th></tr></thead><tbody><tr><td align="left">-r</td><td align="left">递归压缩目录</td></tr><tr><td align="left">-v</td><td align="left">显示过程</td></tr><tr><td align="left">-压缩级别</td><td align="left">压缩级别是从 1~9 的数字，-1 代表压缩速度更快，-9 代表压缩效果更好</td></tr><tr><td align="left">-m</td><td align="left">删除原始文件</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Basic Command </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CPU Architecture</title>
      <link href="/HardWare/CPU-Architecture-bbf8941f1ca4/"/>
      <url>/HardWare/CPU-Architecture-bbf8941f1ca4/</url>
      
        <content type="html"><![CDATA[<p>从NAND开始构建所有基础logic gate并且最终完成一个turing complete的基础的，可编程的计算机结构。基于游戏turing complete。</p><span id="more"></span><h1 id="Basic-Logic"><a href="#Basic-Logic" class="headerlink" title="Basic Logic"></a>Basic Logic</h1><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/basic_logic.png" alt="Basic_Logic"></p><h2 id="Crude-Awakening"><a href="#Crude-Awakening" class="headerlink" title="Crude Awakening"></a>Crude Awakening</h2><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/1.1.png" alt="1.1"></p><table><thead><tr><th align="left">Input</th><th align="left">Output</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">1</td></tr><tr><td align="left">0</td><td align="left">0</td></tr></tbody></table><p>Input=Output</p><p>基础连接教程</p><h2 id="NAND-Gate"><a href="#NAND-Gate" class="headerlink" title="NAND Gate"></a>NAND Gate</h2><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/1.2.png" alt="1.2"></p><table><thead><tr><th align="left">Input1</th><th align="left">Input2</th><th align="left">Output</th></tr></thead><tbody><tr><td align="left">0</td><td align="left">0</td><td align="left">1</td></tr><tr><td align="left">0</td><td align="left">1</td><td align="left">1</td></tr><tr><td align="left">1</td><td align="left">0</td><td align="left">1</td></tr><tr><td align="left">1</td><td align="left">1</td><td align="left">0</td></tr></tbody></table><p>(Input1*Input2)=Output</p><h2 id="NOT-Gate"><a href="#NOT-Gate" class="headerlink" title="NOT Gate"></a>NOT Gate</h2><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/1.3.png" alt="1.3"></p><table><thead><tr><th align="left">Input</th><th align="left">Output</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">0</td></tr><tr><td align="left">0</td><td align="left">1</td></tr></tbody></table><p>Input’=Output</p><h2 id="AND-Gate"><a href="#AND-Gate" class="headerlink" title="AND Gate"></a>AND Gate</h2><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/1.4.png" alt="1.4"></p><table><thead><tr><th align="left">Input1</th><th align="left">Input2</th><th align="left">Output</th></tr></thead><tbody><tr><td align="left">0</td><td align="left">0</td><td align="left">0</td></tr><tr><td align="left">0</td><td align="left">1</td><td align="left">0</td></tr><tr><td align="left">1</td><td align="left">0</td><td align="left">0</td></tr><tr><td align="left">1</td><td align="left">1</td><td align="left">1</td></tr></tbody></table><p>Input1*Input2=Output</p><h2 id="NOR-Gate"><a href="#NOR-Gate" class="headerlink" title="NOR Gate"></a>NOR Gate</h2><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/1.5.png" alt="1.5"></p><table><thead><tr><th align="left">Input1</th><th align="left">Input2</th><th align="left">Output</th></tr></thead><tbody><tr><td align="left">0</td><td align="left">0</td><td align="left">1</td></tr><tr><td align="left">0</td><td align="left">1</td><td align="left">0</td></tr><tr><td align="left">1</td><td align="left">0</td><td align="left">0</td></tr><tr><td align="left">1</td><td align="left">1</td><td align="left">0</td></tr></tbody></table><p>(Input1+Input2)’=Output</p><h2 id="OR-Gate"><a href="#OR-Gate" class="headerlink" title="OR Gate"></a>OR Gate</h2><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/1.6.png" alt="1.6"></p><table><thead><tr><th align="left">Input1</th><th align="left">Input2</th><th align="left">Output</th></tr></thead><tbody><tr><td align="left">0</td><td align="left">0</td><td align="left">0</td></tr><tr><td align="left">0</td><td align="left">1</td><td align="left">1</td></tr><tr><td align="left">1</td><td align="left">0</td><td align="left">1</td></tr><tr><td align="left">1</td><td align="left">1</td><td align="left">1</td></tr></tbody></table><p>Input1+Input2=Output</p><h2 id="Always-On"><a href="#Always-On" class="headerlink" title="Always On"></a>Always On</h2><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/1.7.png" alt="1.7"></p><table><thead><tr><th align="left">Input</th><th align="left">Output</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">1</td></tr><tr><td align="left">0</td><td align="left">1</td></tr></tbody></table><p>1=Output</p><h2 id="Second-Tick"><a href="#Second-Tick" class="headerlink" title="Second Tick"></a>Second Tick</h2><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/1.8.png" alt="1.8"></p><table><thead><tr><th align="left">Input1</th><th align="left">Input2</th><th align="left">Output</th></tr></thead><tbody><tr><td align="left">0</td><td align="left">0</td><td align="left">0</td></tr><tr><td align="left">0</td><td align="left">1</td><td align="left">0</td></tr><tr><td align="left">1</td><td align="left">0</td><td align="left">1</td></tr><tr><td align="left">1</td><td align="left">1</td><td align="left">0</td></tr></tbody></table><p>Input1*Input2’=Output</p><h2 id="XOR-Gate"><a href="#XOR-Gate" class="headerlink" title="XOR Gate"></a>XOR Gate</h2><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/1.9.png" alt="1.9"></p><table><thead><tr><th align="left">Input1</th><th align="left">Input2</th><th align="left">Output</th></tr></thead><tbody><tr><td align="left">0</td><td align="left">0</td><td align="left">0</td></tr><tr><td align="left">0</td><td align="left">1</td><td align="left">1</td></tr><tr><td align="left">1</td><td align="left">0</td><td align="left">1</td></tr><tr><td align="left">1</td><td align="left">1</td><td align="left">0</td></tr></tbody></table><p>Input1*Input2’+Input1’*Input2=Output</p><h2 id="Bigger-OR-Gate"><a href="#Bigger-OR-Gate" class="headerlink" title="Bigger OR Gate"></a>Bigger OR Gate</h2><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/1.10.png" alt="1.10"></p><p>Input1+Input2+Input3=Output</p><h2 id="Bigger-AND-Gate"><a href="#Bigger-AND-Gate" class="headerlink" title="Bigger AND Gate"></a>Bigger AND Gate</h2><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/1.11.png" alt="1.11"></p><p>Input1<em>Input2</em>Input3=Output</p><h2 id="XNOR-Gate"><a href="#XNOR-Gate" class="headerlink" title="XNOR Gate"></a>XNOR Gate</h2><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/1.12.png" alt="1.12"></p><table><thead><tr><th align="left">Input1</th><th align="left">Input2</th><th align="left">Output</th></tr></thead><tbody><tr><td align="left">0</td><td align="left">0</td><td align="left">1</td></tr><tr><td align="left">0</td><td align="left">1</td><td align="left">0</td></tr><tr><td align="left">1</td><td align="left">0</td><td align="left">0</td></tr><tr><td align="left">1</td><td align="left">1</td><td align="left">1</td></tr></tbody></table><p>(Input1*Input2’+Input1’*Input2)’=Output</p><h1 id="Arthmetic"><a href="#Arthmetic" class="headerlink" title="Arthmetic"></a>Arthmetic</h1><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/Arthmetic_Memory.png" alt="Arthmetic_Memory.png"></p><h2 id="Binary-Racer"><a href="#Binary-Racer" class="headerlink" title="Binary Racer"></a>Binary Racer</h2><p>None</p><h2 id="Double-Trouble"><a href="#Double-Trouble" class="headerlink" title="Double Trouble"></a>Double Trouble</h2><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/2.2.png" alt="2.2"></p><p>输出1如果大于或等于2个inputs为1</p><h2 id="ODD-Number-of-Signals"><a href="#ODD-Number-of-Signals" class="headerlink" title="ODD Number of Signals"></a>ODD Number of Signals</h2><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/2.3.png" alt="2.3"></p><p>输出1如果1个或3个inputs为1</p><h2 id="Counting-Signals"><a href="#Counting-Signals" class="headerlink" title="Counting Signals"></a>Counting Signals</h2><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/2.4.png" alt="2.4"></p><p>输出inputs为1的terminal的数量。output是3 bits输出，可为000， 001， 010， 011， 100<br>1.首先由ODD Number of Signals决定最后一位<br>2.再由Double Trouble找出大于等于2的情况，并和(3.)连接一个XOR去除找出全为1的情况<br>3.将4个terminals用and连接找出全为1的情况</p><h2 id="Half-Adder"><a href="#Half-Adder" class="headerlink" title="Half Adder"></a>Half Adder</h2><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/2.5.png" alt="2.5"></p><table><thead><tr><th align="left">Input1</th><th align="left">Input2</th><th align="left">Sum</th><th align="left">Carry</th></tr></thead><tbody><tr><td align="left">0</td><td align="left">0</td><td align="left">0</td><td align="left">0</td></tr><tr><td align="left">0</td><td align="left">1</td><td align="left">1</td><td align="left">0</td></tr><tr><td align="left">1</td><td align="left">0</td><td align="left">1</td><td align="left">0</td></tr><tr><td align="left">1</td><td align="left">1</td><td align="left">0</td><td align="left">1</td></tr></tbody></table><p>统计Input True数量，只有两个Inputs的Counting Signals<br>Sum: 个位<br>Carry: 十位</p><h2 id="Double-the-Number"><a href="#Double-the-Number" class="headerlink" title="Double the Number"></a>Double the Number</h2><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/2.6.png" alt="2.6"></p><p>Bits Shift Left</p><h2 id="Full-Adder"><a href="#Full-Adder" class="headerlink" title="Full Adder"></a>Full Adder</h2><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/2.7.png" alt="2.7"></p><table><thead><tr><th align="left">Input1</th><th align="left">Input2</th><th align="left">Input3</th><th align="left">Sum</th><th align="left">Carry</th></tr></thead><tbody><tr><td align="left">0</td><td align="left">0</td><td align="left">0</td><td align="left">0</td><td align="left">0</td></tr><tr><td align="left">0</td><td align="left">0</td><td align="left">1</td><td align="left">1</td><td align="left">0</td></tr><tr><td align="left">0</td><td align="left">1</td><td align="left">0</td><td align="left">1</td><td align="left">0</td></tr><tr><td align="left">0</td><td align="left">1</td><td align="left">1</td><td align="left">0</td><td align="left">1</td></tr><tr><td align="left">1</td><td align="left">0</td><td align="left">0</td><td align="left">1</td><td align="left">0</td></tr><tr><td align="left">1</td><td align="left">0</td><td align="left">1</td><td align="left">0</td><td align="left">1</td></tr><tr><td align="left">1</td><td align="left">1</td><td align="left">0</td><td align="left">0</td><td align="left">1</td></tr><tr><td align="left">1</td><td align="left">1</td><td align="left">1</td><td align="left">1</td><td align="left">1</td></tr></tbody></table><p>统计Input True数量，只有三个Inputs的Counting Signals<br>Sum: 个位<br>Carry: 十位</p><h2 id="Byte-OR"><a href="#Byte-OR" class="headerlink" title="Byte OR"></a>Byte OR</h2><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/2.8.png" alt="2.8"></p><p>暴力堆叠</p><h2 id="Byte-NOT"><a href="#Byte-NOT" class="headerlink" title="Byte NOT"></a>Byte NOT</h2><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/2.9.png" alt="2.9"></p><h2 id="Adding-Byte"><a href="#Adding-Byte" class="headerlink" title="Adding Byte"></a>Adding Byte</h2><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/2.10.png" alt="2.10"></p><h2 id="Negative-Numbers"><a href="#Negative-Numbers" class="headerlink" title="Negative Numbers"></a>Negative Numbers</h2><p>None</p><h2 id="Signed-Negator"><a href="#Signed-Negator" class="headerlink" title="Signed Negator"></a>Signed Negator</h2><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/2.12.png" alt="2.12"></p><p>转负数</p><h2 id="1-bit-decoder"><a href="#1-bit-decoder" class="headerlink" title="1 bit decoder"></a>1 bit decoder</h2><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/2.13.png" alt="2.13"></p><p>1 bit解码器，将两种情况分别用两个output terminals输出</p><h2 id="3-bit-decoder"><a href="#3-bit-decoder" class="headerlink" title="3 bit decoder"></a>3 bit decoder</h2><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/2.14.png" alt="2.14"><br>3 bit解码器，计算机设计最常用的器件之一，可以很方便的解码program coding，特别是分析opcode的指令</p><h2 id="Logic-Engine"><a href="#Logic-Engine" class="headerlink" title="Logic Engine"></a>Logic Engine</h2><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/2.15.png" alt="2.15"></p><p>3 bits解码器简单应用，用decoder控制输出的数据是or nor and nand这四种里的一种情况</p><h1 id="Memory"><a href="#Memory" class="headerlink" title="Memory"></a>Memory</h1><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/Arthmetic_Memory.png" alt="Arthmetic_Memory.png"></p><h2 id="Circular-Dependency"><a href="#Circular-Dependency" class="headerlink" title="Circular Dependency"></a>Circular Dependency</h2><p>None</p><h2 id="Delayed-Lines"><a href="#Delayed-Lines" class="headerlink" title="Delayed Lines"></a>Delayed Lines</h2><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/3.2.png" alt="3.2"></p><p>过一个tick输出上一个tick内容</p><h2 id="Odd-Ticks"><a href="#Odd-Ticks" class="headerlink" title="Odd Ticks"></a>Odd Ticks</h2><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/3.3.png" alt="3.3"></p><p>在奇数tick才会输出1</p><h2 id="Bit-Switch"><a href="#Bit-Switch" class="headerlink" title="Bit Switch"></a>Bit Switch</h2><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/3.4.png" alt="3.4"></p><p>使用一个可选择开关的component</p><h2 id="Bit-Inverter"><a href="#Bit-Inverter" class="headerlink" title="Bit Inverter"></a>Bit Inverter</h2><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/3.5.png" alt="3.5"></p><p>只有两个inputs不一样才会输出1</p><h2 id="Input-Selector"><a href="#Input-Selector" class="headerlink" title="Input Selector"></a>Input Selector</h2><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/3.6.png" alt="3.6"></p><p>根据上边input bit来选择输出下边那个数据</p><h2 id="Bus"><a href="#Bus" class="headerlink" title="Bus"></a>Bus</h2><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/3.7.png" alt="3.7"></p><p>设计一种总线来统一转递数据和控制数据传递</p><h2 id="Saving-Gracefully"><a href="#Saving-Gracefully" class="headerlink" title="Saving Gracefully"></a>Saving Gracefully</h2><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/3.8.png" alt="3.8"></p><p>上边是save，下边是value，当save为1时更新output为value的值，1 bit memory, register的基础</p><h2 id="Saving-Bytes"><a href="#Saving-Bytes" class="headerlink" title="Saving Bytes"></a>Saving Bytes</h2><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/3.9.png" alt="3.9"></p><p>用1 bit memory来保存1 byte的数据</p><h2 id="Little-Box"><a href="#Little-Box" class="headerlink" title="Little Box"></a>Little Box</h2><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/3.10.png" alt="3.10"></p><p>最上边两个为loading and saving，然后是选择A/B和0/1，并最终定位到四个register中的一个，来操作saving或loading操作</p><h2 id="Counter"><a href="#Counter" class="headerlink" title="Counter"></a>Counter</h2><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/3.11.png" alt="3.11"></p><p>平时每过一个tick就加1，如果overwrite为1就直接写入input的数值，之后program时用来读取程序的component</p><h1 id="CPU-Architecture"><a href="#CPU-Architecture" class="headerlink" title="CPU Architecture"></a>CPU Architecture</h1><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/CPU_Architecture.png" alt="CPU_Architecture"></p><h2 id="Arithmetic-Engine"><a href="#Arithmetic-Engine" class="headerlink" title="Arithmetic Engine"></a>Arithmetic Engine</h2><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/4.1.png" alt="4.1"></p><p>最上边的是1 byte输入，通过不同的输入分别输出不同的运算结果</p><table><thead><tr><th align="left">Input</th><th align="left">Operation</th></tr></thead><tbody><tr><td align="left">0</td><td align="left">OR</td></tr><tr><td align="left">1</td><td align="left">NAND</td></tr><tr><td align="left">2</td><td align="left">NOR</td></tr><tr><td align="left">3</td><td align="left">AND</td></tr><tr><td align="left">4</td><td align="left">ADD</td></tr><tr><td align="left">5</td><td align="left">SUB</td></tr></tbody></table><h2 id="Register"><a href="#Register" class="headerlink" title="Register"></a>Register</h2><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/4.2.png" alt="4.2"></p><p>3输入分别为loading，saving和saved value。输出的话上边的output只有在loading为1时才输出，下边在任何时候都会输出</p><h2 id="Decoder"><a href="#Decoder" class="headerlink" title="Decoder"></a>Decoder</h2><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/4.3.png" alt="4.3"></p><p>3 bits decoder的简单应用</p><h2 id="Calculations"><a href="#Calculations" class="headerlink" title="Calculations"></a>Calculations</h2><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/4.4.png" alt="4.4"></p><p>Arithmetic Engine的扩展运用，基本一致</p><table><thead><tr><th align="left">Input</th><th align="left">Operation</th></tr></thead><tbody><tr><td align="left">0</td><td align="left">OR</td></tr><tr><td align="left">1</td><td align="left">NAND</td></tr><tr><td align="left">2</td><td align="left">NOR</td></tr><tr><td align="left">3</td><td align="left">AND</td></tr><tr><td align="left">4</td><td align="left">ADD</td></tr><tr><td align="left">5</td><td align="left">SUB</td></tr><tr><td align="left">6</td><td align="left">XOR</td></tr></tbody></table><h2 id="Conditions"><a href="#Conditions" class="headerlink" title="Conditions"></a>Conditions</h2><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/4.5.png" alt="4.5"></p><p>根据上边的输入选择不同的判断条件，如果输入符合就输出1，不符合输出0。类似if的判断逻辑</p><table><thead><tr><th align="left">Input</th><th align="left">Condition</th></tr></thead><tbody><tr><td align="left">0</td><td align="left">NEVER(Always off)</td></tr><tr><td align="left">1</td><td align="left">=0</td></tr><tr><td align="left">2</td><td align="left">&lt;0</td></tr><tr><td align="left">3</td><td align="left">&lt;=0</td></tr><tr><td align="left">4</td><td align="left">ALWAYS(Always on)</td></tr><tr><td align="left">5</td><td align="left">!=0</td></tr><tr><td align="left">6</td><td align="left">&gt;=0</td></tr></tbody></table><h2 id="Turing-Complete"><a href="#Turing-Complete" class="headerlink" title="Turing Complete"></a>Turing Complete</h2><p><img src="/HardWare/CPU-Architecture-bbf8941f1ca4/4.6.png" alt="4.6"></p><p>一个可以编程的可运算图灵完备的结构，配备program ram，counter，6 registers，compute，condition。<br>任何将saving，loading，或calculation的值都会先输入到一个bus内统一调取。<br>每个program里的数据为1 byte，最后两位控制这个数据的类型并由DEC解码和控制：</p><table><thead><tr><th align="left">bits(7 and 8 bit)</th><th align="left">type</th></tr></thead><tbody><tr><td align="left">00</td><td align="left">IMMEDIATE</td></tr><tr><td align="left">01</td><td align="left">COMPUTE</td></tr><tr><td align="left">10</td><td align="left">COPY</td></tr><tr><td align="left">11</td><td align="left">CONDITION</td></tr></tbody></table><h3 id="10"><a href="#10" class="headerlink" title="10"></a>10</h3><p>两个3 bits decoders分别控制6个registers，input and output的loading和saving操作<br>如指令 10 110 001 意思是将input and output 里的数据复制到reg1里</p><table><thead><tr><th align="left">VALUE(1-3bits for saving, 4-6bits for loading)</th><th align="left">component</th></tr></thead><tbody><tr><td align="left">0</td><td align="left">reg0</td></tr><tr><td align="left">1</td><td align="left">reg1</td></tr><tr><td align="left">2</td><td align="left">reg2</td></tr><tr><td align="left">3</td><td align="left">reg3</td></tr><tr><td align="left">4</td><td align="left">reg4</td></tr><tr><td align="left">5</td><td align="left">reg5</td></tr><tr><td align="left">6</td><td align="left">input and output</td></tr></tbody></table><h3 id="00"><a href="#00" class="headerlink" title="00"></a>00</h3><p>如果为00，将直接将前6位bits写入reg0，直接disable 2个3 bits decorders，并将value直接saving进reg0内<br>如 00 000 010 将直接在reg0内写入数值2<br>注意这个方法只能最大写入2^6=64到reg0内</p><h3 id="01"><a href="#01" class="headerlink" title="01"></a>01</h3><p>如果为01，ALU将被enabled并根据1-3 bits判断计算方式，如之前的Calculations：</p><table><thead><tr><th align="left">Input</th><th align="left">Operation</th></tr></thead><tbody><tr><td align="left">0</td><td align="left">OR</td></tr><tr><td align="left">1</td><td align="left">NAND</td></tr><tr><td align="left">2</td><td align="left">NOR</td></tr><tr><td align="left">3</td><td align="left">AND</td></tr><tr><td align="left">4</td><td align="left">ADD</td></tr><tr><td align="left">5</td><td align="left">SUB</td></tr><tr><td align="left">6</td><td align="left">XOR</td></tr></tbody></table><p>reg1和reg2内的数值将分别当作input1和input2，并将result自动存入reg3内<br>如 01 000 100 将自动把reg1和reg2内的值相加，并存储到reg3内</p><h3 id="11"><a href="#11" class="headerlink" title="11"></a>11</h3><p>如果为11，机器将根据COND里的逻辑分析1-3 bits：</p><table><thead><tr><th align="left">Input</th><th align="left">Condition</th></tr></thead><tbody><tr><td align="left">0</td><td align="left">NEVER(Always off)</td></tr><tr><td align="left">1</td><td align="left">=0</td></tr><tr><td align="left">2</td><td align="left">&lt;0</td></tr><tr><td align="left">3</td><td align="left">&lt;=0</td></tr><tr><td align="left">4</td><td align="left">ALWAYS(Always on)</td></tr><tr><td align="left">5</td><td align="left">!=0</td></tr><tr><td align="left">6</td><td align="left">&gt;=0</td></tr></tbody></table><p>机器将自动读取reg3内的值输入，如果条件成立，会自动loading reg0内的值并赋值给counter来达到跳转的效果，类似if语句内达到条件就运行新语句的效果<br>如 11 000 100 就会一直将reg0内的值赋予counter，做到汇编内JMP的效果</p><h3 id="program-example"><a href="#program-example" class="headerlink" title="program example"></a>program example</h3><table><thead><tr><th align="left">Name</th><th align="left">code</th></tr></thead><tbody><tr><td align="left">MOV</td><td align="left">10 000 000</td></tr><tr><td align="left">from_REG1</td><td align="left">00 001 000</td></tr><tr><td align="left">to_REG1</td><td align="left">00 000 001</td></tr><tr><td align="left">AND</td><td align="left">01 000 011</td></tr><tr><td align="left">JMP</td><td align="left">11 000 100</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">//计算一个数除以4后的余数，可以将这个数和3进行AND操作来计算</span><br><span class="line">//如 7%4=0000 0111 &amp; 0000 0011=0000 0011=3</span><br><span class="line">label loop //标记一个标签点</span><br><span class="line"></span><br><span class="line">3 //将3写入reg0</span><br><span class="line">MOV+REG0+to_REG1 //将reg0的值复制到reg1</span><br><span class="line">MOV+INPUT+to_REG2 //将输入的值复制到reg2</span><br><span class="line">AND //将reg1和reg2内的值进行byte AND操作，输入reg3</span><br><span class="line">MOV+from_REG3+OUTPUT //将reg3的值输出到output</span><br><span class="line"></span><br><span class="line">loop //将loop标记点的地址写入reg0</span><br><span class="line">JMP //always condition，每次都会将reg0内的值写入counter进行转跳</span><br></pre></td></tr></table></figure><p>一行代码可以选择将不同的命令相加来达到灵活编程的目的，如MOV+REG0+to_REG1=10 000 000+00 000 000+00 000 001=10 000 001=将reg0内的值复制到reg1</p>]]></content>
      
      
      <categories>
          
          <category> Hardware </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hardware </tag>
            
            <tag> Logic gate </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>virtualenv</title>
      <link href="/python/virtualenv-e16515a4afb1/"/>
      <url>/python/virtualenv-e16515a4afb1/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>Virtual Python 环境搭建，可轻易实现不同项目的版本隔离。便于操作，但不擅长大项目的版本迁移和更新，已基本被淘汰。大项目管理可参考PDM。</p><span id="more"></span><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>油管视频教程:(<a href="https://www.youtube.com/watch?v=N5vscPTWKOk">https://www.youtube.com/watch?v=N5vscPTWKOk</a>)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">pip install virtualenv</span><br><span class="line"></span><br><span class="line"><span class="comment">#installed pack</span></span><br><span class="line">distlib-0.3.5 </span><br><span class="line">filelock-3.7.1 </span><br><span class="line">platformdirs-2.5.2 </span><br><span class="line">virtualenv-20.16.3</span><br></pre></td></tr></table></figure><h2 id="方法调用"><a href="#方法调用" class="headerlink" title="方法调用"></a>方法调用</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在terminal或Power Shell里操作</span></span><br><span class="line">virtualenv OKR_env <span class="comment">#当前目录下创建新虚拟python项目</span></span><br><span class="line"><span class="comment">#created virtual environment CPython3.10.6.final.0-64 in 2512ms</span></span><br><span class="line"><span class="comment">#  creator CPython3Windows(dest=D:\Python\Intern\OKR_env, clear=False, no_vcs_ignore=False, global=False)</span></span><br><span class="line"><span class="comment">#  seeder FromAppData(download=False, pip=bundle, setuptools=bundle, wheel=bundle, via=copy, app_data_dir=C:\Users\86135\AppData\Local\pypa\virtualenv)</span></span><br><span class="line"><span class="comment">#    added seed packages: pip==22.2.2, setuptools==63.4.1, wheel==0.37.1</span></span><br><span class="line"><span class="comment">#  activators BashActivator,BatchActivator,FishActivator,NushellActivator,PowerShellActivator,PythonActivator</span></span><br><span class="line"></span><br><span class="line">.\OKR_env\Scripts\activate <span class="comment">#启动虚拟项目，开头出现(OKR_env)</span></span><br><span class="line"><span class="comment">#(OKR_env) PS D:\Python\Intern&gt; </span></span><br><span class="line"></span><br><span class="line">pip list <span class="comment">#查看已有pack</span></span><br><span class="line"><span class="comment">#Package    Version</span></span><br><span class="line"><span class="comment">#---------- -------</span></span><br><span class="line"><span class="comment">#pip        22.2.2</span></span><br><span class="line"><span class="comment">#setuptools 63.4.1</span></span><br><span class="line"><span class="comment">#wheel      0.37.1</span></span><br><span class="line"></span><br><span class="line">pip freeze --<span class="built_in">local</span> &gt; requirements.txt <span class="comment">#在根目录下创建requirements.txt打印pip下载的pack</span></span><br><span class="line"></span><br><span class="line">deactivate <span class="comment">#退出当前虚拟python</span></span><br><span class="line"></span><br><span class="line">pip install -r .\requirements.txt <span class="comment">#在新虚拟python环境中下载requirements.txt内pack列表</span></span><br></pre></td></tr></table></figure><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><h3 id="activate-env"><a href="#activate-env" class="headerlink" title="activate env"></a>activate env</h3><p>对bash需打开activate文件<br>对shell需打开activate.ps1文件</p><h3 id="修改file-interpreter"><a href="#修改file-interpreter" class="headerlink" title="修改file interpreter"></a>修改file interpreter</h3><p>如出现下载pack但任显示找不到pack，可再次检查VScode在右下角的python版本路径，查看是否file指向了错误的地址</p><h3 id="更改地址"><a href="#更改地址" class="headerlink" title="更改地址"></a>更改地址</h3><p>如更改了环境地址，用freeze，init重装环境，无其他解决办法</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> python </tag>
            
            <tag> plugin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PDFplumber</title>
      <link href="/python/PDFplumber-ed2ea9f0a893/"/>
      <url>/python/PDFplumber-ed2ea9f0a893/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>读取分析PDF文件，特长分析PDF内文字表格等参数分析</p><span id="more"></span><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>github 地址:(<a href="https://github.com/hbh112233abc/pdfplumber">https://github.com/hbh112233abc/pdfplumber</a>)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">pip install pdfplumber</span><br><span class="line"></span><br><span class="line"><span class="comment">#installed pack</span></span><br><span class="line">Pillow-9.2.0 </span><br><span class="line">Wand-0.6.9 </span><br><span class="line">cffi-1.15.1 </span><br><span class="line">charset-normalizer-2.1.0 </span><br><span class="line">cryptography-37.0.4 </span><br><span class="line">pdfminer.six-20220524 </span><br><span class="line">pdfplumber-0.7.4 </span><br><span class="line">pycparser-2.21</span><br></pre></td></tr></table></figure><h2 id="程序调用"><a href="#程序调用" class="headerlink" title="程序调用"></a>程序调用</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">import pdfplumber <span class="comment">#read PDF file</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#open pdf file</span></span><br><span class="line">pdf=pdfplumber.open(<span class="string">&quot;pdf_add&quot;</span>,password=<span class="string">&quot;&quot;</span>) <span class="comment">#dismiss password if not necessary</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#fundemental data</span></span><br><span class="line"><span class="built_in">print</span>(pdf.metadata)</span><br><span class="line"><span class="comment"># &#123;&#x27;Title&#x27;: &#x27;PowerPoint Presentation&#x27;, &#x27;Author&#x27;: &#x27;Zhang, Dongjie&#x27;, &#x27;CreationDate&#x27;: &quot;D:20220807125813+01&#x27;00&#x27;&quot;&#x27;ModDate&#x27;: &quot;D:20220807125813+01&#x27;00&#x27;&quot;, &#x27;Producer&#x27;: &#x27;Microsoft® PowerPoint® 2019&#x27;, &#x27;Creator&#x27;: &#x27;Microsoft® PowerPoint® 2019&#x27;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#read first char in one page</span></span><br><span class="line">first_page=pdf.page[0].chars[0]</span><br><span class="line"><span class="built_in">print</span>(first_page)</span><br><span class="line"><span class="comment"># &#123;&#x27;matrix&#x27;: (1, 0, 0, 1, 28.032, 479.59), &#x27;fontname&#x27;: &#x27;Arial-BoldMT&#x27;, &#x27;adv&#x27;: 18.91776, &#x27;upright&#x27;: True, &#x27;x0&#x27;: 28.032, &#x27;y0&#x27;: 475.3816, &#x27;x1&#x27;: 46.94976, &#x27;y1&#x27;: 495.42159999999996, &#x27;width&#x27;: 18.917759999999998, &#x27;height&#x27;: 20.039999999999964, &#x27;size&#x27;: 20.039999999999964, &#x27;object_type&#x27;: &#x27;char&#x27;, &#x27;page_number&#x27;: 5, &#x27;text&#x27;: &#x27;W&#x27;, &#x27;stroking_color&#x27;: 0, &#x27;non_stroking_color&#x27;: 0, &#x27;top&#x27;: 44.578400000000045, &#x27;bottom&#x27;: 64.61840000000001, &#x27;doctop&#x27;: 2204.5784&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#print out all chars in one page</span></span><br><span class="line"><span class="built_in">print</span>(first_page.extract_text())</span><br></pre></td></tr></table></figure><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><h3 id="chars-字符读取"><a href="#chars-字符读取" class="headerlink" title=".chars[] 字符读取"></a>.chars[] 字符读取</h3><p>只能读取可显示的ASCii字符，而无法显示 “\n” 之类的非显示字符。<br>如 “mistake \n”，<br>会显示 .chars[7] 为 “ “ (space),<br>而 .chars[8] 不会读取为 “\n” 而是下一行第一个字符，<br>故一般和 .extract_text() 方法联合使用来分辨换行位置</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> python </tag>
            
            <tag> plugin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏主程序分析</title>
      <link href="/Conway%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/%E6%B8%B8%E6%88%8F%E4%B8%BB%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90-98a61fc47187/"/>
      <url>/Conway%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/%E6%B8%B8%E6%88%8F%E4%B8%BB%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90-98a61fc47187/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>游戏规则：</p><ol><li>如果一个cell周围(以它为中心3x3)有2或3个其他cell则存活，否则死亡</li><li>如果一个无cell的方格周围有3个cell，则在此生长出一个cell</li></ol><span id="more"></span><h2 id="Version-0"><a href="#Version-0" class="headerlink" title="Version 0"></a>Version 0</h2><h3 id="介绍-1"><a href="#介绍-1" class="headerlink" title="介绍"></a>介绍</h3><ol><li>以cell list为基础遍历整个2-D list，计算每个rectangle周围cell数量并判断是否需要change color，如是则cell.change标记true</li><li>再次遍历list，switch cell.change为true的rectangle</li></ol><h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#check cell&#x27;s next state by its neighbors (3 neighbors born, 2 and 3 neighbors survival)</span></span><br><span class="line">def check_state(cell,row,column):</span><br><span class="line">    global cell_list</span><br><span class="line">    global row_max</span><br><span class="line">    global column_max</span><br><span class="line">    cell_num=0</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(-1,2):</span><br><span class="line">        <span class="keyword">if</span> row+i&lt;0 or row+i&gt;row_max-1: <span class="comment">#out of range</span></span><br><span class="line">            <span class="built_in">continue</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(-1,2):</span><br><span class="line">                <span class="keyword">if</span> column+j&lt;0 or column+j&gt;column_max-1: <span class="comment">#out of range</span></span><br><span class="line">                    <span class="built_in">continue</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">if</span> cell_list[row+i][column+j].liveCell: <span class="comment">#live cell</span></span><br><span class="line">                        cell_num=cell_num+1</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> cell.liveCell: <span class="comment">#live cell</span></span><br><span class="line">        cell_num=cell_num-1 <span class="comment">#remove itself</span></span><br><span class="line">        <span class="keyword">if</span> cell_num==2 or cell_num==3: <span class="comment">#survive</span></span><br><span class="line">            pass</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            cell.change=True</span><br><span class="line">            <span class="comment">#print(&quot;change &quot;+str(row)+&quot; &quot;+str(column)+str(cell_num))</span></span><br><span class="line">    <span class="keyword">else</span>: <span class="comment">#no cell</span></span><br><span class="line">        <span class="keyword">if</span> cell_num==3: <span class="comment">#new cell</span></span><br><span class="line">            cell.change=True</span><br><span class="line">            <span class="comment">#print(&quot;change &quot;+str(row)+&quot; &quot;+str(column))</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#command of start button, start the game in each 1s</span></span><br><span class="line">def start_game(count):</span><br><span class="line">    global beginning</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> beginning: <span class="comment">#start sign</span></span><br><span class="line">        global cell_list</span><br><span class="line">        global row_max</span><br><span class="line">        global column_max</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> row <span class="keyword">in</span> range(row_max):</span><br><span class="line">            <span class="keyword">for</span> column <span class="keyword">in</span> range(column_max):</span><br><span class="line">                check_state(cell_list[row][column],row,column)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> row <span class="keyword">in</span> range(row_max):</span><br><span class="line">            <span class="keyword">for</span> column <span class="keyword">in</span> range(column_max):</span><br><span class="line">                <span class="keyword">if</span> cell_list[row][column].change: <span class="comment">#need be changed</span></span><br><span class="line">                    cell_list[row][column].switch_color()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> count==0:</span><br><span class="line">            root.destroy()</span><br><span class="line"></span><br><span class="line">        <span class="comment">#run start_button again after 100ms</span></span><br><span class="line">        root.after(100,start_game,count) <span class="comment">#caution: start_button has no returns hence no () in needed here (or recursion error happens)</span></span><br><span class="line">    <span class="keyword">else</span>: <span class="comment">#get stop sign</span></span><br><span class="line">        pass</span><br></pre></td></tr></table></figure><h3 id="效率"><a href="#效率" class="headerlink" title="效率"></a>效率</h3><p>@profile start_game(count)<br>Total time: 8.20841 s</p><table><thead><tr><th align="left">Hits</th><th align="left">Time</th><th align="left">Per Hit</th><th align="left">% Time</th><th align="left">Line Contents</th></tr></thead><tbody><tr><td align="left">101</td><td align="left">593.8</td><td align="left">5.9</td><td align="left">0.0</td><td align="left">if beginning: #start sign</td></tr><tr><td align="left">5252</td><td align="left">2155.9</td><td align="left">0.4</td><td align="left">0.0</td><td align="left">for row in range(row_max):</td></tr><tr><td align="left">597516</td><td align="left">187218.2</td><td align="left">0.3</td><td align="left">2.3</td><td align="left">for column in range(column_max):</td></tr><tr><td align="left">592365</td><td align="left">7321122.0</td><td align="left">12.4</td><td align="left">89.2</td><td align="left">check_state(cell_list[row][column],row,column)</td></tr><tr><td align="left">5252</td><td align="left">1487.2</td><td align="left">0.3</td><td align="left">0.0</td><td align="left">for row in range(row_max):</td></tr><tr><td align="left">597516</td><td align="left">176765.3</td><td align="left">0.3</td><td align="left">2.2</td><td align="left">for column in range(column_max):</td></tr><tr><td align="left">592365</td><td align="left">266698.4</td><td align="left">0.5</td><td align="left">3.2</td><td align="left">if cell_list[row][column].change: #need be changed</td></tr><tr><td align="left">12985</td><td align="left">238116.0</td><td align="left">18.3</td><td align="left">2.9</td><td align="left">cell_list[row][column].switch_color()</td></tr><tr><td align="left">101</td><td align="left">39.1</td><td align="left">0.4</td><td align="left">0.0</td><td align="left">if count==0:</td></tr><tr><td align="left">1</td><td align="left">10066.3</td><td align="left">10066.3</td><td align="left">0.1</td><td align="left">root.destroy()</td></tr><tr><td align="left">101</td><td align="left">4152.7</td><td align="left">41.1</td><td align="left">0.1</td><td align="left">root.after(100,start_game,count-1) #caution: start_button has no returns hence no () in needed here (or recursion error happens)</td></tr></tbody></table><p>查找neighbors占总时间89.2%感觉可以优化，有太多无效查找。</p><h2 id="Version-1"><a href="#Version-1" class="headerlink" title="Version 1"></a>Version 1</h2><h3 id="介绍-2"><a href="#介绍-2" class="headerlink" title="介绍"></a>介绍</h3><ol><li>基于cell_list遍历list，找出所有cell.liveCell为True的cell并使它周围rectangle的cell.neighbor +1</li><li>再次遍历，找出需要change的cell并直接调用cell.switch()覆盖改变</li></ol><h3 id="源码-1"><a href="#源码-1" class="headerlink" title="源码"></a>源码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#mark cell&#x27;s neighbor numbers</span></span><br><span class="line">def find_neighbor(cell,row,column):</span><br><span class="line">    <span class="keyword">if</span> cell.liveCell: <span class="comment">#live cell</span></span><br><span class="line">        global cell_list</span><br><span class="line">        global row_max</span><br><span class="line">        global column_max</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(-1,2):</span><br><span class="line">            <span class="keyword">if</span> row+i&lt;0 or row+i&gt;row_max-1: <span class="comment">#out of range</span></span><br><span class="line">                <span class="built_in">continue</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> range(-1,2):</span><br><span class="line">                    <span class="keyword">if</span> column+j&lt;0 or column+j&gt;column_max-1: <span class="comment">#out of range</span></span><br><span class="line">                        <span class="built_in">continue</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                       cell_list[row+i][column+j].neighbor+=1</span><br><span class="line">        </span><br><span class="line">        cell.neighbor-=1 <span class="comment">#multi added</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>: <span class="comment">#no cell</span></span><br><span class="line">        pass</span><br><span class="line"></span><br><span class="line"><span class="comment">#check cell state. 3 neighbors born, 2 and 3 neighbors survival</span></span><br><span class="line">def check_state(cell):</span><br><span class="line">    neighbors=cell.neighbor <span class="comment">#get neighbor number</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> cell.liveCell:</span><br><span class="line">        <span class="keyword">if</span> neighbors !=2 and neighbors !=3: <span class="comment">#dead</span></span><br><span class="line">            cell.switch_color()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">if</span> neighbors == 3: <span class="comment">#born</span></span><br><span class="line">            cell.switch_color()</span><br><span class="line"></span><br><span class="line">    cell.neighbor=0 <span class="comment">#init</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#command of start button, start the game in each 1s</span></span><br><span class="line">def start_game(count):</span><br><span class="line">    global beginning</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> beginning: <span class="comment">#start sign</span></span><br><span class="line">        global cell_list</span><br><span class="line">        global row_max</span><br><span class="line">        global column_max</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> row <span class="keyword">in</span> range(row_max):</span><br><span class="line">            <span class="keyword">for</span> column <span class="keyword">in</span> range(column_max):</span><br><span class="line">                find_neighbor(cell_list[row][column],row,column)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> row <span class="keyword">in</span> range(row_max):</span><br><span class="line">            <span class="keyword">for</span> column <span class="keyword">in</span> range(column_max):</span><br><span class="line">                check_state(cell_list[row][column])</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> count==0:</span><br><span class="line">            root.destroy()</span><br><span class="line"></span><br><span class="line">        <span class="comment">#run start_button again after 100ms</span></span><br><span class="line">        root.after(100,start_game,count) <span class="comment">#caution: start_button has no returns hence no () in needed here (or recursion error happens)</span></span><br><span class="line">    <span class="keyword">else</span>: <span class="comment">#get stop sign</span></span><br><span class="line">        pass</span><br></pre></td></tr></table></figure><h3 id="效率-1"><a href="#效率-1" class="headerlink" title="效率"></a>效率</h3><p>@profile start_game(count)<br>Total time: 2.48149 s</p><table><thead><tr><th align="left">Hits</th><th align="left">Time</th><th align="left">Per Hit</th><th align="left">% Time</th><th align="left">Line Contents</th></tr></thead><tbody><tr><td align="left">101</td><td align="left">551.8</td><td align="left">5.5</td><td align="left">0.0</td><td align="left">if beginning: #start sign</td></tr><tr><td align="left">5252</td><td align="left">2651.8</td><td align="left">0.5</td><td align="left">0.1</td><td align="left">for row in range(row_max):</td></tr><tr><td align="left">597516</td><td align="left">242416.2</td><td align="left">0.4</td><td align="left">9.8</td><td align="left">for column in range(column_max):</td></tr><tr><td align="left">592365</td><td align="left">1028903.5</td><td align="left">1.7</td><td align="left">41.5</td><td align="left">find_neighbor(cell_list[row][column],row,column)</td></tr><tr><td align="left">5252</td><td align="left">1716.3</td><td align="left">0.3</td><td align="left">0.1</td><td align="left">for row in range(row_max):</td></tr><tr><td align="left">597516</td><td align="left">196414.3</td><td align="left">0.3</td><td align="left">7.9</td><td align="left">for column in range(column_max):</td></tr><tr><td align="left">592365</td><td align="left">993903.4</td><td align="left">1.7</td><td align="left">40.1</td><td align="left">check_state(cell_list[row][column])</td></tr><tr><td align="left">101</td><td align="left">41.0</td><td align="left">0.4</td><td align="left">0.0</td><td align="left">if count==0:</td></tr><tr><td align="left">1</td><td align="left">10520.8</td><td align="left">10520.8</td><td align="left">0.4</td><td align="left">root.destroy()</td></tr><tr><td align="left">101</td><td align="left">4375.6</td><td align="left">43.3</td><td align="left">0.2</td><td align="left">root.after(100,start_game,count-1) #caution: start_button has no returns hence no () in needed here (or recursion error happens)</td></tr></tbody></table><p>时间缩短70%，优化成功。之后尝试缩短check_state里查找目标cell用时，如建立一个list储存neighbors为3的rectangle，和liveCell的坐标以减小无效查找。</p><h2 id="Version-2"><a href="#Version-2" class="headerlink" title="Version 2"></a>Version 2</h2><h3 id="介绍-3"><a href="#介绍-3" class="headerlink" title="介绍"></a>介绍</h3><ol start="0"><li>在left click operation时更新liveCell_list，start loop</li><li>根据liveCell_list精准找到live cell并使周围cell.neighbor+1，记录cell.neighbor=3的无生命cell到newBorn_list</li><li>分析liveCell_list里cell的cell.neighbor，去除neighbor不为2和3的cell，更新cell state</li><li>记录更新newBorn_list的cell state</li><li>合并liveCell_list和newBorn_list，清空newBorn_list和cell.neighbor</li></ol><h3 id="源码-2"><a href="#源码-2" class="headerlink" title="源码"></a>源码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#mark cell&#x27;s neighbor numbers by liveCell_list, and build newBorn_list</span></span><br><span class="line">def find_neighbor():</span><br><span class="line">    global cell_list</span><br><span class="line">    global newBorn_list</span><br><span class="line">    global liveCell_list</span><br><span class="line"></span><br><span class="line">    global row_max</span><br><span class="line">    global column_max</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> [row,column] <span class="keyword">in</span> liveCell_list:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(-1,2):</span><br><span class="line">            <span class="keyword">if</span> row+i&lt;0 or row+i&gt;row_max-1: <span class="comment">#out of range</span></span><br><span class="line">                <span class="built_in">continue</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> range(-1,2):</span><br><span class="line">                    <span class="keyword">if</span> column+j&lt;0 or column+j&gt;column_max-1: <span class="comment">#out of range</span></span><br><span class="line">                        <span class="built_in">continue</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        n_row=row+i</span><br><span class="line">                        n_column=column+j</span><br><span class="line">                        cell_list[n_row][n_column].neighbor+=1</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span> not cell_list[n_row][n_column].liveCell: <span class="comment">#newBorn_list only reocrd coord where have no life</span></span><br><span class="line">                            <span class="keyword">if</span> cell_list[n_row][n_column].neighbor==3:</span><br><span class="line">                                newBorn_list.append([n_row,n_column])</span><br><span class="line">                            <span class="keyword">elif</span> cell_list[n_row][n_column].neighbor==4:</span><br><span class="line">                                newBorn_list.remove([n_row,n_column])</span><br><span class="line">            </span><br><span class="line">        cell_list[row][column].neighbor-=1 <span class="comment">#multi added</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#check live cell state, remove dead cell out of liveCell_list. 2 and 3 neighbors survival</span></span><br><span class="line">def check_liveCell_state():</span><br><span class="line">    global cell_list</span><br><span class="line">    global liveCell_list</span><br><span class="line">    new_liveCell_list=[]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> [row,column] <span class="keyword">in</span> liveCell_list:</span><br><span class="line">        neighbors=cell_list[row][column].neighbor <span class="comment">#get neighbor number</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> neighbors !=2 and neighbors !=3: <span class="comment">#dead</span></span><br><span class="line">            cell_list[row][column].switch_state()</span><br><span class="line">        <span class="keyword">else</span>: <span class="comment">#survive</span></span><br><span class="line">            new_liveCell_list.append([row,column])</span><br><span class="line"></span><br><span class="line">    liveCell_list=new_liveCell_list</span><br><span class="line"></span><br><span class="line"><span class="comment">#operate nre born cell in newBorn_list</span></span><br><span class="line">def new_born_cell():</span><br><span class="line">    global newBorn_list</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> [row,column] <span class="keyword">in</span> newBorn_list:</span><br><span class="line">        cell_list[row][column].switch_state()</span><br><span class="line"></span><br><span class="line"><span class="comment">#combine liveCell_list and newBorn_list together, clear cell.neighbors and newBorn_list</span></span><br><span class="line">def pre_nextLoop():</span><br><span class="line">    global cell_list</span><br><span class="line">    global liveCell_list</span><br><span class="line">    global newBorn_list</span><br><span class="line"></span><br><span class="line">    liveCell_list=liveCell_list+newBorn_list</span><br><span class="line">    newBorn_list.clear()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> list <span class="keyword">in</span> cell_list:</span><br><span class="line">        <span class="keyword">for</span> cell <span class="keyword">in</span> list:</span><br><span class="line">            cell.neighbor=0</span><br><span class="line"></span><br><span class="line"><span class="comment">#command of start button, start the game in each 1s</span></span><br><span class="line">def start_game(count):</span><br><span class="line">    global beginning</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> beginning: <span class="comment">#start sign</span></span><br><span class="line">        find_neighbor()</span><br><span class="line">        check_liveCell_state()</span><br><span class="line">        new_born_cell()</span><br><span class="line">        pre_nextLoop()</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> count==0:</span><br><span class="line">            root.destroy()</span><br><span class="line"></span><br><span class="line">        <span class="comment">#run start_button again after 100ms</span></span><br><span class="line">        root.after(100,start_game,count-1) <span class="comment">#caution: start_button has no returns hence no () in needed here (or recursion error happens)</span></span><br><span class="line">    <span class="keyword">else</span>: <span class="comment">#get stop sign</span></span><br><span class="line">        pass</span><br></pre></td></tr></table></figure><h3 id="效率-2"><a href="#效率-2" class="headerlink" title="效率"></a>效率</h3><p>@profile start_game(count)<br>Total time: 0.963228 s</p><table><thead><tr><th align="left">Hits</th><th align="left">Time</th><th align="left">Per Hit</th><th align="left">% Time</th><th align="left">Line Contents</th></tr></thead><tbody><tr><td align="left">101</td><td align="left">461.4</td><td align="left">4.6</td><td align="left">0.0</td><td align="left">if beginning: #start sign</td></tr><tr><td align="left">101</td><td align="left">492614.4</td><td align="left">4877.4</td><td align="left">51.1</td><td align="left">find_neighbor()</td></tr><tr><td align="left">101</td><td align="left">144015.7</td><td align="left">1425.9</td><td align="left">15.0</td><td align="left">check_liveCell_state()</td></tr><tr><td align="left">101</td><td align="left">121916.5</td><td align="left">1207.1</td><td align="left">12.7</td><td align="left">new_born_cell()</td></tr><tr><td align="left">101</td><td align="left">190508.8</td><td align="left">1886.2</td><td align="left">19.8</td><td align="left">pre_nextLoop()</td></tr><tr><td align="left">101</td><td align="left">83.5</td><td align="left">0.8</td><td align="left">0.0</td><td align="left">if count==0:</td></tr><tr><td align="left">1</td><td align="left">9204.7</td><td align="left">9204.7</td><td align="left">1.0</td><td align="left">root.destroy()</td></tr><tr><td align="left">101</td><td align="left">4422.6</td><td align="left">43.8</td><td align="left">0.5</td><td align="left">root.after(100,start_game,count-1) #caution: start_button has no returns hence no () in needed here (or recursion error happens)</td></tr></tbody></table><p>时间消耗减少63%，对待大canvas，少live cell有巨大优势。但list处理中newBorn_list.remove()比想象中更花时间，如有大量cell交互改变可能会有较大问题。</p>]]></content>
      
      
      <categories>
          
          <category> 生命游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> python </tag>
            
            <tag> Conway生命游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TKinter</title>
      <link href="/python/TKinter-71b0c27c039d/"/>
      <url>/python/TKinter-71b0c27c039d/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>Python自带GUI pack，easyGUI底层pack。以python底层编写，所以无法处理复杂逻辑，但处理简单问题比QT等以C为底层pack更方便。</p><span id="more"></span><h2 id="程序调用"><a href="#程序调用" class="headerlink" title="程序调用"></a>程序调用</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">官网：(https://docs.python.org/3.7/library/tkinter.html)</span><br><span class="line">说明：(http://c.biancheng.net/tkinter/)</span><br><span class="line"></span><br><span class="line">from tkinter import *</span><br><span class="line">from tkinter import ttk</span><br><span class="line"></span><br><span class="line">root = Tk() <span class="comment">#create a root widget</span></span><br><span class="line">root.title(<span class="string">&quot;TK&quot;</span>) <span class="comment">#set title</span></span><br><span class="line">root.geometry(<span class="string">&quot;600x400+20+20&quot;</span>) <span class="comment">#set window with 600x400 pixcel, left-up corner in position (20,20)</span></span><br><span class="line">frm = ttk.Frame(root, padding=10) <span class="comment">#create a frame based on root</span></span><br><span class="line">frm.grid() <span class="comment">#easy placement based on column and row</span></span><br><span class="line"></span><br><span class="line">lb=ttk.Label(frm, text=<span class="string">&quot;Label&quot;</span>) <span class="comment">#label box</span></span><br><span class="line">lb.grid(row=0,column=0) <span class="comment">#pack label into grid</span></span><br><span class="line"></span><br><span class="line">entry=ttk.Entry(frm) <span class="comment">#enter box</span></span><br><span class="line">enter.delete(0,<span class="string">&quot;end&quot;</span>) <span class="comment">#remove contents</span></span><br><span class="line">enter.insert(0,<span class="string">&quot;insert&quot;</span>) <span class="comment">#input string &quot;Insert&quot; in enter box</span></span><br><span class="line">enter.grid(row=0,column=1)</span><br><span class="line"></span><br><span class="line">quit_button=ttk.Button(frm, text=<span class="string">&quot;Quit1&quot;</span>, <span class="built_in">command</span>=root.destroy) <span class="comment">#quit button box</span></span><br><span class="line">quit_button.grid(row=1,column=0,columnspan=2) <span class="comment">#span 2 column cells</span></span><br><span class="line"></span><br><span class="line">Can=Canvas(frm,height=300,width=200) <span class="comment">#create a canvas</span></span><br><span class="line">cell=Canvas.create_rectangle(2, 2, 20, 20, fill = <span class="string">&quot;black&quot;</span>) <span class="comment">#a reactangle filled with black, in range (2,2) to (20,20)</span></span><br><span class="line">Can.delete(ALL) <span class="comment">#remove all copoments in canvas</span></span><br><span class="line"></span><br><span class="line">Can.bind(<span class="string">&quot;&lt;ButtonPress-1&gt;&quot;</span>,mouse_event) <span class="comment">#mouse event and commanf funciton</span></span><br><span class="line"></span><br><span class="line">def mouse_event(event):</span><br><span class="line">    lb.config(text=event) <span class="comment">#change label text</span></span><br><span class="line"></span><br><span class="line">    root.after(300,mouse_event) <span class="comment">#repeat mouse_event function after 300ms</span></span><br><span class="line"></span><br><span class="line">root.mainloop() <span class="comment">#start load window</span></span><br></pre></td></tr></table></figure><h2 id="事件列表"><a href="#事件列表" class="headerlink" title="事件列表"></a>事件列表</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;ButtonPress-1&gt;     单击鼠标左键，简写为&lt;Button-1&gt;，后面的数字可以是1/2/3，分别代表左键、中间滑轮、右键</span><br><span class="line">&lt;ButtonRelease-1&gt;释放鼠标左键，后面数字可以是1/2/3，分别代表释放左键、滑轮、右键</span><br><span class="line">&lt;B1-Motion&gt;        按住鼠标左键移动，&lt;B2-Motion&gt;和&lt;B3-Motion&gt;分别表示按住鼠标滑轮移动、右键移动</span><br><span class="line">&lt;MouseWheel&gt;    转动鼠标滑轮</span><br><span class="line">&lt;Double-Button-1&gt;双击鼠标左键</span><br><span class="line">&lt;Enter&gt;            鼠标光标进入控件实例</span><br><span class="line">&lt;Leave&gt;            鼠标光标离开控件实例</span><br><span class="line">&lt;Key&gt;            按下键盘上的任意键</span><br><span class="line">&lt;KeyPress-字母&gt;/&lt;KeyPress-数字&gt;按下键盘上的某一个字母或者数字键</span><br><span class="line">&lt;KeyRelease&gt;    释放键盘上的按键</span><br><span class="line">&lt;Return&gt;        回车键，其他同类型键有&lt;Shift&gt;/&lt;Tab&gt;/&lt;Control&gt;/&lt;Alt&gt;</span><br><span class="line">&lt;Space&gt;            空格键</span><br><span class="line">&lt;UP&gt;/&lt;Down&gt;/&lt;Left&gt;/&lt;Right&gt;方向键</span><br><span class="line">&lt;F1&gt;...&lt;F12&gt;    常用的功能键</span><br><span class="line">&lt;Control-Alt&gt;    组合键，再比如&lt;Control-Shift-KeyPress-T&gt;，表示用户同时点击 Ctrl + Shift + T</span><br><span class="line">&lt;FocusIn&gt;        当控件获取焦点时候触发，比如鼠标点击输入控件输入内容，可以调用 focus_set() 方法使控件获得焦点</span><br><span class="line">&lt;FocusOut&gt;        当控件失去焦点时激活，比如当鼠标离开输入框的时候</span><br><span class="line">&lt;Configure &gt;    控件的发生改变的时候触发事件，比如调整了控件的大小等</span><br><span class="line">&lt;Deactivate&gt;    当控件的状态从“激活”变为“未激活”时触发事件</span><br><span class="line">&lt;Destroy&gt;        当控件被销毁的时候触发执行事件的函数</span><br><span class="line">&lt;Expose&gt;        当窗口或组件的某部分不再被覆盖的时候触发事件</span><br><span class="line">&lt;Visibility&gt;    当应用程序至少有一部分在屏幕中是可见状态时触发事件</span><br><span class="line"></span><br><span class="line">widget        发生事件的是哪一个控件</span><br><span class="line">x,y            相对于窗口的左上角而言，当前鼠标的坐标位置</span><br><span class="line">x_root,y_root相对于屏幕的左上角而言，当前鼠标的坐标位置</span><br><span class="line">char        用来显示所按键相对应的字符</span><br><span class="line">keysym        按键名，比如 Control_L 表示左边的 Ctrl 按键</span><br><span class="line">keycode        按键码，一个按键的数字编号，比如 Delete 按键码是107</span><br><span class="line">num            1/2/3中的一个，表示点击了鼠标的哪个按键，按键分为左、中、右</span><br><span class="line">width,height控件的修改后的尺寸，对应着 &lt;Configure&gt;事件</span><br><span class="line"><span class="built_in">type</span>        事件类型</span><br></pre></td></tr></table></figure><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><h3 id="界面生成"><a href="#界面生成" class="headerlink" title="界面生成"></a>界面生成</h3><p>“x”为小写x，不能是”*”</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root.geometry(<span class="string">&quot;600x400+20+20&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="Components-回调函数提前运行或不运行"><a href="#Components-回调函数提前运行或不运行" class="headerlink" title="Components 回调函数提前运行或不运行"></a>Components 回调函数提前运行或不运行</h3><p>如button等component是默认无variable交换和return的，如果有variable会在开始时运行一遍并之后不再运行。<br>解决方法是在开头加上”lambda:”，但仍然不能返回值<br>并且没有variables和return值的话最好将”()”去除，不然会有Bool cannot callback的报错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ttk.Button(frm, text=<span class="string">&quot;Reset&quot;</span>, <span class="built_in">command</span>=reset_command(10,10,Can)) <span class="comment">#Wrong, cannot using</span></span><br><span class="line">ttk.Button(frm, text=<span class="string">&quot;Start&quot;</span>, <span class="built_in">command</span>=start_button()) <span class="comment">#Wrong, get error</span></span><br><span class="line"></span><br><span class="line">ttk.Button(frm, text=<span class="string">&quot;Reset&quot;</span>, <span class="built_in">command</span>=lambda:reset_command(10,10,Can)) <span class="comment">#Correct</span></span><br><span class="line">ttk.Button(frm, text=<span class="string">&quot;Start&quot;</span>, <span class="built_in">command</span>=start_button) <span class="comment">#Correct</span></span><br></pre></td></tr></table></figure><h3 id="函数循环运行"><a href="#函数循环运行" class="headerlink" title="函数循环运行"></a>函数循环运行</h3><p>不能单纯用”While(1)”进入循环，不然TK window会显示无响应并卡住不动，尽管程序是照常循行的。<br>另外如果after内的函数没有variable的话不需要”()”，不然会有递归报错。</p><p>like：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root.after(300,start_button()) <span class="comment">#wrong!!! recursion error might happened</span></span><br><span class="line"></span><br><span class="line">root.after(300,start_button) <span class="comment">#correct</span></span><br><span class="line"></span><br><span class="line">root.after(300,start_button,count) <span class="comment">#can pass the variable to function start_button(count)</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> python </tag>
            
            <tag> plugin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>生命游戏框架开发</title>
      <link href="/Conway%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F%E6%A1%86%E6%9E%B6%E5%BC%80%E5%8F%91-30b19784e45e/"/>
      <url>/Conway%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F%E6%A1%86%E6%9E%B6%E5%BC%80%E5%8F%91-30b19784e45e/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>用简单逻辑模拟生命运行规律，感觉很有趣。新建文件夹开新坑防止反悔弃坑。</p><span id="more"></span><h2 id="开发思路"><a href="#开发思路" class="headerlink" title="开发思路"></a>开发思路</h2><ol><li>图形可视化开发测试，计划使用Tkinter制作网格UI</li><li>主体逻辑开发，list[rows][columns]管理格子状态</li><li>UI控制界面大小，时间等状态，逻辑主体和UI控制脱离</li><li>绘制class diagram和logic diagram，方便维护</li></ol><h2 id="lib调用"><a href="#lib调用" class="headerlink" title="lib调用"></a>lib调用</h2><p>主要由TKinter生成GUI，如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">from tkinter import *</span><br><span class="line">from tkinter import ttk</span><br></pre></td></tr></table></figure><p>TKinter 介绍：(<a href="https://pipirima.top/python/TKinter-71b0c27c039d/#more">https://pipirima.top/python/TKinter-71b0c27c039d/#more</a>)</p><h2 id="cell类说明"><a href="#cell类说明" class="headerlink" title="cell类说明"></a>cell类说明</h2><p>init里有7大variables:</p><table><thead><tr><th align="left">Variable</th><th align="left">Type</th><th align="left">Explanation</th></tr></thead><tbody><tr><td align="left">x1,y1</td><td align="left">Int</td><td align="left">rectangle左上角坐标</td></tr><tr><td align="left">x2,y2</td><td align="left">Int</td><td align="left">rectangle右下角坐标</td></tr><tr><td align="left">Canvas</td><td align="left">Tkinter.Canvas</td><td align="left">cell所属Canvas object</td></tr><tr><td align="left">neighbor</td><td align="left">Int</td><td align="left">cell附件neighbor数量</td></tr><tr><td align="left">liveCell</td><td align="left">Bool</td><td align="left">记录cell是否是存活状态</td></tr></tbody></table><p>和该class 7大方法：</p><table><thead><tr><th align="left">Name</th><th align="left">Usage</th><th align="left">Call for</th></tr></thead><tbody><tr><td align="left">_ <em>init</em> _(self,x1,y1,x2,y2,color,Canvas)</td><td align="left">初始化class</td><td align="left">determine_state(),print()</td></tr><tr><td align="left">switch_state(self)</td><td align="left">转换状态</td><td align="left">print()</td></tr><tr><td align="left">ShiftPosition(self,dx,dy)</td><td align="left">改变两组(x,y)坐标平移一个cell</td><td align="left">print()</td></tr><tr><td align="left">ZoomPosition(self,dx,dy,rate)</td><td align="left">以一定rate缩放cell，并平移dx,dy使鼠标所指点不变</td><td align="left">print()</td></tr><tr><td align="left">change_color(self,color)</td><td align="left">使目标cell改变为输入的color的state</td><td align="left">print()</td></tr><tr><td align="left">determine_state(self,color)</td><td align="left">通过cell颜色判断存活状态</td><td align="left">None</td></tr><tr><td align="left">print(self)</td><td align="left">根据liveCell判断颜色并在Canvas上print此cell</td><td align="left">None</td></tr></tbody></table><p>所有cell会统一存储在global variable: cell_list[row][column]中管理<br>存活的cell会额外存储[row,column]到liveCell_list<br>每一轮新的cell会先放在newBorn_list，然后在loop结尾和liveCell_list合并</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">class cell:</span><br><span class="line">    def __init__(self,x1,y1,x2,y2,color,Canvas):</span><br><span class="line">        self.x1=x1</span><br><span class="line">        self.y1=y1</span><br><span class="line">        self.x2=x2</span><br><span class="line">        self.y2=y2</span><br><span class="line">        self.Canvas=Canvas</span><br><span class="line">        self.neighbor=0</span><br><span class="line">        self.liveCell=False</span><br><span class="line">        self.determine_state(color)</span><br><span class="line">        <span class="comment">#self.print()</span></span><br><span class="line"></span><br><span class="line">    def determine_state(self,color):</span><br><span class="line">        <span class="keyword">if</span> color == <span class="string">&quot;white&quot;</span>:</span><br><span class="line">            self.liveCell=True</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.liveCell=False</span><br><span class="line">    </span><br><span class="line">    def switch_state(self):</span><br><span class="line">        self.liveCell=not self.liveCell</span><br><span class="line">        self.print()</span><br><span class="line"></span><br><span class="line">    def ShiftPosition(self,dx,dy):</span><br><span class="line">        self.x1=self.x1+dx</span><br><span class="line">        self.y1=self.y1+dy</span><br><span class="line">        self.x2=self.x2+dx</span><br><span class="line">        self.y2=self.y2+dy</span><br><span class="line">        <span class="comment">#self.print()</span></span><br><span class="line">    </span><br><span class="line">    def ZoomPosition(self,dx,dy,rate):</span><br><span class="line">        self.x1=self.x1*rate+dx</span><br><span class="line">        self.y1=self.y1*rate+dy</span><br><span class="line">        self.x2=self.x2*rate+dx</span><br><span class="line">        self.y2=self.y2*rate+dy</span><br><span class="line">        <span class="comment">#self.print()</span></span><br><span class="line"></span><br><span class="line">    def change_color(self,color):</span><br><span class="line">        <span class="comment">#self.Canvas.delete(self)</span></span><br><span class="line">        <span class="keyword">if</span> color==<span class="string">&quot;white&quot;</span>:</span><br><span class="line">            self.liveCell=True</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.liveCell=False</span><br><span class="line">        self.print()</span><br><span class="line"></span><br><span class="line">    def <span class="built_in">print</span>(self):</span><br><span class="line">        <span class="keyword">if</span> self.liveCell:</span><br><span class="line">            self.Canvas.create_rectangle(int(self.x1), int(self.y1), int(self.x2), int(self.y2), fill = <span class="string">&quot;white&quot;</span>, outline=<span class="string">&quot;&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.Canvas.create_rectangle(int(self.x1), int(self.y1), int(self.x2), int(self.y2), fill = <span class="string">&quot;grey&quot;</span>, outline=<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="Global-Variables"><a href="#Global-Variables" class="headerlink" title="Global Variables"></a>Global Variables</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">x_pos=0 <span class="comment">#mouse posiotn recording</span></span><br><span class="line">y_pos=0</span><br><span class="line"></span><br><span class="line">liveCell_list=[] <span class="comment">#life cell list</span></span><br><span class="line">newBorn_list=[] <span class="comment">#has 3 neighbors but no live cell right now (new live cell in next round)</span></span><br><span class="line"></span><br><span class="line">cell_list=[] <span class="comment">#2-D list memory</span></span><br><span class="line">cell_length=10 <span class="comment">#length of singal cell</span></span><br><span class="line">cell_length_max=40</span><br><span class="line">cell_length_min=3</span><br><span class="line">cell_gap=0.1*cell_length <span class="comment">#gap in two cells</span></span><br><span class="line">row_max=0</span><br><span class="line">column_max=0</span><br><span class="line">beginning=False</span><br></pre></td></tr></table></figure><h2 id="基础界面生成和操作"><a href="#基础界面生成和操作" class="headerlink" title="基础界面生成和操作"></a>基础界面生成和操作</h2><h3 id="GUI界面"><a href="#GUI界面" class="headerlink" title="GUI界面"></a>GUI界面</h3><h3 id="按钮设置"><a href="#按钮设置" class="headerlink" title="按钮设置"></a>按钮设置</h3><h4 id="Submit-Button"><a href="#Submit-Button" class="headerlink" title="Submit Button"></a>Submit Button</h4><p>直接Call create_cell_matrix(row,column,cell_length,Can)来更新cell_list并重绘Canvas</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">def submit_command(row,column,Can):</span><br><span class="line">    create_cell_matrix(row,column,cell_length,Can)</span><br></pre></td></tr></table></figure><h4 id="Reset-Button"><a href="#Reset-Button" class="headerlink" title="Reset Button"></a>Reset Button</h4><p>重置成程序刚启动的样子。恢复原始rows columns，停止游戏运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">def reset_command(row,column,Can):</span><br><span class="line">    global beginning</span><br><span class="line"></span><br><span class="line">    insert_enterbox(entry_row,int(canvas_height/(cell_length+cell_gap))-1)</span><br><span class="line">    insert_enterbox(entry_column,int(canvas_width/(cell_length+cell_gap))-1)</span><br><span class="line">    create_cell_matrix(row,column,cell_length,Can)</span><br><span class="line">    beginning=False</span><br></pre></td></tr></table></figure><h4 id="Start-Button"><a href="#Start-Button" class="headerlink" title="Start Button"></a>Start Button</h4><p>标记start sign, 运行游戏主程序并生成最初的liveCell_list</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">def start_command():</span><br><span class="line">    global beginning</span><br><span class="line">    global test_count</span><br><span class="line"></span><br><span class="line">    global row_max</span><br><span class="line">    global column_max</span><br><span class="line"></span><br><span class="line">    global cell_list</span><br><span class="line">    global liveCell_list</span><br><span class="line"></span><br><span class="line">    beginning=True</span><br><span class="line">    start_game(test_count)</span><br></pre></td></tr></table></figure><h4 id="Stop-Button"><a href="#Stop-Button" class="headerlink" title="Stop Button"></a>Stop Button</h4><p>标记stop sign停止主程序运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">def stop_command():</span><br><span class="line">    global beginning</span><br><span class="line"></span><br><span class="line">    beginning=False</span><br></pre></td></tr></table></figure><h3 id="鼠标event设置"><a href="#鼠标event设置" class="headerlink" title="鼠标event设置"></a>鼠标event设置</h3><h4 id="Right-Key-Pressing"><a href="#Right-Key-Pressing" class="headerlink" title="Right Key Pressing"></a>Right Key Pressing</h4><p>重新记录global鼠标位置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">def rightKey_press(event):</span><br><span class="line">    global x_pos</span><br><span class="line">    global y_pos</span><br><span class="line"></span><br><span class="line">    x_pos=event.x</span><br><span class="line">    y_pos=event.y</span><br><span class="line">    <span class="comment">#print(&quot;right key pressing&quot;)</span></span><br></pre></td></tr></table></figure><h4 id="Right-Key-and-moving"><a href="#Right-Key-and-moving" class="headerlink" title="Right Key and moving"></a>Right Key and moving</h4><p>读取移动距离dx,dy移动cell位置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">def rightKey_moving(event):</span><br><span class="line">    global x_pos</span><br><span class="line">    global y_pos</span><br><span class="line">    global cell_list</span><br><span class="line"></span><br><span class="line">    Can.delete(ALL) <span class="comment">#remove all components</span></span><br><span class="line">    dx=event.x-x_pos</span><br><span class="line">    dy=event.y-y_pos</span><br><span class="line">    x_pos=event.x</span><br><span class="line">    y_pos=event.y</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> cell_list:</span><br><span class="line">        <span class="keyword">for</span> cell <span class="keyword">in</span> row:</span><br><span class="line">            cell.ShiftPosition(dx,dy) <span class="comment">#editing and painting cell</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#print(&quot;right key pressing and moving&quot;)</span></span><br></pre></td></tr></table></figure><h4 id="Wheel-Rolling"><a href="#Wheel-Rolling" class="headerlink" title="Wheel Rolling"></a>Wheel Rolling</h4><p>以rate数值缩放cell，并平移dx,dy使鼠标所指canvas位置看起来不变。<br>当cell length到达最大/最小尺寸时停止缩放</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">def wheel_rolling(event):</span><br><span class="line">    global cell_list</span><br><span class="line">    direction=event.delta</span><br><span class="line">    rate=0.9</span><br><span class="line"></span><br><span class="line">    <span class="comment">#check length border</span></span><br><span class="line">    <span class="keyword">if</span> direction&gt;0:</span><br><span class="line">        <span class="keyword">if</span> abs(cell_list[0][0].x1-cell_list[0][0].x2)&lt;cell_length_max: <span class="comment">#not reach minimum length</span></span><br><span class="line">            Can.delete(ALL) <span class="comment">#remove all components</span></span><br><span class="line">            rate=2-rate <span class="comment">#1.1 times</span></span><br><span class="line">            dx=event.x*(1-rate) <span class="comment">#mouse position shift, zoom figure out from where the mouse is pointed</span></span><br><span class="line">            dy=event.y*(1-rate)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> row <span class="keyword">in</span> cell_list:</span><br><span class="line">                <span class="keyword">for</span> cell <span class="keyword">in</span> row:</span><br><span class="line">                    cell.ZoomPosition(dx,dy,rate) <span class="comment">#editing and painting cell</span></span><br><span class="line">            <span class="comment">#print(&quot;Zoom out&quot;)</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;maximum size&quot;</span>)</span><br><span class="line">    <span class="keyword">elif</span> direction&lt;0:</span><br><span class="line">        <span class="keyword">if</span> abs(cell_list[0][0].x1-cell_list[0][0].x2)&gt;cell_length_min: <span class="comment">#not reach maximum length</span></span><br><span class="line">            Can.delete(ALL) <span class="comment">#remove all components</span></span><br><span class="line">            rate=rate <span class="comment">#0.9 times</span></span><br><span class="line">            dx=event.x*(1-rate)</span><br><span class="line">            dy=event.y*(1-rate)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> row <span class="keyword">in</span> cell_list:</span><br><span class="line">                <span class="keyword">for</span> cell <span class="keyword">in</span> row:</span><br><span class="line">                    cell.ZoomPosition(dx,dy,rate) <span class="comment">#editing and painting cell</span></span><br><span class="line">            <span class="comment">#print(&quot;Zoom in&quot;)</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;minimum size&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="Left-Key-Pressing"><a href="#Left-Key-Pressing" class="headerlink" title="Left Key Pressing"></a>Left Key Pressing</h4><p>查找cell坐标并switch指定cell颜色和状态，edit liveCell_list</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">def left_press(event):</span><br><span class="line">    global cell_list</span><br><span class="line">    global liveCell_list</span><br><span class="line"></span><br><span class="line">    [row,column]=find_cell(event) <span class="comment">#get target cell coordinate</span></span><br><span class="line"></span><br><span class="line">    cell_list[row][column].switch_state()</span><br><span class="line">    <span class="keyword">if</span> cell_list[row][column].liveCell: <span class="comment">#live cell</span></span><br><span class="line">        liveCell_list.append([row,column])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        liveCell_list.remove([row,column])</span><br></pre></td></tr></table></figure><h4 id="Left-Key-and-moving"><a href="#Left-Key-and-moving" class="headerlink" title="Left Key and moving"></a>Left Key and moving</h4><p>切换所有鼠标扫过的cell color到白色</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">def leftKey_moving(event):</span><br><span class="line">    global cell_list</span><br><span class="line">    global liveCell_list</span><br><span class="line"></span><br><span class="line">    [row,column]=find_cell(event) <span class="comment">#get target cell coordinate</span></span><br><span class="line"></span><br><span class="line">    cell_list[row][column].change_color(<span class="string">&quot;white&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> [row,column] not <span class="keyword">in</span> liveCell_list:</span><br><span class="line">        liveCell_list.append([row,column])</span><br><span class="line"></span><br><span class="line">    <span class="comment">#print(&quot;left key pressing and moving&quot;)</span></span><br></pre></td></tr></table></figure><h3 id="其他底层函数"><a href="#其他底层函数" class="headerlink" title="其他底层函数"></a>其他底层函数</h3><h4 id="创建cell-list和object-cell"><a href="#创建cell-list和object-cell" class="headerlink" title="创建cell list和object cell"></a>创建cell list和object cell</h4><p>清除canvas上内容，重新创建cell object并记录在一个2-D list内。cell 通过固定的 cell length 确定下一个cell coordinate</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">def create_cell_matrix(row_num,column_num,cell_length,Can):</span><br><span class="line">    global row_max</span><br><span class="line">    global column_max</span><br><span class="line">    global cell_list</span><br><span class="line">    row_max=row_num <span class="comment">#record max row number into global variable</span></span><br><span class="line">    column_max=column_num</span><br><span class="line"></span><br><span class="line">    Can.delete(ALL)</span><br><span class="line"></span><br><span class="line">    new_cell_list=[[0 <span class="keyword">for</span> _ <span class="keyword">in</span> range(column_num)] <span class="keyword">for</span> _ <span class="keyword">in</span> range(row_num)] <span class="comment">#2-D list init</span></span><br><span class="line">    shift_length=cell_length+cell_gap</span><br><span class="line">    pre_x=2 <span class="comment">#start positoin on canvas</span></span><br><span class="line">    pre_y=2</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> range(row_num):</span><br><span class="line">        <span class="keyword">for</span> column <span class="keyword">in</span> range(column_num):</span><br><span class="line">            new_cell_list[row][column]=cell(pre_x, pre_y, pre_x+cell_length, pre_y+cell_length, <span class="string">&quot;grey&quot;</span>, Can) <span class="comment">#create cell object in 2-D list system</span></span><br><span class="line">            pre_x+=shift_length <span class="comment">#move to next position</span></span><br><span class="line">        pre_x=2</span><br><span class="line">        pre_y+=shift_length <span class="comment">#move to next position</span></span><br><span class="line"></span><br><span class="line">    cell_list=new_cell_list</span><br></pre></td></tr></table></figure><h4 id="print-out-网格"><a href="#print-out-网格" class="headerlink" title="print out 网格"></a>print out 网格</h4><p>通过绘制灰色background，和白色线条来绘制网格。如果 cell gap小于1 像素则取消画线。<br>先绘制横线，然后纵线</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">def redraw_matrix():</span><br><span class="line">    global row_max</span><br><span class="line">    global column_max</span><br><span class="line">    global cell_list</span><br><span class="line">    global liveCell_list</span><br><span class="line"></span><br><span class="line">    <span class="comment">#grey background</span></span><br><span class="line">    Can.create_rectangle(cell_list[0][0].x1, cell_list[0][0].y1, cell_list[row_max-1][column_max-1].x2, cell_list[row_max-1][column_max-1].y2, fill = <span class="string">&quot;grey&quot;</span>, outline=<span class="string">&quot;&quot;</span>)</span><br><span class="line">    line_width=cell_list[0][1].x1-cell_list[0][0].x2</span><br><span class="line">    cell_distance=cell_list[0][1].x1-cell_list[0][0].x1</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> line_width&lt;1:</span><br><span class="line">        pass</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment">#draw vertical lines</span></span><br><span class="line">        line_height=cell_list[row_max-1][column_max-1].y2</span><br><span class="line">        x1=cell_list[0][0].x1-line_width</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(column_max):</span><br><span class="line">            Can.create_rectangle(x1, 0, x1+line_width, line_height, fill = <span class="string">&quot;white&quot;</span>, outline=<span class="string">&quot;&quot;</span>)</span><br><span class="line">            x1+=cell_distance</span><br><span class="line"></span><br><span class="line">        <span class="comment">#draw horizonal lines</span></span><br><span class="line">        line_height=cell_list[row_max-1][column_max-1].x2</span><br><span class="line">        y1=cell_list[0][0].y1-line_width</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(row_max):</span><br><span class="line">            Can.create_rectangle(0, y1, line_height, y1+line_width, fill = <span class="string">&quot;white&quot;</span>, outline=<span class="string">&quot;&quot;</span>)</span><br><span class="line">            y1+=cell_distance</span><br><span class="line"></span><br><span class="line">    <span class="comment">#paint white cell</span></span><br><span class="line">    <span class="keyword">for</span> row,column <span class="keyword">in</span> liveCell_list:</span><br><span class="line">        cell_list[row][column].<span class="built_in">print</span>()</span><br></pre></td></tr></table></figure><h4 id="寻找cell-rows-and-columns"><a href="#寻找cell-rows-and-columns" class="headerlink" title="寻找cell rows and columns"></a>寻找cell rows and columns</h4><p>鼠标event里有鼠标的coordinate，通过对比第一个cell的存贮坐标位置来修正shift，并除以 (cell length+cell gap) 来直接得到cell的rows and columns。<br>example：<br>event.x=40<br>event.y=80<br>cell[0][0].x1=20<br>cell[0][0].y1=20<br>cell shift=cell length + cell gap=40</p><p>rows=(event.x-cell[0][0].x1)/cell shift=(40-20)/40=0<br>columns=(80-20)/40=1</p><p>Hence mouse 所指cell为 cell[0][1]</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">def find_cell(event):</span><br><span class="line">    global cell_list</span><br><span class="line"></span><br><span class="line">    cell_shift=cell_list[0][1].x1-cell_list[0][0].x1 <span class="comment">#varying cell length</span></span><br><span class="line">    column=int((event.x-cell_list[0][0].x1)/cell_shift) <span class="comment">#row value</span></span><br><span class="line">    row=int((event.y-cell_list[0][0].y1)/cell_shift)</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">return</span> row,column</span><br></pre></td></tr></table></figure><h4 id="刷新Canvas"><a href="#刷新Canvas" class="headerlink" title="刷新Canvas"></a>刷新Canvas</h4><p>游戏暂时不清楚为什么运行一段时间会速度变慢，测试得到如果定时刷新canvas components会恢复最开始的速度。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">def refresh_screen(Can):</span><br><span class="line">    global row_max</span><br><span class="line">    global column_max</span><br><span class="line"></span><br><span class="line">    Can.delete(ALL)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> cell_list:</span><br><span class="line">        <span class="keyword">for</span> cell <span class="keyword">in</span> row:</span><br><span class="line">            cell.print() <span class="comment">#refresh matrix</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生命游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> python </tag>
            
            <tag> Conway生命游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>line profiler</title>
      <link href="/python/line-profiler-7323429fc987/"/>
      <url>/python/line-profiler-7323429fc987/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>测量每一行代码运行次数，时间，百分比等。通过console调用，不想记python代码效率关系就用它。</p><span id="more"></span><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install line_profiler</span><br></pre></td></tr></table></figure><h2 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h2><p>github:(<a href="https://github.com/pyutils/line_profiler#:~:text=LineProfiler%20can%20be%20given%20functions%20to%20profile%2C%20and,every%20single%20line%20of%20code%20would%20be%20overwhelming">https://github.com/pyutils/line_profiler#:~:text=LineProfiler%20can%20be%20given%20functions%20to%20profile%2C%20and,every%20single%20line%20of%20code%20would%20be%20overwhelming</a>.)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在需要测量的def上一行标记一下</span></span><br><span class="line">@profile</span><br><span class="line"></span><br><span class="line"><span class="comment">#在console内输入</span></span><br><span class="line">kernprof -l -v ./main.py</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出</span></span><br><span class="line">Line <span class="comment">#      #row number</span></span><br><span class="line">Hits         <span class="comment">#executed times</span></span><br><span class="line">Time        <span class="comment">#total amount of time spent executing the line in the timer&#x27;s units</span></span><br><span class="line">Per Hit     <span class="comment">#average amount of time spent executing the line</span></span><br><span class="line">% Time      <span class="comment">#percentage of time spent on that line</span></span><br><span class="line">Line Contents <span class="comment">#code content</span></span><br></pre></td></tr></table></figure><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>使用@profile标记可能会报warning，不用管它直接console里运行就行。</p><p>计算出的time单位为1e-6s</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> python </tag>
            
            <tag> plugin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pyinstaller</title>
      <link href="/python/pyinstaller-66a8b5598800/"/>
      <url>/python/pyinstaller-66a8b5598800/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>windows打包插件，打包为.exe文件。打包的文件会放在disc folder下。</p><span id="more"></span><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pyinstaller</span><br></pre></td></tr></table></figure><h2 id="程序调用"><a href="#程序调用" class="headerlink" title="程序调用"></a>程序调用</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">官网：(https://pyinstaller.org/en/stable/usage.html)</span><br><span class="line"><span class="comment">#power shell 输入</span></span><br><span class="line">pyinstaller --name=<span class="string">&quot;test&quot;</span> (options) D:\Blog\Hexo\<span class="built_in">source</span>\_posts\python\openpyxl.md</span><br><span class="line"></span><br><span class="line"><span class="comment">#options:</span></span><br><span class="line">--<span class="built_in">help</span> <span class="comment">#show help message</span></span><br><span class="line">--windowed <span class="comment">#donot open console window</span></span><br><span class="line">--console <span class="comment">#open console window</span></span><br><span class="line"></span><br><span class="line">--onefile <span class="comment">#ouput one file exe file (fit for single file program)</span></span><br><span class="line">--onedir <span class="comment">#output one dir file (fir for multiple file program)</span></span><br><span class="line"></span><br><span class="line">--icon=<span class="string">&quot;.\icon&quot;</span> <span class="comment">#change default icon (must in form of .ico)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#example</span></span><br><span class="line">pyinstaller --name=<span class="string">&quot;test&quot;</span> --windowed --onefile --icon=<span class="string">&quot;.\icon&quot;</span> .\openpyxl.py</span><br></pre></td></tr></table></figure><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><h3 id="头文件"><a href="#头文件" class="headerlink" title="头文件"></a>头文件</h3><p>import头文件尽量减少，多用from少直接import来减少打包程序大小和加快运行速度</p><h3 id="打包的文件数"><a href="#打包的文件数" class="headerlink" title="打包的文件数"></a>打包的文件数</h3><p>multi-file程序尽量使用 –onedir 加快开启速度</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> python </tag>
            
            <tag> plugin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>openpyxl</title>
      <link href="/python/openpyxl-995e13966a58/"/>
      <url>/python/openpyxl-995e13966a58/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>处理Excel文件插件，可以实时读取/写入Excel文件。和panda相比能处理更大文件，但github和社区讨论度不足，维护缓慢。</p><span id="more"></span><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install openpyxl</span><br></pre></td></tr></table></figure><h2 id="代码调用"><a href="#代码调用" class="headerlink" title="代码调用"></a>代码调用</h2><p>官方网站：(<a href="https://openpyxl.readthedocs.io/en/stable/tutorial.html">https://openpyxl.readthedocs.io/en/stable/tutorial.html</a>)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">from openpyxl import load_workbook</span><br><span class="line">from openpyxl import Workbook</span><br><span class="line">from openpyxl.styles import PatternFill <span class="comment">#fill cell&#x27;s background color</span></span><br><span class="line">add=<span class="string">&quot;D:\\Blog\\Hexo\\source\\_posts\\python\\openpyxl.md&quot;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">#open workbook. can increase open speed whenm enable read only option</span></span><br><span class="line">WB=load_workbook(filename=add,read_only=Truw)</span><br><span class="line">WB=workbook() <span class="comment">#create workbook</span></span><br><span class="line"></span><br><span class="line">sheetnames=WB.sheetnames <span class="comment">#read sheet names</span></span><br><span class="line"></span><br><span class="line">WS = WB.create_sheet(<span class="string">&quot;Mysheet&quot;</span>, 0) <span class="comment"># insert sheet at position 0</span></span><br><span class="line">WS=WB.active <span class="comment">#open active work sheet, default open sheet 0</span></span><br><span class="line">WS=WB[<span class="string">&quot;Sheet1&quot;</span>] <span class="comment">#open target sheet</span></span><br><span class="line"></span><br><span class="line">max_row=WS.max_row <span class="comment">#max row index</span></span><br><span class="line">max_col=WS.max_column <span class="comment">#max column index</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#copy every cell in sheet</span></span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> WS.rows:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> row:</span><br><span class="line">        <span class="built_in">print</span>(i.value())</span><br><span class="line"></span><br><span class="line"><span class="comment">#read one cell by index</span></span><br><span class="line">cell=WS.cell(row=<span class="string">&quot;1&quot;</span>,column=<span class="string">&quot;1&quot;</span>).value</span><br><span class="line"></span><br><span class="line"><span class="comment">#rewrite cell value</span></span><br><span class="line">WS.cell(row=<span class="string">&quot;1&quot;</span>,column=<span class="string">&quot;1&quot;</span>,value=<span class="string">&quot;value&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#save Excel sheet</span></span><br><span class="line">WB.save(<span class="string">&quot;./test.xlsx&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#fill background color</span></span><br><span class="line">yellow_color=PatternFill(<span class="string">&#x27;solid&#x27;</span>,fgColor=<span class="string">&#x27;ffff00&#x27;</span>)</span><br><span class="line">WS.cell(row=<span class="string">&quot;1&quot;</span>,column=<span class="string">&quot;1&quot;</span>).fill=yellow_color </span><br></pre></td></tr></table></figure><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><h3 id="打开地址报错"><a href="#打开地址报错" class="headerlink" title="打开地址报错"></a>打开地址报错</h3><p>调用load_workbook()时如果出现报错可以注意下输入的地址，如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#错误示范，程序会认为&#x27;\&#x27;是分行符而报错</span></span><br><span class="line">D:\Blog\Hexo\<span class="built_in">source</span>\_posts\python\openpyxl.md</span><br><span class="line"></span><br><span class="line"><span class="comment">#正确</span></span><br><span class="line">D:\\Blog\\Hexo\\<span class="built_in">source</span>\\_posts\\python\\openpyxl.md</span><br></pre></td></tr></table></figure><h3 id="打包的程序运行缓慢"><a href="#打包的程序运行缓慢" class="headerlink" title="打包的程序运行缓慢"></a>打包的程序运行缓慢</h3><p>请尽量避免大量使用代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WS.max_row</span><br></pre></td></tr></table></figure><p>程序会调用大量资源查询max_row，如果运行打包程序会奇慢无比（比VScode里慢30多倍），最好直接保存调用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">max_row=WS.max_row</span><br><span class="line"><span class="built_in">print</span>(max_row)</span><br></pre></td></tr></table></figure><h3 id="从读取的sheetname无法打开sheet"><a href="#从读取的sheetname无法打开sheet" class="headerlink" title="从读取的sheetname无法打开sheet"></a>从读取的sheetname无法打开sheet</h3><p>如想使用读取sheetnames直接打开对应的sheet，需先处理下string格式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#remove [&#x27; &#x27;] inside original sheet name</span></span><br><span class="line">sheet_name=str(sheet_name)[2:len(self.sheet_name)-3]</span><br></pre></td></tr></table></figure><h3 id="无法使用-save"><a href="#无法使用-save" class="headerlink" title="无法使用.save()"></a>无法使用.save()</h3><p>如果使用save()时报错找不到 tag.getchildren(), 可能是由python升级导致。该tag已在python 3.9之后被 list()替代，可在报错那行替换新的tag：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#previous</span></span><br><span class="line">tag.getchildren()</span><br><span class="line"></span><br><span class="line"><span class="comment">#new</span></span><br><span class="line">list(tag)</span><br></pre></td></tr></table></figure><h3 id="读取value缓慢"><a href="#读取value缓慢" class="headerlink" title="读取value缓慢"></a>读取value缓慢</h3><p>如果在openworkbook时enable了read_only会大大减慢每个单元格读取速度，推荐直接disable这块，虽然会减慢文件打开速度但不会影响cell check时效率。</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> python </tag>
            
            <tag> plugin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>easy gui</title>
      <link href="/python/easy-gui-e6a4bfa96038/"/>
      <url>/python/easy-gui-e6a4bfa96038/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>类似一般 APP install guidance 的插件，排版自由度不足，但胜在调用简单方便，配合 FSM(finite state machine) 有奇效。</p><span id="more"></span><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install easygui</span><br></pre></td></tr></table></figure><h2 id="基本调用语句"><a href="#基本调用语句" class="headerlink" title="基本调用语句"></a>基本调用语句</h2><p>官方tutorial:(<a href="http://easygui.sourceforge.net/tutorial.html">http://easygui.sourceforge.net/tutorial.html</a>)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">import easygui as gui <span class="comment">#import gui lib</span></span><br><span class="line">Button=[<span class="string">&quot;A&quot;</span>,<span class="string">&quot;B&quot;</span>,<span class="string">&quot;C&quot;</span>,<span class="string">&quot;D&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#message box, return string in ok_button</span></span><br><span class="line">gui.msgbox(msg=<span class="string">&quot;Message&quot;</span>,title=<span class="string">&quot;Title&quot;</span>,ok_button=<span class="string">&quot;OK&quot;</span>) </span><br><span class="line"></span><br><span class="line"><span class="comment">#choice box, return choiced string</span></span><br><span class="line">choice=gui.choicebox(msg=<span class="string">&quot;Message&quot;</span>,title=<span class="string">&quot;Title&quot;</span>,choices=Button) </span><br><span class="line"></span><br><span class="line"><span class="comment">#button box, return choiced string</span></span><br><span class="line">choice=gui.buttonbox(msg=<span class="string">&quot;Message&quot;</span>,title=<span class="string">&quot;Title&quot;</span>,choices=Button) </span><br><span class="line"></span><br><span class="line"><span class="comment">#cancle-continue box, return True if click continue, False if click cancle</span></span><br><span class="line">choice=gui.ccbox(msg=<span class="string">&quot;Message&quot;</span>,title=<span class="string">&quot;Title&quot;</span>,default_choice=<span class="string">&quot;continue&quot;</span>,cancel_choice=<span class="string">&quot;cancle&quot;</span>) </span><br><span class="line"></span><br><span class="line"><span class="comment">#open file box, return file address</span></span><br><span class="line">add=gui.fileopenbox(title=<span class="string">&#x27;Title&#x27;</span>) </span><br></pre></td></tr></table></figure><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>如果没有有效输入（如直接点关闭键什么的）将会输出 None，注意要设定输出为 None 时的程序逻辑</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> python </tag>
            
            <tag> plugin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32 HID device</title>
      <link href="/STM32/STM32-HID-device-ebe1966271bf/"/>
      <url>/STM32/STM32-HID-device-ebe1966271bf/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>可用STM32模拟鼠标数据控制。</p><span id="more"></span><p>发送给上位机数据为4 bytes</p><table><thead><tr><th align="left">byte</th><th align="left">bit</th><th align="left">implement</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">7</td><td align="left">1 means Y changes larger than the range -256~255</td></tr><tr><td align="left">1</td><td align="left">6</td><td align="left">1 means X changes larger than the range -256~255</td></tr><tr><td align="left">1</td><td align="left">5</td><td align="left">1 means Y changes to negative part</td></tr><tr><td align="left">1</td><td align="left">4</td><td align="left">1 means X changes to negative part</td></tr><tr><td align="left">1</td><td align="left">3</td><td align="left">constant 1</td></tr><tr><td align="left">1</td><td align="left">2</td><td align="left">middle key pressed</td></tr><tr><td align="left">1</td><td align="left">1</td><td align="left">right key pressed</td></tr><tr><td align="left">1</td><td align="left">0</td><td align="left">left key pressed</td></tr><tr><td align="left">2</td><td align="left">0-7</td><td align="left">X coordinate’s chaning</td></tr><tr><td align="left">3</td><td align="left">0-7</td><td align="left">Y coordinate’s chaning</td></tr><tr><td align="left">4</td><td align="left">0-7</td><td align="left">rolling value</td></tr></tbody></table><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><p>CubeMX里 connectivity-USB enable “Device”, 然后Middleware 选择 HID，保持默认即可</p><p>在main.c中添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include “usbd_hid.h”</span></span><br><span class="line"></span><br><span class="line">uint8_t MouseData01[4] = &#123;0,0,0,0&#125;;</span><br><span class="line">extern USBD_HandleTypeDef hUsbDeviceFS;</span><br></pre></td></tr></table></figure><p>while里</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">USBD_HID_SendReport(&amp;hUsbDeviceFS,(uint8_t*)&amp;MouseData01,sizeof(MouseData01));</span><br></pre></td></tr></table></figure><p>即可控制</p>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo快速编辑TIPS</title>
      <link href="/hello-world-1a2da80343a8/"/>
      <url>/hello-world-1a2da80343a8/</url>
      
        <content type="html"><![CDATA[<p>一些基本的Hexo命令行语句。每次修改完记得按流程测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean // 清除缓存</span><br><span class="line"></span><br><span class="line">$ hexo g // 从新生成html静态文件</span><br><span class="line"></span><br><span class="line">$ hexo s // 本地创建 localhost:4000</span><br><span class="line"></span><br><span class="line">$ hexo d // 上传域名</span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h3 id="Shell-Script"><a href="#Shell-Script" class="headerlink" title="Shell Script"></a>Shell Script</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">read</span> -n 1</span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Done&quot;</span></span><br><span class="line">sleep 1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MGT388 Finance and Law for Engineers</title>
      <link href="/2021-2022/MGT388-Finance-and-Law-for-Engineers-6bc17ae9658a/"/>
      <url>/2021-2022/MGT388-Finance-and-Law-for-Engineers-6bc17ae9658a/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="Week1"><a href="#Week1" class="headerlink" title="Week1"></a>Week1</h1><h2 id="Law"><a href="#Law" class="headerlink" title="Law"></a>Law</h2><p>contents of law in this semester are contain with 4 topics:<br>contract law<br>Intellectual property (IP) law 知识产权法<br>Law of Torts 民事侵权法<br>Environmental law</p><h3 id="Contract-law"><a href="#Contract-law" class="headerlink" title="Contract law"></a>Contract law</h3><p>Common law:<br>The strength of an authority(威权) will depend upon it having like facts to the case in hand and generally that it was decided in a higher court.<br>The question of what amounts to ‘like facts’ is not always easy<br>Two very able advocates(提倡者) trying to persuade the court that the strength of authority supports their case rather than the opposition<br>Have no standard terms and conditions!!!</p><p>Contract law regards with civil(民法) law instead of criminal(刑法) law<br>criminal law: face to social security, operate by state, paid to state and must show defendant(被告) is guilty.<br>civil law: brought individual who fells have suffered, paid to party who bringing action and claimant(索赔人) must show defendant is liable ‘on the balance of probabilities’(the probability whether defendant is guilty based on evidence from two parties)</p><p>contract law regards private not public law<br>public sector(公共部门) follows public functions is public law, but they purchas pens or paying construction regards private law.</p><p>Generally, only the parties to the contract can enforce it in court</p><p>Common law and equity are two methods for the judge. common law means sertainty but equity means court can deal the case with discretionary(自由裁量权)</p><hr><p>contract is an agreement giving rise to obligations which are enforced or recognised by law.</p><p>Why enter into a contract?<br>• Facilitate exchange/make bargains<br>• Plan commercial relationship<br>• Provide certainty<br> promises are made to be kept; contracts are made to be performed.<br>voluntarily(自愿的)</p><p>Normal method of remedy(解决方法) is awarding of damages. courts try to calculate the case that both parties follow contract and position they would be. sometime it will lead to ‘specific performance’, like enforce them continully follow the contract.</p><p>following components have valid contract:<br>offer<br>acceptance<br>consideration<br>intention to create legal relations<br>certainty</p><h1 id="Week2"><a href="#Week2" class="headerlink" title="Week2"></a>Week2</h1><h3 id="offer"><a href="#offer" class="headerlink" title="offer"></a>offer</h3><p>Offer is an unequivocal indication of a willingness to be legally bound by a promise if the terms of the offer are met.<br>like said “100 pounds for each mouse and they will be delivered due to 25th Nov”.<br>but keep mind that price list and most advertisement are not offer. courts will evaluate if contents in an offer is detailed enough as a contract.</p><p>An offer may terminated at any point up until acceptance<br>An offer will lapse(失效) after a ‘reasonable’ time<br>An offer will lapse on the failure of a condition precedent<br>An offer will lapse on the death of the offerer (perhaps)</p><h3 id="acceptance"><a href="#acceptance" class="headerlink" title="acceptance"></a>acceptance</h3><p>an acceptance means absolute and unequivocal(明确的), and must be communicated (but not postal rule).<br>if have any attempt to vary term, a counter offer will kill the original offer</p><h3 id="consideration"><a href="#consideration" class="headerlink" title="consideration"></a>consideration</h3><p>check any anlysis whether is a good bargain or not</p><p>but deed(契约) is differente than normal consideration. it may enforceable as what is known as a speciality contract.</p><h3 id="intention-to-create-legal-relations"><a href="#intention-to-create-legal-relations" class="headerlink" title="intention to create legal relations"></a>intention to create legal relations</h3><p>assessed objectively and rebuttable presumptions</p><h3 id="certainty"><a href="#certainty" class="headerlink" title="certainty"></a>certainty</h3><p>Only certain types of contract are required to be in writing (e.g. land) but the more significant a contract the more sense there is in putting it in writing</p><hr><p>contract obtains express terms and implied terms. courts may retrospectively( 回顾性地) imply terms into a contract.</p><p>the excluding or limiting liability can be included via parties reflects voluntary natureof freedom of contract.</p><p>How a contract can be discharged:<br>• Performance of contract<br>• By agreement of contractual parties<br>• Breach of contract<br>• Frustration of contract<br>• Contract is voidable due to conduct of a contracting party</p><h1 id="Week-3"><a href="#Week-3" class="headerlink" title="Week 3"></a>Week 3</h1><p>Discharge a contract:<br>•compelete the contract<br>•mutual agreement of contract perties<br>•breach of contract<br>•frustration(受挫) of contract<br>•improper conduct(不当行为)</p><p>breach of contract:<br>repudiatory breach, anticipatory breach</p><p>type of damges for breach contract:<br>punitive/exemplary damages<br>restitutory damages<br>compensatory damages: like cost of replacement performance, lost profits, damage to property, persinal injury, damages payable to customer, damage to commercial reputation, emotion distress, loss of pleasure</p><p>improperly conduct:<br>Where one party has acted improperly, the court may deem the contract ‘voidable’ (innocent party can choose to terminate)<br>1.Misrepresentation<br>2.Duress(胁迫) &amp; Economic Duress<br>3.Undue Influence</p><h1 id="Week-4"><a href="#Week-4" class="headerlink" title="Week 4"></a>Week 4</h1><h2 id="Intellectual-Property"><a href="#Intellectual-Property" class="headerlink" title="Intellectual Property"></a>Intellectual Property</h2><p>type of IP: information, creative expression and design, reputation(声誉), invention</p><p>remedies for infringement:<br>search order<br>injunctions(警告)<br>damages<br>account of profits<br>delivery up<br>destruction of the infringing items<br>limited criminal sanctions</p><h3 id="Confidential-Information"><a href="#Confidential-Information" class="headerlink" title="Confidential Information"></a>Confidential Information</h3><p>three requirements for legal protection</p><ol><li>Information must possess the necessary quality of confidence</li><li>Information must have been imparted in circumstances imposing obligation(义务) of confidentiality</li><li>An unauthorised use of that information</li></ol><p>Defences to alleged breach of confidence<br>• Claimant gave consent for info to be disclosed<br>• Information already in public domain<br>• In the public interest for info to be disclosed</p><h3 id="copyright"><a href="#copyright" class="headerlink" title="copyright"></a>copyright</h3><p>!!!Seeks to protect the tangible expression of an idea NOT the idea itself<br>Life plus 70 years</p><p>the copyright automatically vests to author of the work.<br>requirements:<br>• The work is original<br>• The work is recorded in a material form (i.e. protects expression not idea)<br>• A ‘substantial part’ of work is reproduced without permission<br>• Author or work is connected to a signatory state of Berne Convention<br>but author can transfer ownership of copyright</p><p>only copyright owner have right to copy, issue copies to public, perform, show, incude and adapt works.</p><p>primary infringement: restricyed acts<br>secondary infringement: Must show knew/had reason to believe items were infringing copies</p><p>defences to breach of copyright:<br>• Deny claimant is owner (or licensee) of copyright work<br>• Deny work is entitled to copyright protection<br>• Deny any infringing conduct has been committed</p><h1 id="Week-5"><a href="#Week-5" class="headerlink" title="Week 5"></a>Week 5</h1><p>trademark: a mark or device usually attached to goods or services which indicates a connection between those goods or services and the trade mark owner.</p><p>eample of trade marks: brand name, symbols, shapes, slogans, sounds, colours, celebrity’s image<br>those mark or device usually attached to goods or services which indicates a connection between those goods or services and the trade mark owner. a trade mark is regisered for a period of 10 years. is a trademark havn’t used for 5 years, it can be revoked.</p><p>a trade mark need determine the clear and precise subject matter to which peotection is afforded.<br>Absolute grounds for refusal: devoid of distinctive character, purely descriptive, estalished practice.<br>Relative grounds for refusal: if mark conflicts with an earlier trademark.</p><p>trade mark is protected by TMA.</p><p>Passing off: unregistered trademark</p><ol><li>protectable reputation.goodwill: must show business has protectable goodwill</li><li>misrepresentation: miust show that infringing activity took place in the course of trade and the customers were being misled</li><li>damage to goodwill: need show there have potential demage</li></ol><h1 id="Week-6"><a href="#Week-6" class="headerlink" title="Week 6"></a>Week 6</h1><p>Patents(专利) is an exclusive right granted for an invention, which is a product or a process that provides, in general, a new way of<br>doing something, or offers a new technical solution to a problem<br>Patents can not freely used for 20 years</p><p>how to get a patent:<br>In European Patent Office(EPO), in several EPC members<br>In PCT, round the world<br>In UK patent Office, just in UK</p><p>The court must use a reference point in determining whether:<br>• There is an appropriate level of detail in a patent application<br>• The invention for which the application is made is indeed ‘a step forward’ in terms of development</p><p>can not be an invention:<br>discory, theory or marhematic method, artistic work, mantal act, game, or something is contrary to public policy or morality.</p><p>a patent only be granted id the invention is new, has inventive step, and is capable of industrial applicaiton</p><h1 id="Financial"><a href="#Financial" class="headerlink" title="Financial"></a>Financial</h1><p>accets=non_current assets+current assets<br>资产=非流动资产+流动资产</p><p>equity=assets-liability<br>股本=资产-负债</p><hr><p>Return on capital employed: Operating profit /(Equity + Non-Current Liabilities)<br>使用资本收益率:营业利润/(权益+非流动负债)<br>↑</p><p>Gross profit margin: Gross profit/Revenue<br>毛利率:毛利润/收入<br>↑</p><p>Operating profit margin: Operating profit/Revenue<br>营业利润率:营业利润/收入<br>↑</p><p>Asset turnover: Revenue /(Equity + non-current liabilities)<br>资产周转率:收入/(权益+非流动负债)<br>↑, means high current ratio</p><p>Inventory days: Closing Inventory x 365 days/Cost of sales<br>存货周转天数:期末存货x 365天/销售成本<br>→</p><p>Trade receivable days: Closing Trade receivables x 365 days/Revenue<br>应收账款周转天数:收账应收账款× 365天/收入</p><p>Trade payable days： Closing Trade payables x 365 days/Cost of sales<br>应付账款周转天数:收账应付账款× 365天/销售成本</p><p>Current ratio Current Assets/Current Liabilities<br>流动比率:流动资产/流动负债<br>↑: can replay the loan</p><p>Quick ratio: (Current Assets – Inventory )/Current Liabilities<br>速动比率:(流动资产-存货)/流动负债<br>↑: can replay loan swiftly</p><p>Gearing: Debt/Equity<br>杠杆比例:债务/股本<br>↓</p><p>Interest cover: Operating profit/Finance cost<br>利息:营业利润/财务成本</p><p>Dividend cover: Profit for the year/Dividend<br>利润股息比率:本年利润/股息</p><p>keep mind on profitability, liquidity and gearing.</p><hr><p>prime cost: direct material or labour ect.<br>product cost: indirect costs+prime cost<br>period cost: other supporter cost like office, marketing ect.<br>total cost= product cost + period cost</p><hr><p>Break-even point (BEP) =Fixed costs/Contribution per unit<br>盈亏平衡点（BEP）=固定成本/每单位的贡献</p><p>Margin of Safety=planed sales-Break-even point<br>安全边际=计划销售额-收支平衡点</p>]]></content>
      
      
      <categories>
          
          <category> academic material </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2021-2022 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MAS381 Mathematics III</title>
      <link href="/2021-2022/MAS381-Mathematics-III-152972655c65/"/>
      <url>/2021-2022/MAS381-Mathematics-III-152972655c65/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="week1"><a href="#week1" class="headerlink" title="week1"></a>week1</h1><h2 id="complex-value"><a href="#complex-value" class="headerlink" title="complex value"></a>complex value</h2><p>f(z)=f(x+iy)=u(x,y)+iv(x,y)<br>Re(f)=x=u(x,y)<br>Im(f)=y=v(x,y)</p><h3 id="harmonic-function"><a href="#harmonic-function" class="headerlink" title="harmonic function:"></a>harmonic function:</h3><p>By definition a function is called harmonic if it is at least twice differentiable and it satisfies the well-known Laplace equation.<br><img src="/2021-2022/MAS381-Mathematics-III-152972655c65/101.PNG" alt="101.PNG"></p><h3 id="Euler’s-formular"><a href="#Euler’s-formular" class="headerlink" title="Euler’s formular:"></a>Euler’s formular:</h3><p><img src="/2021-2022/MAS381-Mathematics-III-152972655c65/102.PNG" alt="102.PNG"><br>cause<br><img src="/2021-2022/MAS381-Mathematics-III-152972655c65/103.PNG" alt="103.PNG"></p><h1 id="week-2"><a href="#week-2" class="headerlink" title="week 2"></a>week 2</h1><h2 id="complex-differentiation"><a href="#complex-differentiation" class="headerlink" title="complex differentiation"></a>complex differentiation</h2><p>A complex function f(x) is differentiable at a point z if and only if the limiting ratio quotient exists.<br><img src="/2021-2022/MAS381-Mathematics-III-152972655c65/201.PNG" alt="201.PNG"></p><h3 id="Cauchy-Riemann-equation"><a href="#Cauchy-Riemann-equation" class="headerlink" title="Cauchy-Riemann equation:"></a>Cauchy-Riemann equation:</h3><p>a way to defferentiate a complex funtion<br><img src="/2021-2022/MAS381-Mathematics-III-152972655c65/104.PNG" alt="104.PNG"><br>where u=real part and v=imagin part, and a function has a complex derivative f’(z) if and only if its real and imaginary parts are continuosly differentiable and satisfy the Cauchy-Riemann equation:<br><img src="/2021-2022/MAS381-Mathematics-III-152972655c65/105.PNG" alt="105.PNG"><br>which is called the conjugate.</p><p>also, Cauchy-Riemann equation can find harmonic function as:<br><img src="/2021-2022/MAS381-Mathematics-III-152972655c65/106.PNG" alt="106.PNG"></p><h2 id="analytical-functions"><a href="#analytical-functions" class="headerlink" title="analytical functions"></a>analytical functions</h2><p>A complex function f(z) is called analytic at a point z0 if it has a power series expansion<br><img src="/2021-2022/MAS381-Mathematics-III-152972655c65/202.PNG" alt="202.PNG"></p><p>we can use ratio test to find wheter a complex series is convergent or not by finding the limitation value of n-th term<br><img src="/2021-2022/MAS381-Mathematics-III-152972655c65/203.PNG" alt="203.PNG"><br>if L&lt;1, convergent series<br>if L&gt;1, divergent series<br>if L=1, the test is inconclusion.</p><p>for complex power series, the sequence Cn converges with a limit L. If L=0, the power series converges for all z. If L not equal 0, then<br><img src="/2021-2022/MAS381-Mathematics-III-152972655c65/204.PNG" alt="204.PNG"></p><p>There are four and only four possible types of singularities of a complex function:</p><ol><li>pole of order n. f(z)=(3z-2)/[(z-1)^2(z+1)(z-4)] has a pole of order 3 at z=1 and simple poles at z=-1 and 4</li><li>branch points.f(z) = (z − 3)^1/2 has a algebraic branch point at z = 3 and f(z) = ln(z^2 + z − 2)has logarithmic branch points where z^2 + z − 2 = 0</li><li>Essential singularity. the singularity is not pole or branch point.</li><li>singularities at infinity</li></ol><h2 id="Taylor’s-theorem"><a href="#Taylor’s-theorem" class="headerlink" title="Taylor’s theorem"></a>Taylor’s theorem</h2><p><img src="/2021-2022/MAS381-Mathematics-III-152972655c65/205.PNG" alt="205.PNG"></p><p>If a=0, the series can called Maclaurin series.</p><h1 id="Week3"><a href="#Week3" class="headerlink" title="Week3"></a>Week3</h1><p>for the series have negative powers of (z-z0), equations can be writen like<br><img src="/2021-2022/MAS381-Mathematics-III-152972655c65/301.PNG" alt="301.PNG"></p><h2 id="Laurent’s-theorem"><a href="#Laurent’s-theorem" class="headerlink" title="Laurent’s theorem"></a>Laurent’s theorem</h2><p>Let function f(z) be analytical in annulus R&lt;|z-z0|&lt;ρ, it can be writen as<br><img src="/2021-2022/MAS381-Mathematics-III-152972655c65/302.PNG" alt="302.PNG"><br>Where R belongs to negative part and ρ belongs to positive part.</p><p>really conplex content, remember to work the tutorial out.</p><h1 id="week-4"><a href="#week-4" class="headerlink" title="week 4"></a>week 4</h1><p>three most common form to write a complex function:<br>ax+by=c,<br>where a,b are real numbers and x,y are variables<br>|z-1|=|z-b|<br>where a,b are complex numbers<br>z=at+b<br>where t is real and a,b are complex quantities</p><p><img src="/2021-2022/MAS381-Mathematics-III-152972655c65/401.PNG" alt="401.PNG"><br>euqation can be<br>(x-x0)^2+(y-y0)^2=R^2,<br>|z-z0|=R, z0=x0+iy0</p><p>z=x+iy=(x0+Rcosφ)+i(y0+Rsinφ)=z0+Re^iφ (0&lt;=φ&lt;2Pi)</p><h2 id="integration-and-Cauchy’s-theorem"><a href="#integration-and-Cauchy’s-theorem" class="headerlink" title="integration and Cauchy’s theorem"></a>integration and Cauchy’s theorem</h2><h3 id="Newton-Leibnitz-formula"><a href="#Newton-Leibnitz-formula" class="headerlink" title="Newton-Leibnitz formula"></a>Newton-Leibnitz formula</h3><p>the equation C: z=z(t), a&lt;=t&lt;=b,<br><img src="/2021-2022/MAS381-Mathematics-III-152972655c65/402.PNG" alt="402.PNG"></p><p>example:<br><img src="/2021-2022/MAS381-Mathematics-III-152972655c65/403.PNG" alt="403.PNG"></p><h3 id="using-linear-integration"><a href="#using-linear-integration" class="headerlink" title="using linear integration"></a>using linear integration</h3><p>if f(z)=u+iv=2+i, z=x+iy, than x=2t, y=t.<br><img src="/2021-2022/MAS381-Mathematics-III-152972655c65/404.PNG" alt="404.PNG"></p><h1 id="Week5"><a href="#Week5" class="headerlink" title="Week5"></a>Week5</h1><h2 id="Cauchy’s-theorem"><a href="#Cauchy’s-theorem" class="headerlink" title="Cauchy’s theorem"></a>Cauchy’s theorem</h2><p>for two points x1=a1+ia2, x2=b1+ib2,<br>z=(1-t)(a1+ia2)+t(b1+ib2) (0&lt;t&lt;1)<br>or for circuit center z0=z1+iz2, radius=R,<br>z=z1+iz2+R(e^iφ) (0&lt;φ&lt;2Pi)<br><img src="/2021-2022/MAS381-Mathematics-III-152972655c65/501.PNG" alt="501.PNG"></p><p>to Taylor series:<br><img src="/2021-2022/MAS381-Mathematics-III-152972655c65/502.PNG" alt="502.PNG"><br><img src="/2021-2022/MAS381-Mathematics-III-152972655c65/503.PNG" alt="503.PNG"></p><h1 id="Week6"><a href="#Week6" class="headerlink" title="Week6"></a>Week6</h1><h2 id="Residue-Theorem"><a href="#Residue-Theorem" class="headerlink" title="Residue Theorem"></a>Residue Theorem</h2><p>Let z=z0 be a singularity of the function f(z), the coefficient a is called residue of the function f(z)<br><img src="/2021-2022/MAS381-Mathematics-III-152972655c65/601.PNG" alt="601.PNG"><br>the single residue (with single power) can be calculated as<br><img src="/2021-2022/MAS381-Mathematics-III-152972655c65/602.PNG" alt="602.PNG"><br>but in multiple power, the function can be changed as<br><img src="/2021-2022/MAS381-Mathematics-III-152972655c65/603.PNG" alt="603.PNG"></p><p>for closed contour C be the boundary of domain D,<br><img src="/2021-2022/MAS381-Mathematics-III-152972655c65/604.PNG" alt="604.PNG"></p><p>for calculating real integrals, the contour C can be drawn as<br><img src="/2021-2022/MAS381-Mathematics-III-152972655c65/605.PNG" alt="605.PNG"><br>which have ignored all results with negative imaginary.<br><img src="/2021-2022/MAS381-Mathematics-III-152972655c65/606.PNG" alt="606.PNG"><br>where first interial is total contour results, second one is the real integrals and third one is the curve covered this domain(most cases equals to 0)</p><h1 id="Week7"><a href="#Week7" class="headerlink" title="Week7"></a>Week7</h1><h2 id="vector-calculus"><a href="#vector-calculus" class="headerlink" title="vector calculus"></a>vector calculus</h2><p>scalar field: f=x+y+z<br>vector field: u=(p,q,r)</p><p>for scalar field f, its gradient can be written as<br><img src="/2021-2022/MAS381-Mathematics-III-152972655c65/701.PNG" alt="701.PNG"></p><p>the functions of div and curl operators are<br><img src="/2021-2022/MAS381-Mathematics-III-152972655c65/702.PNG" alt="702.PNG"></p><p>grad(f)=∇(f)<br>div(f)=∇.f<br>curl(f)=∇*f</p><table><thead><tr><th align="left">initialize type</th><th align="left">operator</th><th align="left">result type</th></tr></thead><tbody><tr><td align="left">scalar</td><td align="left">gradient</td><td align="left">vector</td></tr><tr><td align="left">vector</td><td align="left">div</td><td align="left">scalar</td></tr><tr><td align="left">vector</td><td align="left">curl</td><td align="left">vector</td></tr></tbody></table><p>like the function curl(div(u)) can not be defined cause div(u) is a scalar which can be curl which.</p><p>and there have two conditions the result will be 0:</p><ol><li>for any scalar f, curl(grad(f))=0</li><li>for any vector u, div(curl(u))=0</li></ol><p>for function div(grad(f))=∇.(∇(f))=fxx+fyy+fzz=∇^2(f), or called Laplancian (scalar field)<br>and curl(grad(f))=curl(fx,fy)=fyx-fxy=0</p><h1 id="Week-8"><a href="#Week-8" class="headerlink" title="Week 8"></a>Week 8</h1><p>a vector field u will have a potential function p (which is ∇(p)=u), only when u is conservative:<br>∇*u=0</p><p>if E=(2x+xy,2y+xz,2z+xy)<br><img src="/2021-2022/MAS381-Mathematics-III-152972655c65/801.PNG" alt="801.PNG"></p><h1 id="Week-9"><a href="#Week-9" class="headerlink" title="Week 9"></a>Week 9</h1><h2 id="Integration-along-curve"><a href="#Integration-along-curve" class="headerlink" title="Integration along curve"></a>Integration along curve</h2><p>a curve r=(x(t),y(t),z(t)) in the range of t(a&lt;=t&lt;=b),<br><img src="/2021-2022/MAS381-Mathematics-III-152972655c65/901.PNG" alt="901.PNG"></p><p><img src="/2021-2022/MAS381-Mathematics-III-152972655c65/902.PNG" alt="902.PNG"><br>where F=∇(p)</p><p>if F is a conservative vector fild, the potential function p for F is<br><img src="/2021-2022/MAS381-Mathematics-III-152972655c65/903.PNG" alt="903.PNG"><br>value if a,b,c is not stable and can be choicen what ever we want. it is only valid for conservative field</p><p>if we want calculate its perdicular vector n then dt, get<br><img src="/2021-2022/MAS381-Mathematics-III-152972655c65/904.PNG" alt="904.PNG"></p><h1 id="Week-10"><a href="#Week-10" class="headerlink" title="Week 10"></a>Week 10</h1><h2 id="Surface-Integrals"><a href="#Surface-Integrals" class="headerlink" title="Surface Integrals"></a>Surface Integrals</h2><h2 id="two-dimansional-divergence-theorem"><a href="#two-dimansional-divergence-theorem" class="headerlink" title="two-dimansional divergence theorem"></a>two-dimansional divergence theorem</h2><p><img src="/2021-2022/MAS381-Mathematics-III-152972655c65/1001.PNG" alt="1001.PNG"><br>D is region in plane which boundary is cloased curve C. dA=r<em>dr</em>dtheta<br>if D is surrounding with multiple curve C, they need to be added</p><h2 id="Green’s-theorem"><a href="#Green’s-theorem" class="headerlink" title="Green’s theorem"></a>Green’s theorem</h2><p>when dA=ndA, n is unit normal vector to D and u=(P,Q),<br><img src="/2021-2022/MAS381-Mathematics-III-152972655c65/1002.PNG" alt="1002.PNG"></p><h2 id="three-dimansional-divergence-theorem"><a href="#three-dimansional-divergence-theorem" class="headerlink" title="three-dimansional divergence theorem"></a>three-dimansional divergence theorem</h2><p>almost same with two-dimansional divergence<br><img src="/2021-2022/MAS381-Mathematics-III-152972655c65/1003.PNG" alt="1003.PNG"></p><h2 id="stokes’-theorem"><a href="#stokes’-theorem" class="headerlink" title="stokes’ theorem"></a>stokes’ theorem</h2><p><img src="/2021-2022/MAS381-Mathematics-III-152972655c65/1004.PNG" alt="1004.PNG"><br>cause if follows function in two-dimentional theorem, the direction of vertical vector n is cant been decided. hence two choice have in this function</p>]]></content>
      
      
      <categories>
          
          <category> academic material </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2021-2022 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EEE348 Electronics and Devices</title>
      <link href="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/"/>
      <url>/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="week-1"><a href="#week-1" class="headerlink" title="week 1"></a>week 1</h1><h2 id="Trends"><a href="#Trends" class="headerlink" title="Trends"></a>Trends</h2><p>The Moore’s Law(1965):“The functionality of devices doubles every 18 months” or “the cost of the same functionality halves every 18 months”<br>ButIt will come to an end - due to basic physics if nothing else.</p><p>The structure of FET(Field Effect Transistor)<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/101.PNG" alt="101.PNG"><br>Scaling can be done as λ→λ/s (s&gt;1)</p><table><thead><tr><th align="left">components</th><th align="left">rate</th></tr></thead><tbody><tr><td align="left">Area(s^2)</td><td align="left">1/(s^2)</td></tr><tr><td align="left">Speed(v)</td><td align="left">s</td></tr><tr><td align="left">Capacitance(C)</td><td align="left">1/s</td></tr><tr><td align="left">Resistance(R)</td><td align="left">s</td></tr><tr><td align="left">RC</td><td align="left">1</td></tr></tbody></table><h2 id="Intrinsic-Limits"><a href="#Intrinsic-Limits" class="headerlink" title="Intrinsic Limits"></a>Intrinsic Limits</h2><p>The problems might be appeared when reached 10nm fabrication</p><table><thead><tr><th align="left">Name</th><th align="left">Problem</th><th align="left">solution</th><th align="left">Shortcoming</th></tr></thead><tbody><tr><td align="left">Gate Oxides</td><td align="left">Thinner oxides means increased tunnelling</td><td align="left">Change other materials</td><td align="left">Have higher εr</td></tr><tr><td align="left">Gate Electrode Material</td><td align="left">Same with the problem in oxides</td><td align="left">using metal electrodes</td><td align="left">more complex processing</td></tr><tr><td align="left">Low k Insulators</td><td align="left">Lower permittivity are required while device scaled down</td><td align="left">perfectelly towards 1</td><td align="left"></td></tr><tr><td align="left">Lithography</td><td align="left">more shorter wavelength required(toward 157nm)</td><td align="left">using Extreme UV(13nm soft x-rays used)</td><td align="left">light is not powerful enough/expensive</td></tr><tr><td align="left">Doping</td><td align="left">Only 100 dopant atoms in the active region</td><td align="left"></td><td align="left"></td></tr></tbody></table><h2 id="History"><a href="#History" class="headerlink" title="History"></a>History</h2><p><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/102.PNG" alt="102.PNG"></p><h1 id="week2"><a href="#week2" class="headerlink" title="week2"></a>week2</h1><h2 id="Implementation-technology"><a href="#Implementation-technology" class="headerlink" title="Implementation technology"></a>Implementation technology</h2><p>There have many possible ways to achieve and implementate a circuit.</p><p>Programmed logic devices(PLD):<br>PLD is the simplest ASIC structure.<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/201.PNG" alt="201.PNG"><br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/202.PNG" alt="202.PNG"><br>The signals inputed from pin 1,2,3 and outputed through pin 17,18,19.<br>each intersections will be connected by a transistor and a switch, and controlled signals to OLMC.</p><p>Complex PLDs (CPLD):<br>very same to PLD but with higher gate number.<br>It shared some interconnect logics globally, have fast transmit speed in single macrocell but not between two cells.<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/203.PNG" alt="203.PNG"></p><p>Field Programmable Gate Array (FPGA):<br>FPGA is created by many configurable logic blocks(CLB). Each CLB is progeammable and can implement big range of functions. FPGA can designed by HDL, and access multiple erasing and writing process.</p><p>Masked Gate Array (MGA):<br>Its ICs are manufactured to your specification in a Semiconductor Fabrication Facility (Fab). all og logics are acieved by NAND gate.<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/204.PNG" alt="204.PNG"></p><p>Structured ASICs(SA):<br>Like a combination of FPGAs and MGA. it may have predefined RAM blocks, and other functional units already manufactured into the device</p><p>Cell-Based ASICs (or Semi-Custom):<br>more complex than MGAs in that the design can be composed not just of NAND gates but of gates drawn from a library of cells like NOT,AND,FF,ADD etc.</p><table><thead><tr><th align="left">name</th><th align="left">gate number</th><th align="left">delay</th><th align="left">cost</th></tr></thead><tbody><tr><td align="left">PLD</td><td align="left">100</td><td align="left">1-10ns</td><td align="left">$1-2</td></tr><tr><td align="left">CPLD</td><td align="left">5000</td><td align="left">5ns</td><td align="left">$10-50</td></tr><tr><td align="left">FPGA</td><td align="left">5000-5M</td><td align="left">3-4ns</td><td align="left">$50-3000</td></tr></tbody></table><h2 id="Design-flows"><a href="#Design-flows" class="headerlink" title="Design flows"></a>Design flows</h2><p>Customer: Requirements Specification-&gt;Design Specification-&gt; Architectural Soecification-&gt;coding in HDL-&gt;Synthesis-&gt;Placement-&gt;Routing-&gt;Design Rule</p><h1 id="week3"><a href="#week3" class="headerlink" title="week3"></a>week3</h1><h2 id="MOS-device"><a href="#MOS-device" class="headerlink" title="MOS device"></a>MOS device</h2><p>MOSFET is combined with Metal-Oxide-Semiconductor(MOS) and Field-Effect Transistors(FET) these two devices. It can differentiated as p-MOSFET and n-MOSFET based on differente using materials.<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/301.PNG" alt="301.PNG"></p><p>The n-MOSFET’s cross-section representation is as follows:<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/302.PNG" alt="302.PNG"></p><table><thead><tr><th align="left">Vbb</th><th align="left">Vds</th><th align="left">Vgs</th><th align="left">state</th></tr></thead><tbody><tr><td align="left">0V</td><td align="left">0V</td><td align="left">0V</td><td align="left">two back-to-back diodes</td></tr><tr><td align="left">0V</td><td align="left">0&lt;Vds</td><td align="left">0&lt;Vgs&lt;Vt</td><td align="left">cut-off</td></tr><tr><td align="left">0V</td><td align="left">0&lt;Vds</td><td align="left">0&lt;Vt&lt;Vgs</td><td align="left">ohmic contact</td></tr><tr><td align="left">0V</td><td align="left">Vgs-Vt</td><td align="left">0&lt;Vgs&lt;Vt</td><td align="left">saturated(pinches-off)</td></tr></tbody></table><p>The current through source and drain can be explaied as:<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/303.PNG" alt="303.PNG"><br>where λ is Channel-length modulation parameter,<br>Kn is the value of term<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/304.PNG" alt="304.PNG"></p><p>For p-MOSFET bahaves identically to n-MOSFET but with reversed polarities. performed as:<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/305.PNG" alt="305.PNG"></p><p>But normally, less current will through p-MOSFET than the n-MOSFET with same area and environment.</p><h2 id="CMOS-circuit"><a href="#CMOS-circuit" class="headerlink" title="CMOS circuit"></a>CMOS circuit</h2><p>A CMOS circuit contains both the p-MOSFET and n-MOSFET. But generally less components will contained in reality than imagination.<br>In digital circuit, the substrate connection for n-MOSFET would be connect to negative supply and p-MOSFET is in reverse.</p><h2 id="Inverter-Characteristics"><a href="#Inverter-Characteristics" class="headerlink" title="Inverter Characteristics"></a>Inverter Characteristics</h2><p>The simpliest CMOS circuit is worked as an inverter:<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/306.PNG" alt="306.PNG"><br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/307.PNG" alt="307.PNG"><br>when Vin=0, Vout=1;<br>when Vin=1, Vout=0;</p><h2 id="Threshold-value"><a href="#Threshold-value" class="headerlink" title="Threshold value"></a>Threshold value</h2><p>if we assume Vtp=-Vtn, Kp=Kn, than<br>Vin=Vdd/2<br>hence the threshold value can be seen as:<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/308.PNG" alt="308.PNG"></p><p>normally, if let Vdd=3.3V, Vt=0.7V, the threshold voltage will changed rapidly.</p><h2 id="Parasitics"><a href="#Parasitics" class="headerlink" title="Parasitics"></a>Parasitics</h2><p>Many paracitics components have associated in MOSFET<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/309.PNG" alt="309.PNG"><br>The capacitor can calculated as<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/310.PNG" alt="310.PNG"></p><h2 id="Body-effect"><a href="#Body-effect" class="headerlink" title="Body effect"></a>Body effect</h2><p>Normally the stack MOSFETs have same well and share the same substrate voltage,<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/311.PNG" alt="311.PNG"><br>But in reality Vbb between them will be changed and Vt increases up on the stack.</p><h2 id="rise-fall-time"><a href="#rise-fall-time" class="headerlink" title="rise/fall time"></a>rise/fall time</h2><p><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/312.PNG" alt="312.PNG"></p><h1 id="week4"><a href="#week4" class="headerlink" title="week4"></a>week4</h1><p>The standard CMOS circuit<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/401.PNG" alt="401.PNG"><br>pull-up network→pMOSFET, pull-down netweork→nMOSFET</p><p><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/402.PNG" alt="402.PNG"><br>figure 2 implements an AND and figure 3 shows OR funvtion.</p><p>example:<br>for nand ligic gate,<br>Y=A’+B’, Y’=A*B<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/403.PNG" alt="403.PNG"></p><p>For XOR gate,<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/404.PNG" alt="404.PNG"></p><h2 id="resistance-and-capacitance-calculation"><a href="#resistance-and-capacitance-calculation" class="headerlink" title="resistance and capacitance calculation"></a>resistance and capacitance calculation</h2><p>CG: capacitance value on the gate<br>CD: capacitance value on the drain</p><p>A=m1CG+m3CG+m6CG+m8CG<br>Z=m5CD+m7CD+m8CD+m9CD+m11CG+m12CG</p><table><thead><tr><th align="left"></th><th align="left">PULL-down</th><th align="left">PULL-up</th></tr></thead><tbody><tr><td align="left">X</td><td align="left">R0/m3+R0/m4</td><td align="left">2R0/m1 or 2R0/m2</td></tr><tr><td align="left">Y’</td><td align="left">R0/m8+R0/m10</td><td align="left">2R0/m5 or 2R0/m6+2R0/m7</td></tr></tbody></table><p>value of pull-down and pull-up need to be same, assume µE/µH=2, get<br>m1=m2=2, m3=m4=2<br>m8=m10=2, m5=2, m6=m7=4.</p><p>hence A=10CG, Z=10CD+3CG</p><h2 id="pass-transistors"><a href="#pass-transistors" class="headerlink" title="pass transistors"></a>pass transistors</h2><p>using transistor as a switch to open and cloce a circuit.<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/405.PNG" alt="405.PNG"><br>the output resistance can be R0=5/(β N (VDD −VT ))</p><h2 id="transmission-gate"><a href="#transmission-gate" class="headerlink" title="transmission gate"></a>transmission gate</h2><p><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/406.PNG" alt="406.PNG"><br>R0=1/(β (VDD −VT ))</p><table><thead><tr><th align="left">A</th><th align="left">G</th><th align="left">Y</th></tr></thead><tbody><tr><td align="left">0</td><td align="left">0</td><td align="left">U</td></tr><tr><td align="left">0</td><td align="left">1</td><td align="left">0</td></tr><tr><td align="left">1</td><td align="left">0</td><td align="left">U</td></tr><tr><td align="left">1</td><td align="left">1</td><td align="left">1</td></tr><tr><td align="left">U: unknowed, Y’s state can be decided if both n and p MOSFET are closed</td><td align="left"></td><td align="left"></td></tr></tbody></table><p><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/407.PNG" alt="407.PNG"><br>In this case output will never be worried. if G=0, Y=A; if G=1.Y=B.</p><h1 id="Week-5"><a href="#Week-5" class="headerlink" title="Week 5"></a>Week 5</h1><p><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/501.PNG" alt="501.PNG"><br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/502.PNG" alt="502.PNG"><br>Flip-Flop and latch block diagram</p><p>implementation of ltach<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/503.PNG" alt="503.PNG"><br>but if G changed later than inverser, clock diagram will be in mess, hence clock generation is needed for generate some “delay” area<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/504.PNG" alt="504.PNG"></p><h2 id="metastability"><a href="#metastability" class="headerlink" title="metastability"></a>metastability</h2><p>problem will happened if D is changing while clk is raising as well. its state will became metastability and influce further functions.<br>this issue only happenes on asynchronous system</p><p>the property of probability is<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/505.PNG" alt="505.PNG"><br>where tr is the time from clk edge to the time that must output something<br>tc is constant associated, basically 1/GBW of the sampling circuit<br>T0 is constant vlaue, is related to technology and circuit design<br>(the T0 and tc should be small for a good design)</p><p>and the number of upsets will be<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/506.PNG" alt="506.PNG"><br>if upset=288, means every 1/288=3.4ms will cause a problem</p><p>in poisson distribution form, the rate of happening k times error in λ seconds is<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/507.PNG" alt="507.PNG"><br>λ is rT_MTTF(mean time to fail)</p><p><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/508.PNG" alt="508.PNG"><br>where 1-η=P(k;λ)</p><p>or<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/509.PNG" alt="509.PNG"></p><h1 id="Week6"><a href="#Week6" class="headerlink" title="Week6"></a>Week6</h1><p>a n-channel MOSFET<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/601.PNG" alt="601.PNG"></p><p><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/602.PNG" alt="602.PNG"><br>A: VGS=VDS=0<br>B: Vgs=0, VDS&gt;0<br>C: VGS&gt;0, VDS&lt;VOV (VOV=VGS-VTo=over drain voltage)<br>D: VGS&gt;0, VDS=VOV<br>E: VGS&gt;0, VDS&gt;VOV</p><p><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/603.PNG" alt="603.PNG"><br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/604.PNG" alt="604.PNG"></p><h1 id="week-7"><a href="#week-7" class="headerlink" title="week 7"></a>week 7</h1><h2 id="small-signal-model"><a href="#small-signal-model" class="headerlink" title="small signal model"></a>small signal model</h2><p><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/701.PNG" alt="701.PNG"></p><p>for transconductance<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/702.PNG" alt="702.PNG"><br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/703.PNG" alt="703.PNG"></p><h2 id="Π-diagram"><a href="#Π-diagram" class="headerlink" title="Π diagram"></a>Π diagram</h2><p><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/704.PNG" alt="704.PNG"></p><h2 id="T-diagram"><a href="#T-diagram" class="headerlink" title="T diagram"></a>T diagram</h2><p><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/705.PNG" alt="705.PNG"></p><h1 id="Week-8"><a href="#Week-8" class="headerlink" title="Week 8"></a>Week 8</h1><h2 id="Common-source-amplifier"><a href="#Common-source-amplifier" class="headerlink" title="Common source amplifier"></a>Common source amplifier</h2><p>a common amplifier to increase output voltage value based on a FET<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/801.PNG" alt="801.PNG"><br>the input Vg=Vsig+Vbias with relationship like follows:<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/802.PNG" alt="802.PNG"><br>the red slop have function ID=(VDD-Vd)/RD, and the x/y-axis when it cross the blue curve is seperataly the voltage output from Vout and current through transistor. the cross point need be choicen as in the saturated region and be in middle part as Vbias=2V</p><p>gain of this common source amplifier is<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/803.PNG" alt="803.PNG"></p><h2 id="common-drain-amplifier"><a href="#common-drain-amplifier" class="headerlink" title="common drain amplifier"></a>common drain amplifier</h2><p><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/804.PNG" alt="804.PNG"></p><p>Vbias=VS(best bias point)+Vov+Vto</p><p>for creayting small cignal circuit:<br>short-circuit any DC voltage source (also change power supply into groung)<br>short-circuit ant capacitors in circuit<br>open-circuit any constant current cource of inductors<br>replace NMOS with equivalent circuit</p><p><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/805.PNG" alt="805.PNG"><br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/806.PNG" alt="806.PNG"></p><p>this amplifer acts like a voltage buffer, accurancy volatge is depends on Q-point.</p><h2 id="common-gate-amplifier"><a href="#common-gate-amplifier" class="headerlink" title="common gate amplifier"></a>common gate amplifier</h2><p><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/807.PNG" alt="807.PNG"><br>Vs=Id<em>Rsig<br>Av=vd/vsig=gm</em>Rd/(gm*Rsig+1)</p><p><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/808.PNG" alt="808.PNG"></p><p>have low input impedance, non inverting current, unit current gain<br>voltage gain is same as common source amp<br>can be used as a current buffer.</p><table><thead><tr><th align="left">type</th><th align="left">volatage gain</th></tr></thead><tbody><tr><td align="left">common source</td><td align="left">-RD*gm/r0</td></tr><tr><td align="left">common drain</td><td align="left">gm<em>Rs/(1+gm</em>RS)</td></tr><tr><td align="left">common gain</td><td align="left">gm<em>Rd/(gm</em>Rsig+1)</td></tr></tbody></table><h1 id="Week9"><a href="#Week9" class="headerlink" title="Week9"></a>Week9</h1><h2 id="voltage-divider-biasing"><a href="#voltage-divider-biasing" class="headerlink" title="voltage divider biasing"></a>voltage divider biasing</h2><p>this circuit can provide high bias stability<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/901.PNG" alt="901.PNG"><br>but the current flow through M1 will be influenced by temperature with constant VGS supply<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/902.PNG" alt="902.PNG"></p><p>by adding a feedback resistor RS can provide a slop in Id diagram, for decreasing this temperature error<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/903.PNG" alt="903.PNG"><br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/904.PNG" alt="904.PNG"><br>but this design still need large number of transistors and large Rs requires more voltage headroom to operate</p><h2 id="current-source-biasing"><a href="#current-source-biasing" class="headerlink" title="current source biasing"></a>current source biasing</h2><p><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/905.PNG" alt="905.PNG"><br>the current source have provided a stable and constant current flow id, because the voltage error in same current is smaller than the current error produced in same voltage.</p><p>but this error can still be decreased if set a FET in the source port to plot the horizontal line<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/906.PNG" alt="906.PNG"><br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/907.PNG" alt="907.PNG"></p><h1 id="Week-10"><a href="#Week-10" class="headerlink" title="Week 10"></a>Week 10</h1><h2 id="current-mirror"><a href="#current-mirror" class="headerlink" title="current mirror"></a>current mirror</h2><p><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/1001.PNG" alt="1001.PNG"><br>current through M2 is basically same with current through M1<br>Iout/Imaster=(W(M2)/L(M2))/(W(M1)/L(M1))<br>means a constant current biasing is worked</p><p>current steering<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/1002.PNG" alt="1002.PNG"></p><p>diode connected<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/1005.PNG" alt="1005.PNG"><br>FET works like a diode at this time. the transistor will always in saturated region</p><p><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/1006.PNG" alt="1006.PNG"><br>hence the voltage and current in M2 can both been controlled based on diode connected.<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/1007.PNG" alt="1007.PNG"></p><p>dy/dx=1/r0=lamuda*Id0<br>because smaller slope is needed for smaller error, ro need be increased</p><p>Wilson current mirror(advanced design)<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/1008.PNG" alt="1008.PNG"><br>Vout↓,Im3↓,Im2↓,VGSm2↑,VGSm1↑,IR↓,V1↑,Im3↑<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/1009.PNG" alt="1009.PNG"><br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/1010.PNG" alt="1010.PNG"></p><h2 id="Active-loading"><a href="#Active-loading" class="headerlink" title="Active loading"></a>Active loading</h2><p>load a resistor on drain part<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/1003.PNG" alt="1003.PNG"><br>but it can not easily increasing voltage gain course FET will into triode region</p><p>can be solved by a FET<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/1004.PNG" alt="1004.PNG"></p><h1 id="Semiconductor"><a href="#Semiconductor" class="headerlink" title="Semiconductor"></a>Semiconductor</h1><p>Adachi: <a href="https://find.shef.ac.uk/primo-explore/fulldisplay?docid=44SFD_ALMA_DS51248442680001441&context=L&vid=44SFD_VU2&lang=en_US&search_scope=SCOP_EVERYTHING&adaptor=Local%20Search%20Engine&tab=everything&query=any,contains,adachi&offset=0">https://find.shef.ac.uk/primo-explore/fulldisplay?docid=44SFD_ALMA_DS51248442680001441&amp;context=L&amp;vid=44SFD_VU2&amp;lang=en_US&amp;search_scope=SCOP_EVERYTHING&amp;adaptor=Local%20Search%20Engine&amp;tab=everything&amp;query=any,contains,adachi&amp;offset=0</a></p><p>formular sheet: <a href="https://vle.shef.ac.uk/bbcswebdav/pid-5365886-dt-content-rid-36603126_1/xid-36603126_1">online formular sheet</a></p><h1 id="Week13"><a href="#Week13" class="headerlink" title="Week13"></a>Week13</h1><p><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/1301.PNG" alt="1301.PNG"><br>Bolck from left to right is Metal, Semiconductor, and Insulator</p><table><thead><tr><th align="left">Metal</th><th align="left">Semiconductor</th><th align="left">Insulator</th></tr></thead><tbody><tr><td align="left">Conduction band and valence band overlapped</td><td align="left">Band gap changed from meV to 9 eV</td><td align="left">Band gap larger than 9eV</td></tr><tr><td align="left">Electrons move freely</td><td align="left">no electrons in CB at T=0, get thermal energy kT=26meV wen T=300</td><td align="left">Negligible electron in CB</td></tr><tr><td align="left">good conductor</td><td align="left">depend on number of electrons</td><td align="left">no current conduction</td></tr></tbody></table><p>The current density is influenced by both drift and diffusion seperatly with two parts:<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/1302.PNG" alt="1302.PNG"><br>where q=1.6*10^-19 as a constant</p><p>Electron consentration:<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/1303.PNG" alt="1303.PNG"><br>Nc: effective density of state in conduction band<br>EC: bottom of conduction band<br>Ef: fermi level</p><p>chemical elements table and lattice constant:<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/1304.PNG" alt="1304.PNG"><br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/1305.PNG" alt="1305.PNG"><br>more ↓ elements are, more smaller bandgap will have, much bigger the lattice constant is, higher electron mobility</p><p>Direct band gap semiconductors (GaAs, InGaAs) are much more efficient emitter than indirect band gap semiconductors (Si,Ge)</p><p>Semiconductors with the same lattice constant as the substrate can be grown with minimal crystal defects</p><h1 id="week14"><a href="#week14" class="headerlink" title="week14"></a>week14</h1><p>Energy level on each electrons is not same with different orbital<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/1401.PNG" alt="1401.PNG"><br>and energy level will slightly decrease if more atoms are placed side by it.</p><p><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/1402.PNG" alt="1402.PNG"><br>If E0, or band gap(the difference between 4th and 5th band) is minimum (then Eg), the semiconductor has a direct bandgap<br>If Eg is minimum (with E0), semiconductor has an indirect bandgap.<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/1403.PNG" alt="1403.PNG"><br>Adachi p.135</p><p>importance of carrier mobility: High mobility increases carrier drift velocity.<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/1405.PNG" alt="1405.PNG"><br>Carrier velocity ν = μE (μ = mobility, E = electric field)<br>m is effective mass</p><p>Density of states N(E) is defined as the density of allowed energy states per energy range per unit volume.<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/1406.PNG" alt="1406.PNG"></p><p>Schrodinger equation:K+U=E,<br>where the total energy is given by the sum of kinetic(K) energy and potential(U) energy</p><p><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/1404.PNG" alt="1404.PNG"><br>some mixed elements, like AlGaAs, its gap energy will change depends on different ratio the different elemrnts it has.<br>like, Al0.5Ga0.5As has the middle energy between AlAs and GaAs.<br>AlxGa1-xAs means it has x% AlAs and (1-x)% GaAs.<br>(the emitted energy is E(eV)=hc/λ(um), h=6.62607015×10^（-34） J·s,c=3*10^(8))</p><h1 id="Week-15"><a href="#Week-15" class="headerlink" title="Week 15"></a>Week 15</h1><p>Carrier concentration plays a critical role in determining how much current a semiconductor can conduct</p><p>Ef is Fermi level corresponding to the probability of electron occupancy of 0.5 in n type semiconductor:<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/1501.PNG" alt="1501.PNG"><br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/1502.PNG" alt="1502.PNG"><br>Ec is conduction band, n is electron concentration, Nc is effictive density of states in conduction band, in room temperature kT=26meV<br>the fermi level in n-type is dependent on the electron concentration<br>the interinsic carrier concentration ni^2=np</p><p>Doping type depends on number of groups in elements table.<br>N-type: in group V and VI<br>P-type: in group II and III<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/1503.PNG" alt="1503.PNG"><br>Increasing the n-type dopants will increase the conductivity ( hence reduce the resistivity) of the n-type semiconductor.</p><p>Carrier Recombination<br>A: Generation-recombnation due to trap levels(SRH)<br>B: Rafiative Recombination<br>C: Auger Recombination<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/1504.PNG" alt="1504.PNG"></p><h1 id="Week-16"><a href="#Week-16" class="headerlink" title="Week 16"></a>Week 16</h1><p>The intensity of light travelling through a semiconductor is given by<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/1601.PNG" alt="1601.PNG"><br>x is position, alpha is the optical absorption coefficient</p><p><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/1602.PNG" alt="1602.PNG"><br>multiple materials can be used for maximum absorbe different wavelength.<br>the wave length will reduced from top to bottom, and bandgap need also reduce to absorb them</p><p>dark current is the emitter that without absorbing any photon (band gap energy can only influence dark current)<br>photo current is the normal light current<br>the total current when the diode is illuminated (different function in formular sheet?????)<br><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/1603.PNG" alt="1603.PNG"><br>Is=short circuit current<br>Vov=open circuit voltage<br>Pm=ImVm=maximm output power</p><p><img src="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/1604.PNG" alt="1604.PNG"></p><p>several ways to maximum fill factor: increase Im and Vm:<br>1.Minimise reflected light at the air/semiconductor interface since ~31% of light is reflected.<br>2.Maximise light absorption using a thick absorption region.<br>3.Reduce carrier recombination near the surface which has high density of dangling bonds.<br>4.Maximise generated photocurrent using materials with long minority carrier diffusion lengths<br>5.Minimise the dark current using low defect materials. (large bandgap and low temperature also help)</p><p>//<br>Iph measured photocurrent<br>Popt incident optical power<br>η quantum efficiency<br>G(x) optical generation rate<br>W depletion width<br>φ0 photon flux<br>α absorption coefficient<br>Rres Responsivity<br>Iph shot noise to<br>derive the minimum optical power<br>required to produce SNR =1<br>x diffuse distance<br>vs drift velocity<br>tr transit time<br>fRC RC time limited bandwidth<br>A area<br>τ Recombination lifetime<br>tr Transit time<br>σ conductivity of the semiconductor<br>h Planck constant<br>p carrier momentum<br>En quantised energy level</p><p>β hole ionisation coefficients<br>α electron ionisation coefficients<br>x carrier injection position<br>F noise factor</p>]]></content>
      
      
      <categories>
          
          <category> academic material </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2021-2022 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EEE339 Digital Engineering</title>
      <link href="/2021-2022/EEE339-Digital-Engineering-de67ee225472/"/>
      <url>/2021-2022/EEE339-Digital-Engineering-de67ee225472/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="week1"><a href="#week1" class="headerlink" title="week1"></a>week1</h1><h2 id="Application-Specific-Integrated-Circuits-ASICS"><a href="#Application-Specific-Integrated-Circuits-ASICS" class="headerlink" title="Application Specific Integrated Circuits(ASICS)"></a>Application Specific Integrated Circuits(ASICS)</h2><p>ASICs are silicon chips that have been designed for a specific purpose</p><h3 id="Full-Custom-Design"><a href="#Full-Custom-Design" class="headerlink" title="Full Custom Design"></a>Full Custom Design</h3><ul><li>the highest performance</li><li>the most expensive and time consuming to produce</li></ul><h3 id="Semi-Custom-Design"><a href="#Semi-Custom-Design" class="headerlink" title="Semi-Custom Design"></a>Semi-Custom Design</h3><p>for Gate Array:</p><ul><li>predefined on silicon wafer</li><li>need to define the interconnections for final device</li></ul><p>for Standard Cell:</p><ul><li>predefined functional blocks improve layout density and performance.</li></ul><h3 id="Field-Programmable-Gate-Array-FPGA"><a href="#Field-Programmable-Gate-Array-FPGA" class="headerlink" title="Field Programmable Gate Array (FPGA)"></a>Field Programmable Gate Array (FPGA)</h3><ul><li>contain configurable logic resources and memory</li><li>are most useful for prototyping and can be cost effective for low volume production runs.</li></ul><p><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/101.PNG" alt="101.PNG"></p><p>Software tools enable users to enter designs, simulate them to ensure correct functionality and then synthesize a solution for a chosen target device.</p><h2 id="Verilog"><a href="#Verilog" class="headerlink" title="Verilog"></a>Verilog</h2><h3 id="Basic-structure"><a href="#Basic-structure" class="headerlink" title="Basic structure"></a>Basic structure</h3><p>The module body describes the functionality of the model and the relationship between the input and output ports.<br><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/102.PNG" alt="102.PNG"></p><p>The keyword wire is used to declare internal signals. For example:<br><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/103.PNG" alt="103.PNG"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">module Add_full(output c_out, sum, input a, b, c_in);</span><br><span class="line">wire w1, w2, w3;</span><br><span class="line">Add_half M1(w2, w1, a, b);</span><br><span class="line">Add_half M2(w3, sum, c_in, w1);</span><br><span class="line">or (c_out, w3, w2);</span><br><span class="line">endmodule</span><br></pre></td></tr></table></figure><h3 id="User-Defined-Primitives-UDP"><a href="#User-Defined-Primitives-UDP" class="headerlink" title="User Defined Primitives (UDP)"></a>User Defined Primitives (UDP)</h3><p>The module descripted by truth table</p><p><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/104.PNG" alt="104.PNG"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">primitive mux_21_udp(output f, input s, a, b);</span><br><span class="line">table</span><br><span class="line">// s a b : f </span><br><span class="line">0 0 ? : 0 ; //(? means not care)</span><br><span class="line">0 1 ? : 1 ; </span><br><span class="line">1 ? 0 : 0 ;</span><br><span class="line">1 ? 1 : 1 ;</span><br><span class="line">endtable</span><br><span class="line">endprimitive</span><br></pre></td></tr></table></figure><h3 id="Port-mapping"><a href="#Port-mapping" class="headerlink" title="Port mapping"></a>Port mapping</h3><p>Another writing format can not stricly follow the variables’ order.</p><p>When the number of ports grows larger, it is easier to associate ports by their names.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Add_half M1 (.b(b), .c_out(w2), .a(a), .sum(w1));</span><br></pre></td></tr></table></figure><h1 id="Week2"><a href="#Week2" class="headerlink" title="Week2"></a>Week2</h1><h2 id="delay-module"><a href="#delay-module" class="headerlink" title="delay module"></a>delay module</h2><p>Propagation delay: time from the input changing to the output responding.</p><p>Inertial delay model(for components): changes to the output of ogic gates can not happen instantly due to the charging and discharging of capacitances.(6ps)<br>If the width of an input pulse is shorter than the inertial delay, the input pulse is supressed and the output will not change in response to it.</p><p>Transport delay model(for wire): Time taken for a signal to propagate alonga wire.(1ps)</p><p><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/201.PNG" alt="201.PNG"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Example:</span><br><span class="line">`timescale 10ps / 1ps //&lt;time_unit&gt;/&lt;time_precision&gt;</span><br><span class="line">module timedelay (f, a ,b);</span><br><span class="line">input a, b;</span><br><span class="line">output f;</span><br><span class="line">nand <span class="comment">#2.58 (f, a, b);</span></span><br><span class="line">endmodule</span><br></pre></td></tr></table></figure><p>#2.58=2.58*10ps=25.8ps rounded to 26ps</p><h2 id="four-value-logic-system"><a href="#four-value-logic-system" class="headerlink" title="four-value logic system"></a>four-value logic system</h2><p>1 – assertion (True)<br>0 – de-assertion (False)<br>x – unknown (ambiguous)<br>z – high impedance (disconnected from driver)</p><p>nets: build connections but not store values, like wire.<br>registers: store value and informations</p><h1 id="Week3"><a href="#Week3" class="headerlink" title="Week3"></a>Week3</h1><h2 id="Register-file"><a href="#Register-file" class="headerlink" title="Register file"></a>Register file</h2><p>The registers in a CPU can be grouped into a register file. Two outputs are supplied in order to feed the ALU.<br><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/301.PNG" alt="301.PNG"></p><h2 id="shifter"><a href="#shifter" class="headerlink" title="shifter"></a>shifter</h2><p>standard bidirectional shift register: A multiplexer on each input gives a choice of left shift, right shift, parallel load and no-shift, by selecting the source of the D input appropriately.<br><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/302.PNG" alt="302.PNG"></p><p>Combinational Shifter: shift data using multiplexers. B1,2,3 is input and H1,2,3 is output.<br><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/303.PNG" alt="303.PNG"></p><p>Barrel Shifter: The circuit rotates its contents left from 0 to 3 positions depending on S<br><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/304.PNG" alt="304.PNG"></p><h2 id="Arithmetic-Logic-Unit"><a href="#Arithmetic-Logic-Unit" class="headerlink" title="Arithmetic Logic Unit"></a>Arithmetic Logic Unit</h2><p><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/305.PNG" alt="305.PNG"></p><p><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/306.PNG" alt="306.PNG"></p><p>the logic circuit (bitslice):<br><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/307.PNG" alt="307.PNG"></p><table><thead><tr><th align="left">S1</th><th align="left">S0</th><th align="left">Operation</th></tr></thead><tbody><tr><td align="left">0</td><td align="left">0</td><td align="left">AND</td></tr><tr><td align="left">0</td><td align="left">1</td><td align="left">OR</td></tr><tr><td align="left">1</td><td align="left">0</td><td align="left">XOR</td></tr><tr><td align="left">1</td><td align="left">1</td><td align="left">NOT</td></tr></tbody></table><p>arithmetic unit:<br><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/308.PNG" alt="308.PNG"></p><table><thead><tr><th align="left">S1</th><th align="left">S2</th><th align="left">Y</th><th align="left">Cin=0</th><th align="left">Cin=1</th></tr></thead><tbody><tr><td align="left">0</td><td align="left">0</td><td align="left">0</td><td align="left">G=A</td><td align="left">G=A+1</td></tr><tr><td align="left">0</td><td align="left">1</td><td align="left">B</td><td align="left">G=A+B</td><td align="left">G=A+B+1</td></tr><tr><td align="left">1</td><td align="left">0</td><td align="left">B’</td><td align="left">G=A+B’</td><td align="left">G=A+B’+1</td></tr><tr><td align="left">1</td><td align="left">1</td><td align="left">1</td><td align="left">G=A-1</td><td align="left">G=A</td></tr></tbody></table><h1 id="week4"><a href="#week4" class="headerlink" title="week4"></a>week4</h1><p>pictorial representation of 4-bit unsigned inteder:<br><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/401.PNG" alt="401.PNG"></p><p>2s-complement representation of 4 bits inteder:<br><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/402.PNG" alt="402.PNG"><br>note that h(-5)=b(1011)=-(2)^3+2^1+2^0</p><p>fixed-point 2’s-complement numbers<br><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/403.PNG" alt="403.PNG"></p><h2 id="multiplication"><a href="#multiplication" class="headerlink" title="multiplication"></a>multiplication</h2><p><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/404.PNG" alt="404.PNG"></p><h2 id="hardware-multiplication"><a href="#hardware-multiplication" class="headerlink" title="hardware multiplication"></a>hardware multiplication</h2><p><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/405.PNG" alt="405.PNG"><br>multiplicand will delay 1 bit after each operation like 0000 1101→0001 1010<br>multiplier will shift to right after each step like 1011→101.<br>product will save results output from adder. but changing process will be cancled if the most right side digital number in multipier is “0”.</p><h2 id="combinatorial-multiplication"><a href="#combinatorial-multiplication" class="headerlink" title="combinatorial multiplication"></a>combinatorial multiplication</h2><p>2-digit number A=(a10+a0) B=(b10+b0)<br>A<em>B=(a1</em>b1)00+(a1<em>b0+a0</em>b1)0+(a0*b0)</p><h2 id="Booth’s-Algorithm"><a href="#Booth’s-Algorithm" class="headerlink" title="Booth’s Algorithm"></a>Booth’s Algorithm</h2><p>the equation cna be writen as<br><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/406.PNG" alt="406.PNG"></p><p>for example the euqation 43*12 can be explained as</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">   43 = 00000101011</span><br><span class="line">* 12 = 00000001100(0)</span><br><span class="line">---------------------------</span><br><span class="line">     0 = 00000000000  //multiplier bits 0(0)</span><br><span class="line">+  0 = 0000000000|0  //multiplier bits 00</span><br><span class="line">- 172=111010101|00  //multiplier bits 10</span><br><span class="line">+  0 = 00000000|000  //multiplier bits 11</span><br><span class="line">+688=0101011|0000  //multiplier bits 01</span><br><span class="line">----------------------------</span><br><span class="line">   516=01000000100</span><br></pre></td></tr></table></figure><p>the relationship between multiplier and operation is</p><table><thead><tr><th align="left">bits</th><th align="left">operation</th></tr></thead><tbody><tr><td align="left">10</td><td align="left">subtract</td></tr><tr><td align="left">01</td><td align="left">add</td></tr><tr><td align="left">00/11</td><td align="left">nothing</td></tr></tbody></table><h1 id="Week6"><a href="#Week6" class="headerlink" title="Week6"></a>Week6</h1><p>for A%B=C……D,<br>A is dividend<br>B is divisor<br>C is quotient<br>D is Remainder</p><p>for binary division, comparetion is the only thing need to do<br><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/601.PNG" alt="601.PNG"></p><p>and its implementation is<br><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/602.PNG" alt="602.PNG"></p><h2 id="non-restoring-restoring-division"><a href="#non-restoring-restoring-division" class="headerlink" title="non-restoring/restoring division"></a>non-restoring/restoring division</h2><p>restoring division: the dividiend will turn into previous value if result is negative<br>non-restoring division: don’t restoring the value if result is negative</p><p>the sign of operation is inversed with divided’s signal (“-“ if divident is positive and “+” if divident is negative)<br>if result if negative, ouput 0; if result is positive, output 1.</p><p>example: 456/23 by non-restoring division<br><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/603.PNG" alt="603.PNG"></p><h2 id="floating-point"><a href="#floating-point" class="headerlink" title="floating point"></a>floating point</h2><p>the value of point numbrt can be explaination as m*2^e, where m is mantissa and e is exponent</p><p>The IEEE-753 floating point number can can be formulated as<br><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/604.PNG" alt="604.PNG"><br>with 32 bits and 64 bits these two types<br><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/605.PNG" alt="605.PNG"></p><p>value in exponent will have a bias which bigger (127 in 32 bits and 1023 in 64 bits) than what we expected</p><p>example: turn -93.625 into 32 bits</p><ol><li>93.625=1011 101.101 in binary</li><li>it = 1.0111 0110 1 *(2^6)</li><li>in 32 bits, it have 127 bias. Hence exponent=6+127=133=1000 0101</li><li>remove this first “1”, get 0.0111 0110 1, hence 0111 0110 1 is fraction</li><li>it is a negative number, hence sian bit =1.</li></ol><p>therefore, get 1|1000 0101|0111 0110 1000 0000 0000 000 (23 bits)</p><h1 id="Week-7"><a href="#Week-7" class="headerlink" title="Week 7"></a>Week 7</h1><h2 id="Memory-resources"><a href="#Memory-resources" class="headerlink" title="Memory resources"></a>Memory resources</h2><p>normally instructions are stored in main memory as a program and decode them when programe is required.<br><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/701.PNG" alt="701.PNG"><br>the address of each lines of programe is counted by a program counter (PC) which can count and load new addresses from status flags.</p><h2 id="MIPS-processor"><a href="#MIPS-processor" class="headerlink" title="MIPS processor"></a>MIPS processor</h2><p>MIPS is a Reduced Instructure Set Computer(RISC). it have 32 registers which have 32 bits wide for each, for byte addressing.</p><p>A MIPS word is 32 bits or 4 bytes but giving 2^30 memory words.<br><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/702.PNG" alt="702.PNG"><br>big endian: the most byte will stored in lowest address.<br>little endian: than least byte will stored in lowest address.</p><p>three ways have been developed based on MIPSformat<br><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/703.PNG" alt="703.PNG"><br><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/704.PNG" alt="704.PNG"><br><a href="https://max.cs.kzoo.edu/cs230/Resource/MIPS/MachinwXL/InstructionFormats.html">MIPS example</a><br>op: opening code<br>rs: register source<br>rt: register traget<br>shamt: shift amount (is not applicable when is 0)<br>immediate: value of offset</p><p>I-type: fast way to load a register and dont need extra memory refrence to fetch operand. but only constant can be supplied and is limitied by bit numbers as well.<br>example: addi $1,$2,20 : $1=$2+20<br>R-type: small address field required, shorter instructions possible and have a very fast execution. useful foe frequently operations like loop. but the number and space od address have all been limited.<br>example: add $3, $4, $5 : $3=$4+$5</p><h2 id="Intel-X86-Architecture"><a href="#Intel-X86-Architecture" class="headerlink" title="Intel X86 Architecture"></a>Intel X86 Architecture</h2><p>If the sort of instructions are increasing , a BIU can greatly control them.<br><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/705.PNG" alt="705.PNG"><br>where EU is for executing instructions,<br>BIU is for fatching instructions, reading operands and writing results</p><p>however, although X86 is a 16 bit controller but have a 20 bits register.<br><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/706.PNG" alt="706.PNG"><br>each segment represents a 64k block of memory, which is combined with an offset address in instruction pointer(IP).<br><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/707.PNG" alt="707.PNG"></p><p>Pipeling instruction: the execute and next fetcj have overlapped to reduce the time used on a cycle<br>Von Neumann Architecture: single interface for both data and instructions. but an instruction fetch and data opeartion can not occure at the same time cause they share a common bus<br>Harvard Architecture: seperate the interface of data and instructions. the program memory accesses and data accesses can operated paralllel.</p><h1 id="Week-8"><a href="#Week-8" class="headerlink" title="Week 8"></a>Week 8</h1><h2 id="register-control"><a href="#register-control" class="headerlink" title="register control"></a>register control</h2><p><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/801.PNG" alt="801.PNG"><br>four single bit X,Y,W,Z can separately control input and output for both two registers.<br>data from register B will move to register C if w=0,y=1,x=1,z=0</p><p><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/802.PNG" alt="802.PNG"><br>PC,R2: denotes a register<br>PC(7:0),R2(1),PC(L): denote a range of register<br>R1←R2, PC(L)←R0: denotes data transfer<br>R3←M[PC]: specifies a memory address</p><p>like  R1←R1+R2  add the results to R1 for additoin of R1 and R2<br>X.K1: R1←R1+R2  if X.K1=1, R1 will be placed the value of R1+R2<br>(normally, X.K1 will be the enable port in register)<br><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/803.PNG" alt="803.PNG"></p><h1 id="Week9"><a href="#Week9" class="headerlink" title="Week9"></a>Week9</h1><h2 id="Stack"><a href="#Stack" class="headerlink" title="Stack"></a>Stack</h2><p>the stack is allocated in main memory and operates as a last in first out block of memory</p><p>the flow control istructions change the PC constant with three order：<br>HALT: places the processor in an idle state<br>JUMP: change the PC content to a pointed address<br>CALL: like jump but CPU must remember the return point and return after finishing</p><p>the LIFO stack with two operations:<br>PUSH: puts value into stack<br>POP: Retrieves the last value that was pushed onto the stack<br>do not operate POP to a empty register or PUSH value in a full register</p><p>a stack pointer register (PC) can be used to allocate the final register<br><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/901.PNG" alt="901.PNG"></p><h2 id="cache"><a href="#cache" class="headerlink" title="cache"></a>cache</h2><p>cache is a safe place for hiding and storing things</p><p>CPU will first view cache when want read the memory. if it find the memory in cache, called cachehit, in opposite state, called cache miss and CPU will fins the memory from register and copied it into cache again</p><p>Direct Mapped Chache: each block is mapped to a single cache location<br><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/902.PNG" alt="902.PNG"><br>it is simple and easy for implementaion but have poor performance</p><p>Full Associative Cache: each block is mapped to any cache location<br><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/903.PNG" alt="903.PNG"><br>all memory block can be mapped but harder for implementation</p><p>Set Associative Cache: each block is mapped to any block in a subset of cache location<br><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/904.PNG" alt="904.PNG"><br>the best way </p><h2 id="cache-mapping"><a href="#cache-mapping" class="headerlink" title="cache mapping"></a>cache mapping</h2><p><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/905.PNG" alt="905.PNG"><br>V: a valid bit to indicate if address contains valid data<br>TAG: determines which block of memory is in cache<br>INDEX: select block in cache<br>OFFSET: select a byte number got multiple byte blockes</p><p>for direct mapped cache: memory=TAG+INDEX<br>for full sccociative cache: memory=TAG+OFFSET</p><h1 id="Week10"><a href="#Week10" class="headerlink" title="Week10"></a>Week10</h1><h2 id="Digital-filters"><a href="#Digital-filters" class="headerlink" title="Digital filters"></a>Digital filters</h2><p>for transimiting and receiving analog signals, need to use ADC and DAC</p><p>Finite Impulse Response (FIR) Filter<br>consider a 4-point averaging window and get a stable curve results<br><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/1001.PNG" alt="1001.PNG"></p><p>the implmentation of builidng blocks are contained with Multiplier, Adder and Unit delay<br><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/1002.PNG" alt="1002.PNG"></p><h2 id="Algorithmic-state-machine-chart"><a href="#Algorithmic-state-machine-chart" class="headerlink" title="Algorithmic state machine chart"></a>Algorithmic state machine chart</h2><p><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/1003.PNG" alt="1003.PNG"><br>state box: unconditional, moorly output which only depends on current input values<br><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/1004.PNG" alt="1004.PNG"><br>decision box: conditoinal, mealy output which not only depends on input, but past output results<br><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/1005.PNG" alt="1005.PNG"><br>decision box can have multiple outputs depends on decisions made</p><p>conditional box:<br><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/1006.PNG" alt="1006.PNG"></p><p>an ASM box must consists of a state box, decision box and conditional box<br>usually start with state box and end before the next state box</p><h2 id="implementation"><a href="#implementation" class="headerlink" title="implementation"></a>implementation</h2><p><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/1007.PNG" alt="1007.PNG"><br>controller logic can obtain condition box and state transition<br>data procesor can contain operations described in state box and conditoin box</p><p><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/1008.PNG" alt="1008.PNG"><br><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/1009.PNG" alt="1009.PNG"></p><h1 id="Topic-1"><a href="#Topic-1" class="headerlink" title="Topic 1"></a>Topic 1</h1><p>Unit impulse: 𝛿[n]=0 (n≠0), or =1 (n=0)<br>Unit step: u[n]=0 (n&lt;0), or =1 (n≥0)</p><p>for a sinusoid:<br>𝑥[𝑛]=A cos(𝜔0 𝑛+𝜙)<br>𝜔0:Normalised frequency<br>𝜙:Phase delay</p><p>Normalised frequency in radians/sample:<br>𝜔0=Ω0⁄𝑓𝑠,<br>where Ω0=2𝜋𝑓, is the real angular frequency, fs is sampling frequency</p><p>if angular frequency=𝜋 rad/sec, frequency=𝜋/2𝜋=0.5Hz<br>if a 1 Hz sine sampled by frequency of 10Hz, 1/10=0.1 cycle per sample<br>angular frequency = 2𝜋*0.1 cycle per sample =0.2𝜋 radians per sample</p><p>Important properties of sequences:<br>Linearity: y[n]=T{x1[n]+x2[n]}=T{x1[n]}+T{x2[n]}<br>Time invariance: y[n-k]=T{x[n-k]},<br><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/1201.PNG" alt="1201.PNG"><br>Stablility: input and output is bounded<br>Causality: y[n0]=T{x[n&lt;n0]}</p><p>note: Linear and time-invariant = LTI system</p><p>Linear constant coefficient difference (LCCD) equation:<br>LTI systems can be described by a difference equation of the form<br><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/1202.PNG" alt="1202.PNG"><br><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/1203.PNG" alt="1203.PNG"></p><p>impulse response (can be explained by convolution)</p><p><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/1204.PNG" alt="1204.PNG"><br>where n in figure is a random constant value,<br>assuming n=-1, f1[k]=[1,2,3], f2[k]=[1,0,1,2]<br><img src="/2021-2022/EEE339-Digital-Engineering-de67ee225472/1205.PNG" alt="1205.PNG"></p>]]></content>
      
      
      <categories>
          
          <category> academic material </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2021-2022 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EEE317 Principle of Communications</title>
      <link href="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/"/>
      <url>/2021-2022/EEE317-Principle-of-Communications-93699c44d491/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="week1"><a href="#week1" class="headerlink" title="week1"></a>week1</h1><p><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/101.PNG" alt="101.PNG"><br>Si: signal input<br>Ni: noice input<br>So: signal output<br>No: noice output</p><h2 id="Noise-in-AM-systems"><a href="#Noise-in-AM-systems" class="headerlink" title="Noise in AM systems"></a>Noise in AM systems</h2><p>assuming have noise vlotage/current ni(t) and R=1Ω, the noice power Ni:<br><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/102.PNG" alt="102.PNG"><br>ni(t) in terms on in-phase and out-of-phase components in the baseband<br><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/103.PNG" alt="103.PNG"><br>can get:<br><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/104.PNG" alt="104.PNG"><br>where <img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/105.PNG" alt="105.PNG"> is the average value of nc(t)^2.</p><p>hence <img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/106.PNG" alt="106.PNG"></p><table><thead><tr><th align="left">type</th><th align="left">efficiency</th><th align="left">cost</th></tr></thead><tbody><tr><td align="left">DSB SC</td><td align="left">High</td><td align="left">Expensive</td></tr><tr><td align="left">DSB LC</td><td align="left">Low</td><td align="left">Cheap</td></tr></tbody></table><h2 id="Noise-performance-of-DSB-SC-using-coherent-detection"><a href="#Noise-performance-of-DSB-SC-using-coherent-detection" class="headerlink" title="Noise performance of DSB SC using coherent detection"></a>Noise performance of DSB SC using coherent detection</h2><p>the input ti detectoe and time average input power signal is:<br><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/107.PNG" alt="107.PNG"><br>if the demodulator the signal using a perfectly same carrier signal, the signal outputcan be:<br><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/108.PNG" alt="108.PNG"><br>as have defined before, the input signal can simply write as the average value of ni^2(t) and no(t)=ni(t)*cos(Wct) and<br><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/109.PNG" alt="109.PNG"></p><p>hence the noise rations is:<br><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/110.PNG" alt="110.PNG"></p><h2 id="Noise-performance-of-DSB-LC-using-envelope-detection"><a href="#Noise-performance-of-DSB-LC-using-envelope-detection" class="headerlink" title="Noise performance of DSB LC using envelope detection"></a>Noise performance of DSB LC using envelope detection</h2><p><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/201.PNG" alt="201.PNG"><br>r(t) is the output from envelope detector. If ns(t)^2 is much larger than its denominator, hence<br><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/202.PNG" alt="202.PNG"><br>By the same calculation, get<br><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/203.PNG" alt="203.PNG"></p><h2 id="Noice-in-FM-signal"><a href="#Noice-in-FM-signal" class="headerlink" title="Noice in FM signal"></a>Noice in FM signal</h2><p>The FM receiver can be drawn as<br><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/204.PNG" alt="204.PNG"><br>Liliter here is ideal and could removes all amplitude variations.</p><p>Input signal si(t) can be written as:<br><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/205.PNG" alt="205.PNG"><br>cA: the maximum frequency deviation(same value as ∆ω)<br>α: signal amplitude<br>β: the modulation index(β=∆ω/ωm)</p><p>and the time average output signal power is:<br><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/206.PNG" alt="206.PNG"><br>K: constant associated demodulator system</p><p>hence the noice output power is proportional as ω<br><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/207.PNG" alt="207.PNG"></p><p><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/208.PNG" alt="208.PNG"></p><h2 id="Pre-emphasis-and-de-emphasis-FM-systems"><a href="#Pre-emphasis-and-de-emphasis-FM-systems" class="headerlink" title="Pre-emphasis and de-emphasis FM systems"></a>Pre-emphasis and de-emphasis FM systems</h2><p>from the figure above, find the noice power density is at its highest when signal strength is at its smallest.<br>hence pre increase/decrease strength before modulating singal can solve it<br><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/209.PNG" alt="209.PNG"></p><h1 id="Week2"><a href="#Week2" class="headerlink" title="Week2"></a>Week2</h1><h2 id="entropy"><a href="#entropy" class="headerlink" title="entropy"></a>entropy</h2><p>The entropy, or H, is the average information carried per message of stmbol<br><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/210.PNG" alt="210.PNG"><br>like if p(0)=0.2 and p(1)=0.8, H=-(p(0)log2(p(0))+p(1)log2(p(1)))</p><p>the relationship between proporty and H is<br><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/211.PNG" alt="211.PNG"></p><h2 id="Huffman-coding"><a href="#Huffman-coding" class="headerlink" title="Huffman coding"></a>Huffman coding</h2><p><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/212.PNG" alt="212.PNG"><br>for different appear porporty for letter ABCDE, different combination have been used to arrange them.<br>the bigger proporty a letter has, the less diginal number will used on it.</p><p>the average number per message Huffman code will sent can be calculated as<br>n’=1<em>0.74+2</em>0.12+3<em>0.07+4</em>0.06+4*0.01=1.39 bits/message<br>but if using entropy the value will changed as<br>H=-(0.74log2(0.74)+0.12log2(0.12)+…+0.01log2(0.01))=1.26 bits/message</p><p>the efficiency of Huffman codeing is 1.26/1.39=91%</p><h2 id="Strcuture-sequences-and-data-compression"><a href="#Strcuture-sequences-and-data-compression" class="headerlink" title="Strcuture sequences and data compression"></a>Strcuture sequences and data compression</h2><p>Compression is used to reduce the number of bits required to send a piece of information.</p><p>Or can usig run-length encoding, which have combain all continous same colors into entire part(like color name + numbers) to reduce store places</p><p>But Variable data rate required - the channel bandwidth will be constant, so<br>buffers are needed.<br>And A bit error can cause large areas of picture to be incorrect - a low error<br>rate is needed.  </p><h2 id="Lossless-and-lossy-coding"><a href="#Lossless-and-lossy-coding" class="headerlink" title="Lossless and lossy coding"></a>Lossless and lossy coding</h2><p>run-length coding is an example of lossless coding, cause all bits and data is important in series.<br>Lossy coding can loss pieces of message and the rest of data can also been used. such as sound and pictures.</p><h1 id="week-3"><a href="#week-3" class="headerlink" title="week 3"></a>week 3</h1><p>intriduction of digital communications. find the advantages and diaadvantages exsists in digital communications.</p><h2 id="Advantages"><a href="#Advantages" class="headerlink" title="Advantages"></a>Advantages</h2><p>Channel coding: the process of adding redundant code to a message in order to help the receiver correct any errors which may have occued in transit. (like 0 001 1111, which first 0 is a checking bit without any meaning)</p><p>Source coding: Source coding is the process of modifying the way we send the data.</p><p>Multiplexing: In transmission systems we often want to make many different signals occupy the available transmission space, this is called multiplexing. </p><p>Frequency division multiple access (FDMA): different baseband range will allocated to different user in same time.<br><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/301.PNG" alt="301.PNG"></p><p>Time division multiple acces (TDMA): whole baseband will allocated to user but in part of whole times.<br><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/302.PNG" alt="302.PNG"></p><p>Code division multiple access (CDMA): both time and baseband will be divided and allocated to different users (most effieiency way, and evry secure)<br><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/303.PNG" alt="303.PNG"></p><p>Encryption : data will be coded by a key and decoded by a same key when receive it.<br><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/304.PNG" alt="304.PNG"></p><p>Regeneration: The signal need to repeate transimited signals every regulat times and both signal and noise will strengthed and finally noise will larger than signal in analogue signal. But in channel coding every small noise will be removed while repeat the signals.<br><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/305.PNG" alt="305.PNG"></p><h2 id="Disadvantages"><a href="#Disadvantages" class="headerlink" title="Disadvantages"></a>Disadvantages</h2><p>Bandwidth effiency: An analogue transmission system will always occupy less bandwidth than a digital system sending the same message. For some times we can using M-Ary to ease this problem.<br>Please note: the sample frequency in ADC need larger than 2 times of original signal frequency.</p><p>Whats more, digital signals need translate to analogue signals finally, and need synchronisation send and receive environment. It can be more complex to send a digital message.</p><h1 id="week4"><a href="#week4" class="headerlink" title="week4"></a>week4</h1><h2 id="channel-coding"><a href="#channel-coding" class="headerlink" title="channel coding"></a>channel coding</h2><p>Probability of errors: a binary message sent with bit 0 ir 1 have a probabitity p to turn into wrong bit<br><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/401.PNG" alt="401.PNG"><br>Pε = P (0→1)× P (1) + P (1→0) P (0)</p><h3 id="random-error"><a href="#random-error" class="headerlink" title="random error"></a>random error</h3><p>Random errors are typically caused by additive white Gaussian noise (AWGN).<br>Probability density function (PDF) is determined the magnitude for Gaussian in nature<br><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/402.PNG" alt="402.PNG"><br>the funtction form of PDF is<br><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/403.PNG" alt="403.PNG"><br>which where σ is the standard deviation and a0(1) is the mean of the distribution for logic 0 (1). </p><h3 id="hard-decisions-and-soft-decisions"><a href="#hard-decisions-and-soft-decisions" class="headerlink" title="hard decisions and soft decisions"></a>hard decisions and soft decisions</h3><p>hard decision is what figure shows above. is usually sdequate for channels with small amounts of AWGN.<br>soft decision is return 1 or 0 if a is bigger or smaller than am. is usually for high AWGN noise.<br><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/404.PNG" alt="404.PNG"></p><h3 id="multiple-random-errors"><a href="#multiple-random-errors" class="headerlink" title="multiple random errors"></a>multiple random errors</h3><p><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/405.PNG" alt="405.PNG"></p><h3 id="parity-check-bits"><a href="#parity-check-bits" class="headerlink" title="parity check bits"></a>parity check bits</h3><p>A single bit parity check code is a simple algebraic code.</p><table><thead><tr><th align="left">bit</th><th align="left">feature</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">odd number of bit “1”</td></tr><tr><td align="left">0</td><td align="left">even number of bit “1”</td></tr></tbody></table><h3 id="convolution-coding"><a href="#convolution-coding" class="headerlink" title="convolution coding"></a>convolution coding</h3><p>a more powerful technical for correction random errors.<br>for example, initially loaded with 000 and subjected to input data 11011</p><table><thead><tr><th align="left">clock pulse</th><th align="left">D0</th><th align="left">D1</th><th align="left">D2</th><th align="left">u1</th><th align="left">u1</th></tr></thead><tbody><tr><td align="left">0</td><td align="left">0</td><td align="left">0</td><td align="left">0</td><td align="left">0</td><td align="left">0</td></tr><tr><td align="left">1</td><td align="left">1</td><td align="left">0</td><td align="left">0</td><td align="left">1</td><td align="left">1</td></tr><tr><td align="left">2</td><td align="left">1</td><td align="left">1</td><td align="left">0</td><td align="left">0</td><td align="left">1</td></tr><tr><td align="left">3</td><td align="left">0</td><td align="left">1</td><td align="left">1</td><td align="left">0</td><td align="left">1</td></tr><tr><td align="left">4</td><td align="left">1</td><td align="left">0</td><td align="left">1</td><td align="left">0</td><td align="left">0</td></tr><tr><td align="left">5</td><td align="left">1</td><td align="left">1</td><td align="left">0</td><td align="left">0</td><td align="left">1</td></tr></tbody></table><p>where u1=D0+D1+D2, u2=D0+D2<br><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/406.PNG" alt="406.PNG"><br>the output result will changed in a constant rules hence some small errors will be found out and perhaps been solved.</p><h3 id="reed-solomon-code"><a href="#reed-solomon-code" class="headerlink" title="reed-solomon code"></a>reed-solomon code</h3><p>Reed-Solomon codes are in essence parity check codes, although the method by which the additional bits are derived is significantly more complex to enable burst errors corrections.<br>n: the final length of the code<br>k: the initial length of the code<br>t: number of symbol errors can be corrected(2t=n-k)</p><h1 id="Week5"><a href="#Week5" class="headerlink" title="Week5"></a>Week5</h1><p>Pseudonoise(PN) is a noise but in completely derministic. it can presrve and srcurity signals in channel from other influences.</p><h2 id="features-for-a-good-pseudomoise-sequence"><a href="#features-for-a-good-pseudomoise-sequence" class="headerlink" title="features for a good pseudomoise sequence"></a>features for a good pseudomoise sequence</h2><p>Balance: want roughly same number of 0 and 1<br>Run sequence: a sequence of consecutive bits with same value. and 1/2 of sequecy should be length of 1, 1/4 be length of 2 and 1/8 be length of 3.<br>Autocorrelation: have a low correlation with shifted copies with itself.</p><p>like 15-bit sequence 100110101111000,<br>8 of “1” and 7 of “0”, achieved balance<br>4 of 1 length, 2 of 2 length, 1 of 3 length and 1 0f 4 length, roughlt achieved run sequence.<br>100110101111000<br>xor<br>010011010111100<br>=<br>110101111000100<br>autocorrelation of -1 (sane with other shift situations, fit the autocorrelation)</p><p>the good autocorrelation can be used in synchronisation communications cause receiver can easily find the code word by calculating correlation function between its stored PN code and the incoming data stream.</p><h2 id="generation-PN-code"><a href="#generation-PN-code" class="headerlink" title="generation PN code"></a>generation PN code</h2><p>a shift register connected in feedback via a modulo-2 adder can genarate PN code<br><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/501.PNG" alt="501.PNG"></p><p>if n=3, and initial S1=0, S2=1, S3=1, get<br><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/502.PNG" alt="502.PNG"><br>repeat 7 times (for n length, the maximum number is =2^n-1, called maximal length sequency)</p><table><thead><tr><th align="left">S1</th><th align="left">S2</th><th align="left">S3</th><th align="left">o/p</th></tr></thead><tbody><tr><td align="left">0</td><td align="left">1</td><td align="left">1</td><td align="left">1</td></tr><tr><td align="left">0</td><td align="left">0</td><td align="left">1</td><td align="left">1</td></tr><tr><td align="left">1</td><td align="left">0</td><td align="left">0</td><td align="left">0</td></tr><tr><td align="left">0</td><td align="left">1</td><td align="left">0</td><td align="left">0</td></tr><tr><td align="left">1</td><td align="left">0</td><td align="left">1</td><td align="left">1</td></tr><tr><td align="left">1</td><td align="left">1</td><td align="left">0</td><td align="left">0</td></tr><tr><td align="left">1</td><td align="left">1</td><td align="left">1</td><td align="left">1</td></tr></tbody></table><p>get output sequency 11100101.</p><p>be attention: the initialize code can’t be “000” cause no “1” can be generated through “0”s</p><h2 id="non-maximal-length-PN-codes"><a href="#non-maximal-length-PN-codes" class="headerlink" title="non maximal length PN codes"></a>non maximal length PN codes</h2><p>“Gold code” is designed cross-correlation properties are used<br>and “Barker codes” are sequences which only have 2-valued autocorrelation function. for example</p><table><thead><tr><th align="left">bits number</th><th align="left">Barker code sequence</th></tr></thead><tbody><tr><td align="left">3</td><td align="left">110</td></tr><tr><td align="left">5</td><td align="left">11101</td></tr><tr><td align="left">7</td><td align="left">1110010</td></tr><tr><td align="left">11</td><td align="left">11100010010</td></tr><tr><td align="left">13</td><td align="left">1111100110101</td></tr></tbody></table><p>by wrapping the code with itself, get</p><table><thead><tr><th align="left">1</th><th align="left">1</th><th align="left">1</th><th align="left">0</th><th align="left">1</th><th align="left">correlation</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">1</td><td align="left">1</td><td align="left">0</td><td align="left">1</td><td align="left">+5</td></tr><tr><td align="left">1</td><td align="left">1</td><td align="left">1</td><td align="left">1</td><td align="left">0</td><td align="left">+1</td></tr><tr><td align="left">0</td><td align="left">1</td><td align="left">1</td><td align="left">1</td><td align="left">1</td><td align="left">+1</td></tr><tr><td align="left">1</td><td align="left">0</td><td align="left">1</td><td align="left">1</td><td align="left">1</td><td align="left">+1</td></tr><tr><td align="left">1</td><td align="left">1</td><td align="left">0</td><td align="left">1</td><td align="left">1</td><td align="left">+1</td></tr><tr><td align="left">1</td><td align="left">1</td><td align="left">1</td><td align="left">0</td><td align="left">1</td><td align="left">+1</td></tr></tbody></table><p>only 1 and 5 these two values.</p><h1 id="Week6"><a href="#Week6" class="headerlink" title="Week6"></a>Week6</h1><p>DSSS: direct dequence S.S.<br>FHSS: frequency hopping S.S.</p><p>advantage of S.S. system:<br>Low probability of interception, interference rejection, higher data rates, and multiple access</p><h2 id="DSSS"><a href="#DSSS" class="headerlink" title="DSSS"></a>DSSS</h2><p><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/601.PNG" alt="601.PNG"></p><p>the message m(t) will first modulated with a PN code which changes much faster than original and much similar with a noise signal.<br><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/602.PNG" alt="602.PNG"></p><p>hence usually this signal is useless unless reveicer have the same PN code to demodulate it.<br>and definitely, the PN code c(t) in receiver part need to be synchronised with incoming signal to demodulate correctly.</p><p>G=Tb/Tch</p><h2 id="search-mode"><a href="#search-mode" class="headerlink" title="search mode"></a>search mode</h2><p><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/605.PNG" alt="605.PNG"></p><p>the control logic will detectwhether PN code have schieve the synchronisation type by energy. if it is not synchronised, energy during BPF(bandpass filter) will very small and then deley time td will be adjusted. but if in synchronised mode then the energy during BPF region will be strong enough to detect.<br><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/604.PNG" alt="604.PNG"></p><h2 id="check-mode"><a href="#check-mode" class="headerlink" title="check mode"></a>check mode</h2><p><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/603.PNG" alt="603.PNG"></p><p>the check mode will compear the signal reveiced between early and late part. the synchronisation will be achieved if these two parts have identical values.<br><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/606.PNG" alt="606.PNG"></p><p>if PN generator is early generated, the shadow area in early part will smaller than late part and VCO will changed the time sequence to adjust it.</p><h2 id="noise-suppression"><a href="#noise-suppression" class="headerlink" title="noise suppression"></a>noise suppression</h2><p>the AWGN(additive Gaussian white noise) have finite power over an infinite bandwidth. the de-spearding operation for a ready-spreaded signal can increased power in signal and decrease influence from such white noise.<br><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/607.PNG" alt="607.PNG"></p><p>the jamming signal can be signal with high power and narrow bandwidth. but it can also be decreased after de-spreading.<br><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/608.PNG" alt="608.PNG"></p><h2 id="FHSS"><a href="#FHSS" class="headerlink" title="FHSS"></a>FHSS</h2><p>frequency hopping spreads the data signal on one of a series of carriers occupy a really large bandwidth.it is required the bandwidth containing carrier frequency is much larger than data bandwidth. (more than one hoppings in a bandwidth)<br><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/609.PNG" alt="609.PNG"></p><p>final signal will be modulated for two times and its final frequency can be drawed as<br> <img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/610.PNG" alt="610.PNG"><br>final signal frequency=f(carrier)+f(offset)</p><p>the processing gain for a frequency hopping system is given as<br>G=fh*Ts</p><p>slow hopping system: the duration of a message bit sorresponds to the inverse hop rate.<br>fast frequency hopping: would suffer a noise or jamming signal in many parts of the bandwidth.</p><h1 id="Week-7"><a href="#Week-7" class="headerlink" title="Week 7"></a>Week 7</h1><p>The filter at the receiver end plays a vital role in determining the performance of a communications link.<br>good filter:<br><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/701.PNG" alt="701.PNG"></p><p>for the required matched filter’s impulse response h(t) can be<br><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/702.PNG" alt="702.PNG"></p><h2 id="Transversal-filter"><a href="#Transversal-filter" class="headerlink" title="Transversal filter"></a>Transversal filter</h2><p><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/703.PNG" alt="703.PNG"><br><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/704.PNG" alt="704.PNG"><br><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/705.PNG" alt="705.PNG"></p><h2 id="integraie-and-dump-matched-filter"><a href="#integraie-and-dump-matched-filter" class="headerlink" title="integraie and dump matched filter"></a>integraie and dump matched filter</h2><p>this matched filter can only be used for binary signal<br>with the previous function s(t)=1 and stop in t=T, the correlation figure can be drawn as<br><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/706.PNG" alt="706.PNG"><br>and note the shape of dquare wave is distorted by matched filter</p><p>the duration of g(t) can roughly implemented as<br><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/707.PNG" alt="707.PNG"><br>the switch is open when t&lt;T, till the sample is gotten. the circuit can then determined the capacitor voltage, output it can clean for next sample collection.<br><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/708.PNG" alt="708.PNG"></p><p>and we can also change previous function g(T) and implementation as<br><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/709.PNG" alt="709.PNG"><br><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/710.PNG" alt="710.PNG"></p><h2 id="matched-filter-detedtion-of-PCM-codewords"><a href="#matched-filter-detedtion-of-PCM-codewords" class="headerlink" title="matched filter detedtion of PCM codewords"></a>matched filter detedtion of PCM codewords</h2><p>it is quite same with correlation implements before but with PVM code to reject some of noise<br><img src="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/711.PNG" alt="711.PNG"><br>the most significant bit will be placed in the last and other bit will be filled with PCM code word<br>like if want transfer “3” in 8 bits with PCM “1101”, the code will be 00 1101 11 for transfter the important message at first.</p><h1 id="Week-8"><a href="#Week-8" class="headerlink" title="Week 8"></a>Week 8</h1>]]></content>
      
      
      <categories>
          
          <category> academic material </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2021-2022 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ACS342 Feedback systems Design</title>
      <link href="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/"/>
      <url>/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/</url>
      
        <content type="html"><![CDATA[<p>Essentially, all models are wrong, but some are useful.<br>George E. P. Box</p><span id="more"></span><h1 id="Week1"><a href="#Week1" class="headerlink" title="Week1"></a>Week1</h1><p>Laplace Transform</p><p><img src="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/101.jpg" alt="101.jpg"></p><p>Static system: output is memoryless function of the input<br>Dynamic system: output is function of current and past inputs</p><p>Linear functions: y(x)=x(n+1), y(x1)+y(x2)=y(x1+x2)<br>Continuous-time: y(k)=ay(k) (instead of y(k)=ay(k-1))<br>Time-invariant: shift input=shift output, y(delay)[n]=y[n-k], where y(delay)[n]=x[n+1-k], y[n-k]=x[(n-k)+1]</p><p>Kirchoff’s Law<br><img src="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/102.PNG" alt="102.PNG"></p><p>s-domain modelling of electrical networks<br><img src="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/103.PNG" alt="103.PNG"></p><p>Laplace transform in differential:<br><img src="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/104.PNG" alt="104.PNG"><br><img src="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/105.PNG" alt="105.PNG"></p><h1 id="Week2"><a href="#Week2" class="headerlink" title="Week2"></a>Week2</h1><p>Transfer function:<br><img src="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/201.PNG" alt="201.PNG"><br>For a linear system with input u(t) output y(t), G(s)=Y(s)/U(s)</p><p>combining blocks in series and feedback:<br><img src="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/202.PNG" alt="202.PNG"><br><img src="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/203.PNG" alt="203.PNG"><br>The signals and descriptions in system block:<br><img src="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/204.PNG" alt="204.PNG"></p><p><img src="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/205.PNG" alt="205.PNG"></p><p>Impulse response is inverse transform of G(s)<br>Step response is the inverse transform of G(s)/s</p><h1 id="Week3"><a href="#Week3" class="headerlink" title="Week3"></a>Week3</h1><p>how is a system:<br>Stable<br>Speed of respond<br>smooth<br>well track<br>reject noise well<br>feedback affect</p><p>for system stability:<br>A system is stable if every bounded input results in a bounded output<br><img src="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/301.PNG" alt="301.PNG"></p><p><img src="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/302.PNG" alt="302.PNG"><br>simple means only no-repeared value on one point</p><p><img src="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/303.PNG" alt="303.PNG"><br>if all OL poles and CL poles have same signs, means it is stability</p><p>and also, if d(s)=as+b, where a and b have same sign,<br><img src="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/304.PNG" alt="304.PNG"><br>All stable higher-order systems have 𝑎𝑛, 𝑎𝑛−1, … , 𝑎0 same sign; but not all higher-order systems with 𝑎𝑛, 𝑎𝑛−1, … , 𝑎0 same sign are stable</p><p>Routh-Hurwitz<br><img src="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/305.PNG" alt="305.PNG"><br><img src="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/306.PNG" alt="306.PNG"><br>stable if an, an-1, bn-1….. are with same sign</p><p>For System speed and smooth level:</p><p>First order system:<br><img src="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/307.PNG" alt="307.PNG"><br><img src="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/308.PNG" alt="308.PNG"><br>making sure G(s) have a 1 in denominator to find time constant<br>less time constant a system has, faster it is</p><p>Second order system:<br><img src="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/309.PNG" alt="309.PNG"><br><img src="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/310.PNG" alt="310.PNG"><br><img src="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/311.PNG" alt="311.PNG"><br><img src="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/312.PNG" alt="312.PNG"></p><h1 id="Week4"><a href="#Week4" class="headerlink" title="Week4"></a>Week4</h1><p>track/reject distrubances/noise</p><p><img src="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/401.PNG" alt="401.PNG"><br>with input signal r(t), and output y(t),<br>track the r(t) if yss=lim𝑡→∞ r(t)<br>reject the r(t) if yss=0<br>We typically want a system to track 𝑟(𝑡) while rejecting 𝑑(𝑡)</p><p>if G(s)U(s) is stable,<br><img src="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/402.PNG" alt="402.PNG"><br><img src="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/403.PNG" alt="403.PNG"><br>G(0) is the steady-state gain<br><img src="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/404.PNG" alt="404.PNG"></p><p>the steady-state error (ess) in response to a constant reference<br><img src="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/405.PNG" alt="405.PNG"></p><p><img src="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/406.PNG" alt="406.PNG"><br><img src="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/407.PNG" alt="407.PNG"></p><p>Good tracking if KG(0) large<br>Good rejection only if K large</p><p>The closed-loop steady-state gain is T(0),<br>while open-loop steady-state gain is CG(0)=lim s→0 C(s)G(s)<br>CG(0) is sometimes called position error constant Kp.<br>If 𝐶𝐺(0) is finite, then 𝑦ss &lt; 𝑟 and 𝑒ss &gt; 0 for all 𝑟 &gt; 0</p><h1 id="Week-5"><a href="#Week-5" class="headerlink" title="Week 5"></a>Week 5</h1><p>How does feedback affect of these things</p><p>The root locus is the path (in the 𝑠-domain) traced out by the closed-loop poles as 𝐾 is varied<br>example:<br><img src="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/501.PNG" alt="501.PNG"></p><p>for function KG(s)=K(s+z)/s(s+p1)(s+p2), (if z&gt;P1&gt;p2&gt;0)<br>a) prepare<br>open-loop gain: 0,p1,p2 (n=3)<br>open-loop zero: z (m=1)<br>root locus lies on: s0=z, s1=p1, s2=p2, s3=0<br>range: [z,P1],[P2,0] (range should be on real axes)(gain should point to zero if possible)</p><p>notes: the range can be one point if have two same roots</p><p>b) Asymptotes:<br>Centre of gravity and inclined angles<br><img src="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/502.PNG" alt="502.PNG"><br>(please check if centre of gravity is in moving range)</p><p>c) Break-away/in point:<br>two poles, then for some 𝐾 &gt; 0 the locus departs from the real axis at a break-away point<br>two zeros, then for some 𝐾 &gt; 0 the locus arrives at the real axis at a break-in point</p><p><img src="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/503.PNG" alt="503.PNG"><br>vlaue of s is the point value on real axes.<br>some of calculated vlaue will be removed if different with center of gravity</p><p>d) Departure from complex poles:<br>if has complex pole pairs,<br><img src="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/504.PNG" alt="504.PNG"><br>get the initial start angle on complex poles<br>As the locus is symmetric about the real axis, it departs from the other complex pole. like if angle in p1 is 45, angle in p2 will be -45.</p><p>e) Intersection with imaginary axis:<br>using formular KG(s)/1+KG(s), let its bottom part =0, get<br>s(s+p1)(s+p2)+k=0,<br>s^3+(p1+p2)s^2+p1p2s+k=0</p><p>|:—-|:—-|:—-|:—-|<br>|s^3|1|p1p2|0|<br>|s^2|p1+p2|k|0|<br>|s^1|((P1+p2)p1p2-k)/(p1+p2)|0|0|<br>|s^0|k|0|0|</p><p>let((P1+p2)p1p2-k)=0, get K<br>put K into (p1+p2)s^2+K=0, get value s,<br>which is the cross point on imaginary axes</p><p><img src="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/505.PNG" alt="505.PNG"><br><img src="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/506.PNG" alt="506.PNG"></p><h1 id="Week6"><a href="#Week6" class="headerlink" title="Week6"></a>Week6</h1><p>Start to check whether a performance specification can met<br><img src="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/601.PNG" alt="601.PNG"></p><p>𝜁: damping ratio<br>𝜔n: radian angle</p><p>note no steady-state performance is needed if ess/r reaches requirement</p><p><img src="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/602.PNG" alt="602.PNG"></p><p><img src="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/603.PNG" alt="603.PNG"><br>the root locus are better go to white region to meet specification (it is not satisfact in example)</p><p>the coordiantes in black block above is gaven by<br><img src="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/604.PNG" alt="604.PNG"><br>locus root must pass it in satisfact method.</p><p>A phase-lead compensator:<br><img src="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/605.PNG" alt="605.PNG"><br>find z: 𝑧 = 𝜁 ∗𝜔n<br>find p:<br><img src="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/606.PNG" alt="606.PNG"><br><img src="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/607.PNG" alt="607.PNG"><br>the components need multiply n in case of  in power of n in roots like s^n<br>and any angle in negative value need add 180 to fit the requirement (like if angle=-90, need be changed as (-90+180)=90)<br><img src="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/608.PNG" alt="608.PNG"></p><p>find k:<br><img src="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/609.PNG" alt="609.PNG"><br>find the abs value for each part (square root of saperately real and imaginary value in power of 2)</p>]]></content>
      
      
      <categories>
          
          <category> academic material </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2021-2022 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32 IIC通信</title>
      <link href="/STM32/STM32-IIC%E9%80%9A%E4%BF%A1-89def3d6f728/"/>
      <url>/STM32/STM32-IIC%E9%80%9A%E4%BF%A1-89def3d6f728/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>IIC协议是一种通用connection method，通过SCL和SDA双线通讯，可以通过设置地址来实现多主机/从机共用双线通讯，节省端口。但效率不高，遇上大数据量通讯弊端明显。</p><span id="more"></span><h2 id="IIC协议"><a href="#IIC协议" class="headerlink" title="IIC协议"></a>IIC协议</h2><p>IIC时序有如下规律：</p><p>SCL | SDA | Result<br>  H  |    ↓    | Start Signal<br>  H  |    ↑    | Stop Signal<br>  H  |   →   | Read Signal<br>  L   |    X   | Change Signal</p><p><img src="/STM32/STM32-IIC%E9%80%9A%E4%BF%A1-89def3d6f728/20190409113350288.png" alt="20190409113350288.png"></p><p>寻址方面，一般寻址会发送8位数据，前7位为地址，第8位为读/写（1/0）标记。<br>例如主机从从机读数据，可以是1010 0001。</p><p>每次发送一个字节数据后，主机会拉高SDA并等待从机应答。如检测到下拉信号后继续传输。一般一次传输完成后需delay至少5ms再继续传输。</p><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><p>cubemx connectivity中可选择I2C1或是2。选择standard mode就行，这样内部时钟就是100khz。</p><p>注意：如使用mini板会发现它将EEPROM，24C02芯片连接在PC11和PC12上，而非定义的IIC接口，需要外部自行连接。</p><p>另：在查资料时发现有说法将以下自动生成的代码放置在GPIO enable之前：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">__HAL_RCC_I2C2_CLK_ENABLE();</span><br></pre></td></tr></table></figure><p>但尝试后发现并无区别，先在此记录。</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="polling"><a href="#polling" class="headerlink" title="polling"></a>polling</h3><p>单纯的读写可使用如下函数：</p><p>HAL_StatusTypeDef HAL_I2C_Master_Transmit(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)<br>HAL_StatusTypeDef HAL_I2C_Master_Receive(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)<br>example：HAL_I2C_Master_Transmit(&amp;hi2c2, 0xA0, Buffer, 8, 1000);</p><p>或：<br>HAL_StatusTypeDef HAL_I2C_Mem_Write(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint8_t *pData, uint16_t Size, uint32_t Timeout)<br>HAL_StatusTypeDef HAL_I2C_Mem_Read(I2C_HandleTypeDef <em>hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint8_t <em>pData, uint16_t Size, uint32_t Timeout)<br>example：HAL_I2C_Mem_Write(&amp;hi2c2, 0xA0,8</em>i,I2C_MEMADD_SIZE_8BIT,Buffer+8</em>i,8, 1000);</p><p>基本上最好选择mem记录和读取，因为可以选择开始储存的地址，灵活。</p>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>STM32 红外接收（NEC协议）</title>
      <link href="/STM32/STM32-%E7%BA%A2%E5%A4%96%E6%8E%A5%E6%94%B6%EF%BC%88NEC%E5%8D%8F%E8%AE%AE%EF%BC%89-e21c0e49c925/"/>
      <url>/STM32/STM32-%E7%BA%A2%E5%A4%96%E6%8E%A5%E6%94%B6%EF%BC%88NEC%E5%8D%8F%E8%AE%AE%EF%BC%89-e21c0e49c925/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>本文将使用<a href="https://pdf1.alldatasheet.com/datasheet-pdf/view/26526/VISHAY/TSAL6200.html">TSAL6200</a>发射头和<a href="https://pdf1.alldatasheet.com/datasheet-pdf/view/103034/VISHAY/HS0038B.html">HS0038</a>接收头传递信号。HS0038会输出解码完成的信号并以高低电频方式输出。</p><span id="more"></span><h2 id="输入捕获"><a href="#输入捕获" class="headerlink" title="输入捕获"></a>输入捕获</h2><p>通过tim IC功能实现输入中断，来测量两trigger间时间差。</p><p>由于接红外接收头连接于PA1，这里选用TIM5 channel 2实现中断。</p><p>cubeMX选中TIM5 channel 2 Input Capture direct mode, 勾选Internal Clock。</p><p>Prescaler= 72-1<br>Counter Period= 65535(0XFFFF) //越大越好，尽量减少溢出次数<br>auto-reload= enable</p><p>记得设置NVIC优先级。</p><h3 id="tim-c"><a href="#tim-c" class="headerlink" title="tim.c"></a>tim.c</h3><p>需要在init之后加入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HAL_TIM_Base_Start_IT(&amp;htim5); //开启计时中断</span><br><span class="line">HAL_TIM_IC_Start_IT(&amp;htim5,TIM_CHANNEL_2); //开启输入中断</span><br></pre></td></tr></table></figure><p>计数器溢出回调函数。计数溢出次数，并标记一些重要内容。<br>RmtSta[(0&lt;=接收标记)00(0&lt;=high trigger标记) (0000&lt;=4bits counter)]</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(htim==(&amp;htim5))</span><br><span class="line">&#123;</span><br><span class="line"> <span class="keyword">if</span>(RmtSta&amp;0x80)//1000 0000 start receiving</span><br><span class="line">&#123;</span><br><span class="line">RmtSta&amp;=~0X10; //cancle the rising mark</span><br><span class="line"><span class="keyword">if</span>((RmtSta&amp;0X0F)==0X00)RmtSta|=1&lt;&lt;<span class="string">6;//0100 0000 finishing a receive</span></span><br><span class="line"><span class="string">if((RmtSta&amp;0X0F)&lt;14)RmtSta++;</span></span><br><span class="line"><span class="string">else //(RmtSta&amp;0X0F)=15</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">RmtSta&amp;=~(1&lt;&lt;7);</span></span><br><span class="line"><span class="string">RmtSta&amp;=0XF0;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>输入中断回调函数。计算一个周期内的时间差，交替设置high/down trigger中断来实现高/低电频时间测量。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(htim==(&amp;htim5))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (HAL_GPIO_ReadPin(GPIOA,GPIO_PIN_1))</span><br><span class="line">&#123;</span><br><span class="line">TIM_RESET_CAPTUREPOLARITY(&amp;htim5,TIM_CHANNEL_2); //reset configuration (important)</span><br><span class="line">TIM_SET_CAPTUREPOLARITY(&amp;htim5,TIM_CHANNEL_2,TIM_ICPOLARITY_FALLING); //interrept <span class="keyword">in</span> falling edge</span><br><span class="line">__HAL_TIM_SET_COUNTER(&amp;htim5,0);  //reset timer</span><br><span class="line">  RmtSta|=0X10; //0001 0000</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">Dval=HAL_TIM_ReadCapturedValue(&amp;htim5,TIM_CHANNEL_2); //get time difference</span><br><span class="line">TIM_RESET_CAPTUREPOLARITY(&amp;htim5,TIM_CHANNEL_2);</span><br><span class="line">TIM_SET_CAPTUREPOLARITY(&amp;htim5,TIM_CHANNEL_2,TIM_ICPOLARITY_RISING); //interrept <span class="keyword">in</span> rising edge</span><br><span class="line">  RmtSta&amp;=~(1&lt;&lt;<span class="string">4); //000(1&lt;-0) 0000</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>之后将Dval加上溢出的时间就得到完整的高/低电频时间了。</p><h2 id="NEC协议"><a href="#NEC协议" class="headerlink" title="NEC协议"></a>NEC协议</h2><p>NEC协议遵从以下规则：</p><p><img src="/STM32/STM32-%E7%BA%A2%E5%A4%96%E6%8E%A5%E6%94%B6%EF%BC%88NEC%E5%8D%8F%E8%AE%AE%EF%BC%89-e21c0e49c925/12215924-779a256456e84999b95e2b9133125781.png" alt="12215924-779a256456e84999b95e2b9133125781.png"></p><p>每条命令会由一个起始信号，8位地址，8位反位地址，8位cmd,8位反位cmd和若干repeat信号组成。</p><p><img src="/STM32/STM32-%E7%BA%A2%E5%A4%96%E6%8E%A5%E6%94%B6%EF%BC%88NEC%E5%8D%8F%E8%AE%AE%EF%BC%89-e21c0e49c925/20190615153604389.png" alt="20190615153604389.png"></p><p>起始信号会产生9ms高信号和4.5ms低信号，</p><p>发射逻辑“1”会产生560μs高信号和1690μs低信号，</p><p>发射逻辑“0”会产生560μs高信号和560μs低信号，</p><p>repeat会产生9ms高信号和2.25ms低信号。</p><p><img src="/STM32/STM32-%E7%BA%A2%E5%A4%96%E6%8E%A5%E6%94%B6%EF%BC%88NEC%E5%8D%8F%E8%AE%AE%EF%BC%89-e21c0e49c925/20190615155851364.png" alt="20190615155851364.png"></p><p>但是接收头却会反调接收的高信号和低信号，如接收逻辑“1”会产生560μs低信号和1690μs高信号。</p><p>由于接收的高信号足以区分不同codes，因此可以只检测高信号长度来解码。</p><h3 id="按钮信号"><a href="#按钮信号" class="headerlink" title="按钮信号"></a>按钮信号</h3><p>通过测试正点原子配套的遥控器，得如下结果：</p><p>按7X3位置排序cmd码<br> 162 | 098 | 226<br> 034 | 002 | 194<br> 224 | 168 | 144<br> 104 | 152 | 176<br> 048 | 024 | 122<br> 016 | 056 | 090<br> 066 | ( n ) | 082</p><h3 id="tim-c-1"><a href="#tim-c-1" class="headerlink" title="tim.c"></a>tim.c</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &quot;tim.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#include &quot;stdio.h&quot;</span></span><br><span class="line"><span class="comment"># include &quot;LED\BSP_LED.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;OLED\oled.h&quot;</span></span><br><span class="line"></span><br><span class="line">TIM_HandleTypeDef htim2;</span><br><span class="line">TIM_HandleTypeDef htim5;</span><br><span class="line"></span><br><span class="line">/* TIM2 init <span class="keyword">function</span> */</span><br><span class="line">void MX_TIM2_Init(void)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  TIM_ClockConfigTypeDef sClockSourceConfig = &#123;0&#125;;</span><br><span class="line">  TIM_MasterConfigTypeDef sMasterConfig = &#123;0&#125;;</span><br><span class="line"></span><br><span class="line">  htim2.Instance = TIM2;</span><br><span class="line">  htim2.Init.Prescaler = 7200-1;</span><br><span class="line">  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;</span><br><span class="line">  htim2.Init.Period = 5000-1;</span><br><span class="line">  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;</span><br><span class="line">  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIM_Base_Init(&amp;htim2) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIM_ConfigClockSource(&amp;htim2, &amp;sClockSourceConfig) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;</span><br><span class="line">  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIMEx_MasterConfigSynchronization(&amp;htim2, &amp;sMasterConfig) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">HAL_TIM_Base_Start_IT(&amp;htim2);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">/* TIM5 init <span class="keyword">function</span> */</span><br><span class="line">void MX_TIM5_Init(void)</span><br><span class="line">&#123;</span><br><span class="line">  TIM_ClockConfigTypeDef sClockSourceConfig = &#123;0&#125;;</span><br><span class="line">  TIM_MasterConfigTypeDef sMasterConfig = &#123;0&#125;;</span><br><span class="line">  TIM_IC_InitTypeDef sConfigIC = &#123;0&#125;;</span><br><span class="line"></span><br><span class="line">  htim5.Instance = TIM5;</span><br><span class="line">  htim5.Init.Prescaler = 72-1;</span><br><span class="line">  htim5.Init.CounterMode = TIM_COUNTERMODE_UP;</span><br><span class="line">  htim5.Init.Period = 65535;</span><br><span class="line">  htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;</span><br><span class="line">  htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIM_Base_Init(&amp;htim5) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIM_ConfigClockSource(&amp;htim5, &amp;sClockSourceConfig) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIM_IC_Init(&amp;htim5) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;</span><br><span class="line">  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIMEx_MasterConfigSynchronization(&amp;htim5, &amp;sMasterConfig) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_RISING;</span><br><span class="line">  sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;</span><br><span class="line">  sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;</span><br><span class="line">  sConfigIC.ICFilter = 0;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIM_IC_ConfigChannel(&amp;htim5, &amp;sConfigIC, TIM_CHANNEL_2) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">HAL_TIM_Base_Start_IT(&amp;htim5);</span><br><span class="line">HAL_TIM_IC_Start_IT(&amp;htim5,TIM_CHANNEL_2);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  GPIO_InitTypeDef GPIO_InitStruct = &#123;0&#125;;</span><br><span class="line">  <span class="keyword">if</span>(tim_baseHandle-&gt;Instance==TIM2)</span><br><span class="line">  &#123;</span><br><span class="line">    /* TIM2 clock <span class="built_in">enable</span> */</span><br><span class="line">    __HAL_RCC_TIM2_CLK_ENABLE();</span><br><span class="line"></span><br><span class="line">    /* TIM2 interrupt Init */</span><br><span class="line">    HAL_NVIC_SetPriority(TIM2_IRQn, 10, 0);</span><br><span class="line">    HAL_NVIC_EnableIRQ(TIM2_IRQn);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(tim_baseHandle-&gt;Instance==TIM5)</span><br><span class="line">  &#123;</span><br><span class="line">    /* TIM5 clock <span class="built_in">enable</span> */</span><br><span class="line">    __HAL_RCC_TIM5_CLK_ENABLE();</span><br><span class="line"></span><br><span class="line">    __HAL_RCC_GPIOA_CLK_ENABLE();</span><br><span class="line">    /**TIM5 GPIO Configuration</span><br><span class="line">    PA1     ------&gt; TIM5_CH2</span><br><span class="line">    */</span><br><span class="line">    GPIO_InitStruct.Pin = GPIO_PIN_1;</span><br><span class="line">    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;</span><br><span class="line">    GPIO_InitStruct.Pull = GPIO_NOPULL;</span><br><span class="line">    HAL_GPIO_Init(GPIOA, &amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line">    /* TIM5 interrupt Init */</span><br><span class="line">    HAL_NVIC_SetPriority(TIM5_IRQn, 2, 0);</span><br><span class="line">    HAL_NVIC_EnableIRQ(TIM5_IRQn);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(tim_baseHandle-&gt;Instance==TIM2)</span><br><span class="line">  &#123;</span><br><span class="line">    /* Peripheral clock <span class="built_in">disable</span> */</span><br><span class="line">    __HAL_RCC_TIM2_CLK_DISABLE();</span><br><span class="line"></span><br><span class="line">    /* TIM2 interrupt Deinit */</span><br><span class="line">    HAL_NVIC_DisableIRQ(TIM2_IRQn);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(tim_baseHandle-&gt;Instance==TIM5)</span><br><span class="line">  &#123;</span><br><span class="line">    /* Peripheral clock <span class="built_in">disable</span> */</span><br><span class="line">    __HAL_RCC_TIM5_CLK_DISABLE();</span><br><span class="line"></span><br><span class="line">    /**TIM5 GPIO Configuration</span><br><span class="line">    PA1     ------&gt; TIM5_CH2</span><br><span class="line">    */</span><br><span class="line">    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);</span><br><span class="line"></span><br><span class="line">    /* TIM5 interrupt Deinit */</span><br><span class="line">    HAL_NVIC_DisableIRQ(TIM5_IRQn);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">static uint8_t RmtSta=0,RmtCnt=0;  </span><br><span class="line">uint8_t count=0;</span><br><span class="line">uint16_t Dval;</span><br><span class="line">static uint32_t RmtRec;</span><br><span class="line"></span><br><span class="line">void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(htim==(&amp;htim2))</span><br><span class="line">    &#123;</span><br><span class="line">    LED_switch(LED0);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">if</span>(htim==(&amp;htim5))</span><br><span class="line">&#123;</span><br><span class="line"> <span class="keyword">if</span>(RmtSta&amp;0x80)//1000 0000 start receiving</span><br><span class="line">&#123;</span><br><span class="line">RmtSta&amp;=~0X10; //cancle the rising mark</span><br><span class="line"><span class="keyword">if</span>((RmtSta&amp;0X0F)==0X00)RmtSta|=1&lt;&lt;<span class="string">6;//0100 0000 finishing a receive</span></span><br><span class="line"><span class="string">if((RmtSta&amp;0X0F)&lt;14)RmtSta++;</span></span><br><span class="line"><span class="string">else //(RmtSta&amp;0X0F)=15</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">RmtSta&amp;=~(1&lt;&lt;7);</span></span><br><span class="line"><span class="string">RmtSta&amp;=0XF0;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">if(htim==(&amp;htim5))</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">if (HAL_GPIO_ReadPin(GPIOA,GPIO_PIN_1))</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">TIM_RESET_CAPTUREPOLARITY(&amp;htim5,TIM_CHANNEL_2);</span></span><br><span class="line"><span class="string">TIM_SET_CAPTUREPOLARITY(&amp;htim5,TIM_CHANNEL_2,TIM_ICPOLARITY_FALLING);</span></span><br><span class="line"><span class="string">__HAL_TIM_SET_COUNTER(&amp;htim5,0);  </span></span><br><span class="line"><span class="string">  RmtSta|=0X10; //0001 0000</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">Dval=HAL_TIM_ReadCapturedValue(&amp;htim5,TIM_CHANNEL_2);</span></span><br><span class="line"><span class="string">TIM_RESET_CAPTUREPOLARITY(&amp;htim5,TIM_CHANNEL_2);</span></span><br><span class="line"><span class="string">TIM_SET_CAPTUREPOLARITY(&amp;htim5,TIM_CHANNEL_2,TIM_ICPOLARITY_RISING);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if (RmtSta&amp;0X80)//1000 0000</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">if(Dval&gt;300&amp;&amp;Dval&lt;800) //560us logic 0</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">RmtRec&lt;&lt;=1;</span></span><br><span class="line"><span class="string">RmtRec|=0;  </span></span><br><span class="line"><span class="string">count++;</span></span><br><span class="line"><span class="string">&#125;else if(Dval&gt;1400&amp;&amp;Dval&lt;1800) //1680us logic 1</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">RmtRec&lt;&lt;=1;</span></span><br><span class="line"><span class="string">RmtRec|=1;</span></span><br><span class="line"><span class="string">count++;</span></span><br><span class="line"><span class="string">&#125;else if(Dval&gt;2200&amp;&amp;Dval&lt;2600) //2.25us</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">RmtCnt++;</span></span><br><span class="line"><span class="string">RmtSta&amp;=0XF0;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if (count==32)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">printf(&quot; [%d %d %d %d]\r\n&quot;,(RmtRec&amp;0XFF000000)&gt;&gt;24,(RmtRec&amp;0X00FF0000)&gt;&gt;16,(RmtRec&amp;0X0000FF00)&gt;&gt;8,RmtRec&amp;0X000000FF);</span></span><br><span class="line"><span class="string">count=0;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">else if(Dval&gt;4200&amp;&amp;Dval&lt;4700)//4.5ms</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">RmtSta|=1&lt;&lt;7;//1000 0000</span></span><br><span class="line"><span class="string">RmtCnt=0;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  RmtSta&amp;=~(1&lt;&lt;4); //000(1&lt;-0) 0000</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">uint8_t get_radio(void)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">uint8_t check=0,add=0;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if (RmtSta&amp;0x40)//0100 0000</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">printf(&quot;start getting\r\n&quot;);</span></span><br><span class="line"><span class="string">if (((RmtRec&amp;0XFF000000)&gt;&gt;24==(~RmtRec&amp;0X00FF0000)&gt;&gt;16)&amp;&amp;((RmtRec&amp;0X0000FF00)&gt;&gt;8==(~RmtRec&amp;0X000000FF))) check=1;</span></span><br><span class="line"><span class="string">if (check) &#123;add=((RmtRec&amp;0X0000FF00)&gt;&gt;8); printf(&quot;add=%d\r\n&quot;,add);&#125;</span></span><br><span class="line"><span class="string">if (check==0||(RmtSta&amp;0x80)==0)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">RmtCnt=0;</span></span><br><span class="line"><span class="string">RmtSta&amp;=~(0x40);//0(1&lt;=0)00 0000</span></span><br><span class="line"><span class="string">printf(&quot;stop checking&quot;);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">return add;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><h3 id="tim-h"><a href="#tim-h" class="headerlink" title="tim.h"></a>tim.h</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#ifndef __TIM_H__</span></span><br><span class="line"><span class="comment">#define __TIM_H__</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#ifdef __cplusplus</span></span><br><span class="line">extern <span class="string">&quot;C&quot;</span> &#123;</span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"></span><br><span class="line">/* Includes ------------------------------------------------------------------*/</span><br><span class="line"><span class="comment">#include &quot;main.h&quot;</span></span><br><span class="line"></span><br><span class="line">extern TIM_HandleTypeDef htim2;</span><br><span class="line">extern TIM_HandleTypeDef htim5;</span><br><span class="line"></span><br><span class="line">void MX_TIM2_Init(void);</span><br><span class="line">void MX_TIM5_Init(void);</span><br><span class="line"></span><br><span class="line">uint8_t get_radio(void);</span><br><span class="line"></span><br><span class="line"><span class="comment">#ifdef __cplusplus</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#endif /* __TIM_H__ */</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>LED0做指示灯会循环开关。oled会显示按下的按钮cmd编号。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &quot;main.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;tim.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;usart.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;gpio.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#include &quot;LED\BSP_LED.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;OLED\oled.h&quot;</span></span><br><span class="line"></span><br><span class="line">/* USER CODE BEGIN PV */</span><br><span class="line">uint8_t startMessage[]=<span class="string">&quot;start communication \r\n&quot;</span>;</span><br><span class="line">uint8_t aRxBuffer[10];</span><br><span class="line"></span><br><span class="line">void SystemClock_Config(void);</span><br><span class="line"></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */</span><br><span class="line">  HAL_Init();</span><br><span class="line"></span><br><span class="line">  /* Configure the system clock */</span><br><span class="line">  SystemClock_Config();</span><br><span class="line"></span><br><span class="line">LED_Init();</span><br><span class="line">OLED_Init();</span><br><span class="line"></span><br><span class="line">  /* Initialize all configured peripherals */</span><br><span class="line">  MX_GPIO_Init();</span><br><span class="line">  MX_TIM2_Init();</span><br><span class="line">  MX_USART1_UART_Init();</span><br><span class="line">  MX_TIM5_Init();</span><br><span class="line">OLED_ShowString(0,0,<span class="string">&quot;Ray test&quot;</span>,24);</span><br><span class="line">OLED_ShowString(0,32,<span class="string">&quot;address=000&quot;</span>,16);</span><br><span class="line"></span><br><span class="line">OLED_Refresh_Gram();</span><br><span class="line"></span><br><span class="line">  /* Infinite loop */</span><br><span class="line">uint8_t radio_num=0;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (1)</span><br><span class="line">  &#123;</span><br><span class="line">radio_num=get_radio();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (radio_num)</span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowNum(64,32,radio_num,3,16);</span><br><span class="line">OLED_Refresh_Gram();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">HAL_Delay(10);</span><br><span class="line">radio_num=0;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32 ADC</title>
      <link href="/STM32/STM32-ADC-a3f09d1360b4/"/>
      <url>/STM32/STM32-ADC-a3f09d1360b4/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>将模电数据转换为数字信号后传输，一般返回12位数据，可用unit16_t接收数据。返回值最大4096，可通过（Voltage=value*3.3/4096）得到最大3.3v的结果。尽量不要测量大于3.3v的电压以防止烧坏ADC。</p><span id="more"></span><h2 id="ADC"><a href="#ADC" class="headerlink" title="ADC"></a>ADC</h2><p>选择ADC1，IN1，选中PA1端口。</p><p>Mode：indepandent mode 每个端口只会有一个测量通道</p><p>Data Alignment: 向左对其或向右对其，只要对应即可</p><p>注意：如果用中断实现的话adc初始化必须在tim初始化之前，不然会在中断里卡死。</p><h3 id="adc-c"><a href="#adc-c" class="headerlink" title="adc.c"></a>adc.c</h3><p>不需要改任何东西，生成就能用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &quot;adc.h&quot;</span></span><br><span class="line"></span><br><span class="line">ADC_HandleTypeDef hadc1;</span><br><span class="line"></span><br><span class="line">void MX_ADC1_Init(void)</span><br><span class="line">&#123;</span><br><span class="line">  ADC_ChannelConfTypeDef sConfig = &#123;0&#125;;</span><br><span class="line">  hadc1.Instance = ADC1;</span><br><span class="line">  hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;</span><br><span class="line">  hadc1.Init.ContinuousConvMode = DISABLE;</span><br><span class="line">  hadc1.Init.DiscontinuousConvMode = DISABLE;</span><br><span class="line">  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;</span><br><span class="line">  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;</span><br><span class="line">  hadc1.Init.NbrOfConversion = 1;</span><br><span class="line">  <span class="keyword">if</span> (HAL_ADC_Init(&amp;hadc1) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  sConfig.Channel = ADC_CHANNEL_1;</span><br><span class="line">  sConfig.Rank = ADC_REGULAR_RANK_1;</span><br><span class="line">  sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;</span><br><span class="line">  <span class="keyword">if</span> (HAL_ADC_ConfigChannel(&amp;hadc1, &amp;sConfig) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  GPIO_InitTypeDef GPIO_InitStruct = &#123;0&#125;;</span><br><span class="line">  <span class="keyword">if</span>(adcHandle-&gt;Instance==ADC1)</span><br><span class="line">  &#123;</span><br><span class="line">    __HAL_RCC_ADC1_CLK_ENABLE();</span><br><span class="line"></span><br><span class="line">    __HAL_RCC_GPIOA_CLK_ENABLE();</span><br><span class="line"></span><br><span class="line">    GPIO_InitStruct.Pin = GPIO_PIN_1;</span><br><span class="line">    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;</span><br><span class="line">    HAL_GPIO_Init(GPIOA, &amp;GPIO_InitStruct);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(adcHandle-&gt;Instance==ADC1)</span><br><span class="line">  &#123;</span><br><span class="line">    __HAL_RCC_ADC1_CLK_DISABLE();</span><br><span class="line"></span><br><span class="line">    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="adc-h"><a href="#adc-h" class="headerlink" title="adc.h"></a>adc.h</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#ifndef __ADC_H__</span></span><br><span class="line"><span class="comment">#define __ADC_H__</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#ifdef __cplusplus</span></span><br><span class="line">extern <span class="string">&quot;C&quot;</span> &#123;</span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"></span><br><span class="line">/* Includes ------------------------------------------------------------------*/</span><br><span class="line"><span class="comment">#include &quot;main.h&quot;</span></span><br><span class="line"></span><br><span class="line">extern ADC_HandleTypeDef hadc1;</span><br><span class="line"></span><br><span class="line">void MX_ADC1_Init(void);</span><br><span class="line"></span><br><span class="line"><span class="comment">#ifdef __cplusplus</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#endif /* __ADC_H__ */</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>加入oled.h来实时显示数值。会实时显示PA1处电压。</p><p>HAL_ADC_Start(&amp;hadc1)； 打开adc</p><p>HAL_ADC_PollForConversion(&amp;hadc1, 0xFF); 等待读取完成</p><p>adc_value=HAL_ADC_GetValue(&amp;hadc1); 读数据</p><p>HAL_ADC_Stop(&amp;hadc1); 关闭</p><p>需注意有时候显示上一个时段数据却误以为是最新数据，需仔细分析时序逻辑。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &quot;main.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;adc.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;gpio.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#include &quot;LED\BSP_LED.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;OLED\oled.h&quot;</span></span><br><span class="line"></span><br><span class="line">uint8_t startMessage[]=<span class="string">&quot;start communication \r\n&quot;</span>;</span><br><span class="line">uint8_t aRxBuffer[10];</span><br><span class="line"></span><br><span class="line">void SystemClock_Config(void);</span><br><span class="line"></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">uint16_t adc_value=0;</span><br><span class="line"><span class="built_in">float</span> adc_cal=0.0;</span><br><span class="line"></span><br><span class="line">   HAL_Init();</span><br><span class="line"></span><br><span class="line">  SystemClock_Config();</span><br><span class="line"></span><br><span class="line">LED_Init();</span><br><span class="line">OLED_Init();</span><br><span class="line"></span><br><span class="line">  MX_GPIO_Init();</span><br><span class="line">  MX_ADC1_Init();</span><br><span class="line"></span><br><span class="line">OLED_ShowString(0,0,<span class="string">&quot;ADC test&quot;</span>,24);</span><br><span class="line">OLED_ShowString(0,32,<span class="string">&quot;adc=0000&quot;</span>,16);</span><br><span class="line">OLED_ShowString(0,48,<span class="string">&quot;adc/3.3V=0.000&quot;</span>,16);</span><br><span class="line">OLED_Refresh_Gram();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (1)</span><br><span class="line">  &#123;</span><br><span class="line">LED_switch(LED0);</span><br><span class="line">HAL_Delay(500);</span><br><span class="line"></span><br><span class="line">HAL_ADC_Start(&amp;hadc1);</span><br><span class="line">HAL_ADC_PollForConversion(&amp;hadc1, 0xFF);</span><br><span class="line">adc_value=HAL_ADC_GetValue(&amp;hadc1);</span><br><span class="line">adc_cal=(<span class="built_in">float</span>)adc_value*3.3/4096;</span><br><span class="line">OLED_ShowNum(32,32,adc_value,4,16);</span><br><span class="line">OLED_ShowNum(72,48,(uint16_t)adc_cal,1,16);</span><br><span class="line">OLED_ShowNum(88,48,(uint16_t)((adc_cal-(uint16_t)adc_cal)*1000),3,16);</span><br><span class="line">HAL_ADC_Stop(&amp;hadc1);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">OLED_Refresh_Gram();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="内置温度测量器"><a href="#内置温度测量器" class="headerlink" title="内置温度测量器"></a>内置温度测量器</h2><p>STM32F10系列有内部温度计可以通过内部通道测量。在adc中选择Temperature（或者应该是IN16）开启。</p><p>公式：T=(V25-Vout)/Avg_Slop(V)+25</p><p>数据可在datasheet 113页看到。通常V25=1.43V，Avg_Slop=0.0043V/°C</p><p>刚开板子会出现小于10°的情况，放太阳下照照就上来了。</p>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32 OLED(SSD1306)</title>
      <link href="/STM32/STM32-OLED-SSD1306-39011672d22e/"/>
      <url>/STM32/STM32-OLED-SSD1306-39011672d22e/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>此运用的硬件是ATK 096 OLED，基于SSD1306的OLED。这里的driver全复制于原子科技的例码。</p><p>注意：每次设置完内容后必须加上（OLED_Refresh_Gram();）刷新。</p><span id="more"></span><h3 id="oled-c"><a href="#oled-c" class="headerlink" title="oled.c"></a>oled.c</h3><p>CS：拉低时开始片选oled<br>WR：写入数据<br>RD：读取数据<br>D[7:0]：数据位<br>RST：复位<br>DC：0为命令位，1为数据位</p><p>以写入命令为例：DC（RS）位拉低，CS拉低，WR拉低开始读取D[7:0]数据，然后再全部拉高完成。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &quot;oled.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;stdlib.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;delay.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;oledfont.h&quot;</span></span><br><span class="line"> </span><br><span class="line">//刷新屏幕</span><br><span class="line">void OLED_Refresh_Gram(void)</span><br><span class="line">&#123;</span><br><span class="line">u8 i,n;    </span><br><span class="line"><span class="keyword">for</span>(i=0;i&lt;8;i++)  </span><br><span class="line">&#123;  </span><br><span class="line">OLED_WR_Byte (0xb0+i,OLED_CMD); //页数设置</span><br><span class="line">OLED_WR_Byte (0x00,OLED_CMD);//低八位</span><br><span class="line">OLED_WR_Byte (0x10,OLED_CMD);//高八位</span><br><span class="line"><span class="keyword">for</span>(n=0;n&lt;128;n++)OLED_WR_Byte(OLED_GRAM[n][i],OLED_DATA); </span><br><span class="line">&#125;   </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#if OLED_MODE==1 //8080模式</span></span><br><span class="line"> </span><br><span class="line">//cmd=1: data mode, 0: <span class="built_in">command</span> mode</span><br><span class="line">//dat: required data</span><br><span class="line">void OLED_WR_Byte(u8 dat,u8 cmd)</span><br><span class="line">&#123;</span><br><span class="line">DATAOUT(dat);</span><br><span class="line"> OLED_RS=cmd;</span><br><span class="line">OLED_CS=0;</span><br><span class="line">OLED_WR=0;  </span><br><span class="line">OLED_WR=1;   </span><br><span class="line">OLED_CS=1;   </span><br><span class="line">OLED_RS=1;   </span><br><span class="line">&#125;         </span><br><span class="line"><span class="comment">#else //ISP mode</span></span><br><span class="line">void OLED_WR_Byte(u8 dat,u8 cmd)</span><br><span class="line">&#123;</span><br><span class="line">u8 i;  </span><br><span class="line">OLED_RS=cmd;</span><br><span class="line">OLED_CS=0;  </span><br><span class="line"><span class="keyword">for</span>(i=0;i&lt;8;i++)</span><br><span class="line">&#123;  </span><br><span class="line">OLED_SCLK=0;</span><br><span class="line"><span class="keyword">if</span>(dat&amp;0x80)OLED_SDIN=1;</span><br><span class="line"><span class="keyword">else</span> OLED_SDIN=0;</span><br><span class="line">OLED_SCLK=1;</span><br><span class="line">dat&lt;&lt;=1;   </span><br><span class="line">&#125; </span><br><span class="line">OLED_CS=1;  </span><br><span class="line">OLED_RS=1;     </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"></span><br><span class="line">//开启显示    </span><br><span class="line">void OLED_Display_On(void)</span><br><span class="line">&#123;</span><br><span class="line">OLED_WR_Byte(0X8D,OLED_CMD); //设置电荷泵</span><br><span class="line">OLED_WR_Byte(0X14,OLED_CMD); //开启</span><br><span class="line">OLED_WR_Byte(0XAF,OLED_CMD);//开启显示</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//关闭显示</span><br><span class="line">void OLED_Display_Off(void)</span><br><span class="line">&#123;</span><br><span class="line">OLED_WR_Byte(0X8D,OLED_CMD);</span><br><span class="line">OLED_WR_Byte(0X10,OLED_CMD);</span><br><span class="line">OLED_WR_Byte(0XAE,OLED_CMD);</span><br><span class="line">&#125;    </span><br><span class="line"></span><br><span class="line">//清屏  </span><br><span class="line">void OLED_Clear(void)  </span><br><span class="line">&#123;  </span><br><span class="line">u8 i,n;  </span><br><span class="line"><span class="keyword">for</span>(i=0;i&lt;8;i++)<span class="keyword">for</span>(n=0;n&lt;128;n++)OLED_GRAM[n][i]=0X00;  </span><br><span class="line">OLED_Refresh_Gram();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//画点   </span><br><span class="line">//t=1: fill, t=0: unfill</span><br><span class="line">void OLED_DrawPoint(u8 x,u8 y,u8 t)</span><br><span class="line">&#123;</span><br><span class="line">u8 pos,bx,temp=0;</span><br><span class="line"><span class="keyword">if</span>(x&gt;127||y&gt;63)<span class="built_in">return</span>;</span><br><span class="line">pos=7-y/8;</span><br><span class="line">bx=y%8;</span><br><span class="line">temp=1&lt;&lt;(7-bx);</span><br><span class="line"><span class="keyword">if</span>(t)OLED_GRAM[x][pos]|=temp;</span><br><span class="line"><span class="keyword">else</span> OLED_GRAM[x][pos]&amp;=~temp;    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//填块</span><br><span class="line">//t=1: fill, t=0: unfill</span><br><span class="line">void OLED_Fill(u8 x1,u8 y1,u8 x2,u8 y2,u8 dot)  </span><br><span class="line">&#123;  </span><br><span class="line">u8 x,y;  </span><br><span class="line"><span class="keyword">for</span>(x=x1;x&lt;=x2;x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(y=y1;y&lt;=y2;y++)OLED_DrawPoint(x,y,dot);</span><br><span class="line">&#125;    </span><br><span class="line">OLED_Refresh_Gram();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//显示字符</span><br><span class="line">//size=12 or 16 or 24</span><br><span class="line">//mode=1: 正常显示，mode=0: 反向显示</span><br><span class="line">void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 size,u8 mode)</span><br><span class="line">&#123;          </span><br><span class="line">u8 temp,t,t1;</span><br><span class="line">u8 y0=y;</span><br><span class="line">u8 csize=(size/8+((size%8)?1:0))*(size/2);</span><br><span class="line">chr=chr-<span class="string">&#x27; &#x27;</span>; </span><br><span class="line">    <span class="keyword">for</span>(t=0;t&lt;csize;t++)</span><br><span class="line">    &#123;   </span><br><span class="line"><span class="keyword">if</span>(size==12)temp=asc2_1206[chr][t];</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(size==16)temp=asc2_1608[chr][t];</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(size==24)temp=asc2_2412[chr][t];</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">return</span>;</span><br><span class="line">        <span class="keyword">for</span>(t1=0;t1&lt;8;t1++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(temp&amp;0x80)OLED_DrawPoint(x,y,mode);</span><br><span class="line"><span class="keyword">else</span> OLED_DrawPoint(x,y,!mode);</span><br><span class="line">temp&lt;&lt;=1;</span><br><span class="line">y++;</span><br><span class="line"><span class="keyword">if</span>((y-y0)==size)</span><br><span class="line">&#123;</span><br><span class="line">y=y0;</span><br><span class="line">x++;</span><br><span class="line"><span class="built_in">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;   </span><br><span class="line">    &#125;          </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">u32 mypow(u8 m,u8 n)</span><br><span class="line">&#123;</span><br><span class="line">u32 result=1; </span><br><span class="line"><span class="keyword">while</span>(n--)result*=m;    </span><br><span class="line"><span class="built_in">return</span> result;</span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line">//显示数字</span><br><span class="line">//num: 数字（0-429467295）</span><br><span class="line">//len：位数</span><br><span class="line">void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 size)</span><br><span class="line">&#123;         </span><br><span class="line">u8 t,temp;</span><br><span class="line">u8 enshow=0;   </span><br><span class="line"><span class="keyword">for</span>(t=0;t&lt;len;t++)</span><br><span class="line">&#123;</span><br><span class="line">temp=(num/mypow(10,len-t-1))%10;</span><br><span class="line"><span class="keyword">if</span>(enshow==0&amp;&amp;t&lt;(len-1))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(temp==0)</span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowChar(x+(size/2)*t,y,<span class="string">&#x27; &#x27;</span>,size,1);</span><br><span class="line"><span class="built_in">continue</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> enshow=1; </span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"> OLED_ShowChar(x+(size/2)*t,y,temp+<span class="string">&#x27;0&#x27;</span>,size,1); </span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">//打印字符串</span><br><span class="line">void OLED_ShowString(u8 x,u8 y,const u8 *p,u8 size)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span>((*p&lt;=<span class="string">&#x27;~&#x27;</span>)&amp;&amp;(*p&gt;=<span class="string">&#x27; &#x27;</span>))</span><br><span class="line">    &#123;       </span><br><span class="line">        <span class="keyword">if</span>(x&gt;(128-(size/2)))&#123;x=0;y+=size;&#125;</span><br><span class="line">        <span class="keyword">if</span>(y&gt;(64-size))&#123;y=x=0;OLED_Clear();&#125;</span><br><span class="line">        OLED_ShowChar(x,y,*p,size,1); </span><br><span class="line">        x+=size/2;</span><br><span class="line">        p++;</span><br><span class="line">    &#125;  </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">void OLED_Init(void)</span><br><span class="line">&#123;   </span><br><span class="line">    GPIO_InitTypeDef  GPIO_Initure;</span><br><span class="line"></span><br><span class="line">    __HAL_RCC_GPIOB_CLK_ENABLE();   </span><br><span class="line">    __HAL_RCC_GPIOC_CLK_ENABLE();  </span><br><span class="line"></span><br><span class="line"><span class="comment">#if OLED_MODE==1/8080 mode</span></span><br><span class="line"></span><br><span class="line">//PC6,7,8,9  </span><br><span class="line">    GPIO_Initure.Pin=GPIO_PIN_6|GPIO_PIN_7|\</span><br><span class="line"> GPIO_PIN_8|GPIO_PIN_9; </span><br><span class="line">    GPIO_Initure.Mode=GPIO_MODE_OUTPUT_PP;</span><br><span class="line">    GPIO_Initure.Pull=GPIO_PULLUP;  </span><br><span class="line">    GPIO_Initure.Speed=GPIO_SPEED_FREQ_HIGH;</span><br><span class="line">    HAL_GPIO_Init(GPIOC,&amp;GPIO_Initure);   </span><br><span class="line">//PB0-7</span><br><span class="line">    GPIO_Initure.Pin=GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3|\</span><br><span class="line"> GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;        </span><br><span class="line">    HAL_GPIO_Init(GPIOB,&amp;GPIO_Initure);   </span><br><span class="line"></span><br><span class="line">__HAL_AFIO_REMAP_SWJ_DISABLE();</span><br><span class="line"></span><br><span class="line">OLED_WR=1;</span><br><span class="line">  OLED_RD=1; </span><br><span class="line"><span class="comment">#else</span></span><br><span class="line"> </span><br><span class="line">    GPIO_Initure.Pin=GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_7;</span><br><span class="line">    GPIO_Initure.Mode=GPIO_MODE_OUTPUT_PP;</span><br><span class="line">    GPIO_Initure.Pull=GPIO_PULLUP; </span><br><span class="line">    GPIO_Initure.Speed=GPIO_SPEED_FREQ_HIGH;</span><br><span class="line">    HAL_GPIO_Init(GPIOB,&amp;GPIO_Initure); </span><br><span class="line"></span><br><span class="line">    GPIO_Initure.Pin=GPIO_PIN_8|GPIO_PIN_9;</span><br><span class="line">HAL_GPIO_Init(GPIOC,&amp;GPIO_Initure);</span><br><span class="line"></span><br><span class="line">OLED_SDIN=1;</span><br><span class="line">OLED_SCLK=1;</span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line">OLED_CS=1;</span><br><span class="line">OLED_RS=1; </span><br><span class="line">  </span><br><span class="line">OLED_WR_Byte(0xAE,OLED_CMD);</span><br><span class="line">OLED_WR_Byte(0xD5,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(80,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0xA8,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0X3F,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0xD3,OLED_CMD);</span><br><span class="line">OLED_WR_Byte(0X00,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0x40,OLED_CMD);     </span><br><span class="line">OLED_WR_Byte(0x8D,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0x14,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0x20,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0x02,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0xA1,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0xC0,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0xDA,OLED_CMD);</span><br><span class="line">OLED_WR_Byte(0x12,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0x81,OLED_CMD); //亮度</span><br><span class="line">OLED_WR_Byte(0xEF,OLED_CMD); //1-255</span><br><span class="line">OLED_WR_Byte(0xD9,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0xf1,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0xDB,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0x30,OLED_CMD);</span><br><span class="line">OLED_WR_Byte(0xA4,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0xA6,OLED_CMD);        </span><br><span class="line">OLED_WR_Byte(0xAF,OLED_CMD); </span><br><span class="line">OLED_Clear();</span><br><span class="line">&#125;  </span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="oled-h"><a href="#oled-h" class="headerlink" title="oled.h"></a>oled.h</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#ifndef __OLED_H</span></span><br><span class="line"><span class="comment">#define __OLED_H</span></span><br><span class="line"><span class="comment">#include &quot;sys.h&quot;</span></span><br><span class="line"></span><br><span class="line">//0:四线模式</span><br><span class="line">//1:8080模式</span><br><span class="line"><span class="comment">#define OLED_MODE 1</span></span><br><span class="line">      </span><br><span class="line"><span class="comment">#define OLED_CS     PCout(9)</span></span><br><span class="line">//<span class="comment">#define OLED_RST  PGout(15)//已有reset位</span></span><br><span class="line"><span class="comment">#define OLED_RS     PCout(8)</span></span><br><span class="line"><span class="comment">#define OLED_WR     PCout(7)</span></span><br><span class="line"><span class="comment">#define OLED_RD     PCout(6)</span></span><br><span class="line"> </span><br><span class="line">//PB0~7,数据线</span><br><span class="line"><span class="comment">#define DATAOUT(x) GPIOB-&gt;ODR=(GPIOB-&gt;ODR&amp;0xff00)|(x&amp;0x00FF); </span></span><br><span class="line"></span><br><span class="line">//SPI通信</span><br><span class="line"><span class="comment">#define OLED_SCLK   PBout(0)</span></span><br><span class="line"><span class="comment">#define OLED_SDIN   PBout(1)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#define OLED_CMD  0//命令位</span></span><br><span class="line"><span class="comment">#define OLED_DATA 1//数据位</span></span><br><span class="line"></span><br><span class="line">void OLED_WR_Byte(u8 dat,u8 cmd);    </span><br><span class="line">void OLED_Display_On(void);</span><br><span class="line">void OLED_Display_Off(void);</span><br><span class="line">void OLED_Refresh_Gram(void);   </span><br><span class="line">       </span><br><span class="line">void OLED_Init(void);</span><br><span class="line">void OLED_Clear(void);</span><br><span class="line">void OLED_DrawPoint(u8 x,u8 y,u8 t);</span><br><span class="line">void OLED_Fill(u8 x1,u8 y1,u8 x2,u8 y2,u8 dot);</span><br><span class="line">void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 size,u8 mode);</span><br><span class="line">void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 size);</span><br><span class="line">void OLED_ShowString(u8 x,u8 y,const u8 *p,u8 size);</span><br><span class="line"><span class="comment">#endif</span></span><br></pre></td></tr></table></figure><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32 串口通信</title>
      <link href="/STM32/STM32-%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1-f9e2941ae957/"/>
      <url>/STM32/STM32-%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1-f9e2941ae957/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>通过USART和上位或下位机通信。通过schematic diagram可以发现USB转串口接口PA9，PA10正是由USART1控制。这里选择USART1，和上位机电脑进行通信。</p><span id="more"></span><h2 id="非中断通信"><a href="#非中断通信" class="headerlink" title="非中断通信"></a>非中断通信</h2><p>在CUBE MX里选择USART1<br>Mode: Asynchronous<br>Baud Rate: 115200 (只要与接受口一样就行)<br>Word Length: 8 Bits</p><p>生成后只要调用两函数就行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">uint8_t aRxBuffer[10];</span><br><span class="line"></span><br><span class="line">HAL_UART_Receive(&amp;huart1, (uint8_t *)aRxBuffer, 10, 0xffff);</span><br><span class="line">HAL_UART_Transmit(&amp;huart1, (uint8_t *)aRxBuffer, sizeof(aRxBuffer), 0xffff);</span><br></pre></td></tr></table></figure><p>就可以接收上位机信息并发回去。但因为会中断其他所有进程，不灵活，所有基本不用。</p><h2 id="printf-重定向"><a href="#printf-重定向" class="headerlink" title="printf 重定向"></a>printf 重定向</h2><p>可以利用usb转串口将printf里的内容重定向到串口上，显示在上位机里。</p><p>printf函数内部会调用fputc()函数，如果重定义此函数并加入HAL_UART_Transmit函数即可在串口打印。</p><p>在usart.h内添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &quot;stdio.h&quot;</span></span><br></pre></td></tr></table></figure><p>在usart.c内添加从定向函数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#ifdef __GNUC__</span></span><br><span class="line">  /* With GCC/RAISONANCE, small <span class="built_in">printf</span> (option LD Linker-&gt;Libraries-&gt;Small <span class="built_in">printf</span></span><br><span class="line">     <span class="built_in">set</span> to <span class="string">&#x27;Yes&#x27;</span>) calls __io_putchar() */</span><br><span class="line">  <span class="comment">#define PUTCHAR_PROTOTYPE int __io_putchar(int ch)</span></span><br><span class="line"><span class="comment">#else</span></span><br><span class="line">  <span class="comment">#define PUTCHAR_PROTOTYPE int fputc(int ch, FILE *f)</span></span><br><span class="line"><span class="comment">#endif /* __GNUC__ */</span></span><br><span class="line">/**</span><br><span class="line">  * @brief  Retargets the C library <span class="built_in">printf</span> <span class="keyword">function</span> to the USART.</span><br><span class="line">  * @param  None</span><br><span class="line">  * @retval None</span><br><span class="line">  */</span><br><span class="line">PUTCHAR_PROTOTYPE</span><br><span class="line">&#123;</span><br><span class="line">  /* Place your implementation of fputc here */</span><br><span class="line">  /* e.g. write a character to the EVAL_COM1 and Loop until the end of transmission */</span><br><span class="line">  HAL_UART_Transmit(&amp;huart1, (uint8_t *)&amp;ch, 1, 0xFFFF);</span><br><span class="line">  </span><br><span class="line">  <span class="built_in">return</span> ch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：如果没选择semiLib库需要在usart.c内额外添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">void _sys_exit(int x)</span><br><span class="line">&#123;</span><br><span class="line">    x = x;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">void _ttywrch(int x)</span><br><span class="line">&#123;</span><br><span class="line">    x = x;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">struct __FILE</span><br><span class="line">&#123;</span><br><span class="line">    int handle;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line">FILE __stdout;    </span><br></pre></td></tr></table></figure><p>否则程序会在printf函数处卡死。</p><p>现在在主函数输入 printf(“test\r\n”); 即可通讯。</p><h2 id="中断通信"><a href="#中断通信" class="headerlink" title="中断通信"></a>中断通信</h2><p>生成代码时在NVIC enable通道设置优先级。由于暂不清楚项目中通信的流程顾先放过，之后熟悉了再来完善。</p>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32 中断</title>
      <link href="/STM32/STM32-%E4%B8%AD%E6%96%AD-acfed473a8b2/"/>
      <url>/STM32/STM32-%E4%B8%AD%E6%96%AD-acfed473a8b2/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>此文会记录stm32中外部中断和定时器中断的使用方法及注意事项。中断可以一定程度上模拟计算机中的多线程进程，但需要特别注意优先级问题（特别是HAL_DELAY函数优先级冲突导致的卡死问题）。</p><span id="more"></span><h2 id="外部中断"><a href="#外部中断" class="headerlink" title="外部中断"></a>外部中断</h2><p>可通过外部按钮，IO口等外部控制中断。</p><h3 id="EXTI-c"><a href="#EXTI-c" class="headerlink" title="EXTI.c"></a>EXTI.c</h3><p>选择IO口后选择”GPIO_EXTIx”,根据端点情况GPIP mode选rising edge或falling edge。进入NVIC enable对应通道，设置优先级后生成代码。</p><p>完成后加入”void EXTIx_IRQHandler(void)”函数（注意EXTI0会在system文件中重复定义，注销掉即可），”void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)”函数，这两个函数名是确定的，不能改变。注意不要使用HAL_DELAY函数，解决方法之后有机会去研究下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &quot;EXIT\BSP_EXTI.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#include &quot;KEY\BSP_KEY.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;LED\BSP_LED.h&quot;</span></span><br><span class="line"></span><br><span class="line">/** Configure pins as</span><br><span class="line">        * Analog</span><br><span class="line">        * Input</span><br><span class="line">        * Output</span><br><span class="line">        * EVENT_OUT</span><br><span class="line">        * EXTI</span><br><span class="line">*/</span><br><span class="line">void EXTI_Init(void)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  GPIO_InitTypeDef GPIO_InitStruct = &#123;0&#125;;</span><br><span class="line"></span><br><span class="line">  /* GPIO Ports Clock Enable */</span><br><span class="line">  __HAL_RCC_GPIOD_CLK_ENABLE();</span><br><span class="line">  __HAL_RCC_GPIOA_CLK_ENABLE();</span><br><span class="line"></span><br><span class="line">  /*Configure GPIO pin : PA0 */</span><br><span class="line">  GPIO_InitStruct.Pin = GPIO_PIN_0;</span><br><span class="line">  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;</span><br><span class="line">  GPIO_InitStruct.Pull = GPIO_PULLDOWN;</span><br><span class="line">  HAL_GPIO_Init(GPIOA, &amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line">  /* EXTI interrupt init*/</span><br><span class="line">  HAL_NVIC_SetPriority(EXTI0_IRQn, 2, 0);</span><br><span class="line">  HAL_NVIC_EnableIRQ(EXTI0_IRQn);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void EXTI0_IRQHandler(void)</span><br><span class="line">&#123;</span><br><span class="line">HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)</span><br><span class="line">&#123;</span><br><span class="line">    //HAL_Delay(100); //!!! dont use it !!!</span><br><span class="line">    switch(GPIO_Pin)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> GPIO_PIN_0:</span><br><span class="line"><span class="keyword">if</span>(WK_UP==1)&#123;</span><br><span class="line">LED_switch(LED0);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="EXTI-h"><a href="#EXTI-h" class="headerlink" title="EXTI.h"></a>EXTI.h</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#ifndef __BSP_EXTI_H__</span></span><br><span class="line"><span class="comment">#define __BSP_EXTI_H__</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#ifdef __cplusplus</span></span><br><span class="line">extern <span class="string">&quot;C&quot;</span> &#123;</span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"></span><br><span class="line">/* Includes ------------------------------------------------------------------*/</span><br><span class="line"><span class="comment">#include &quot;main.h&quot;</span></span><br><span class="line"></span><br><span class="line">void EXTI_Init(void);</span><br><span class="line"></span><br><span class="line"><span class="comment">#ifdef __cplusplus</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"><span class="comment">#endif /*__BSP_EXTI_H__ */</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>按下WK_UP按钮会变换LED0状态。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &quot;main.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#include &quot;KEY\BSP_KEY.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;LED\BSP_LED.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;EXTI\BSP_EXTI.h&quot;</span></span><br><span class="line"></span><br><span class="line">void SystemClock_Config(void);</span><br><span class="line"></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">   HAL_Init();</span><br><span class="line"></span><br><span class="line">  SystemClock_Config();</span><br><span class="line"></span><br><span class="line">  EXTI_Init();</span><br><span class="line">  LED_Init();</span><br><span class="line">  KEY_Init();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (1)</span><br><span class="line">  &#123;</span><br><span class="line">HAL_Delay(500);</span><br><span class="line">LED_switch(LED1);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="定时器中断"><a href="#定时器中断" class="headerlink" title="定时器中断"></a>定时器中断</h2><p>通过内部计时定时中断。</p><p>在Cube MX选择定时器（TIM2为例）,<br>Clock Source: Internal Clock<br>Prescaler: 7200-1<br>Counter Period: 5000-1<br>auto-reload preload: Enable (important)<br>(Tout=((arr+1)<em>(psc+1))<em>Tclk)=(5000</em>7200)</em>(1/72Mhz)=0.5s,会每隔500ms中断下循环。但现实却有细微误差，和HAL_DELAY(500)同时运行会发现频率有细微差别，初步估计是内部语句运行误差。</p><p>别忘记在NVIC中enable interrupt并设定优先级。</p><h3 id="tim-c"><a href="#tim-c" class="headerlink" title="tim.c"></a>tim.c</h3><p>需自行加上（void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)）回调函数，同时在initialization函数末尾加上（HAL_TIM_Base_Start_IT(&amp;htim2);）开启计时器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &quot;tim.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#include &quot;LED\BSP_LED.h&quot;</span></span><br><span class="line"></span><br><span class="line">TIM_HandleTypeDef htim2;</span><br><span class="line"></span><br><span class="line">/* TIM2 init <span class="keyword">function</span> */</span><br><span class="line">void MX_TIM2_Init(void)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  TIM_ClockConfigTypeDef sClockSourceConfig = &#123;0&#125;;</span><br><span class="line">  TIM_MasterConfigTypeDef sMasterConfig = &#123;0&#125;;</span><br><span class="line"></span><br><span class="line">  htim2.Instance = TIM2;</span><br><span class="line">  htim2.Init.Prescaler = 7200-1;</span><br><span class="line">  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;</span><br><span class="line">  htim2.Init.Period = 5000-1;</span><br><span class="line">  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;</span><br><span class="line">  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIM_Base_Init(&amp;htim2) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIM_ConfigClockSource(&amp;htim2, &amp;sClockSourceConfig) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;</span><br><span class="line">  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIMEx_MasterConfigSynchronization(&amp;htim2, &amp;sMasterConfig) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">HAL_TIM_Base_Start_IT(&amp;htim2);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(tim_baseHandle-&gt;Instance==TIM2)</span><br><span class="line">  &#123;</span><br><span class="line">    /* TIM2 clock <span class="built_in">enable</span> */</span><br><span class="line">    __HAL_RCC_TIM2_CLK_ENABLE();</span><br><span class="line"></span><br><span class="line">    /* TIM2 interrupt Init */</span><br><span class="line">    HAL_NVIC_SetPriority(TIM2_IRQn, 2, 0);</span><br><span class="line">    HAL_NVIC_EnableIRQ(TIM2_IRQn);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(tim_baseHandle-&gt;Instance==TIM2)</span><br><span class="line">  &#123;</span><br><span class="line">    /* Peripheral clock <span class="built_in">disable</span> */</span><br><span class="line">    __HAL_RCC_TIM2_CLK_DISABLE();</span><br><span class="line"></span><br><span class="line">    /* TIM2 interrupt Deinit */</span><br><span class="line">    HAL_NVIC_DisableIRQ(TIM2_IRQn);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(htim==(&amp;htim2))</span><br><span class="line">    &#123;</span><br><span class="line">        LED_switch(LED0);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="tim-h"><a href="#tim-h" class="headerlink" title="tim.h"></a>tim.h</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#ifndef __TIM_H__</span></span><br><span class="line"><span class="comment">#define __TIM_H__</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#ifdef __cplusplus</span></span><br><span class="line">extern <span class="string">&quot;C&quot;</span> &#123;</span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"></span><br><span class="line">/* Includes ------------------------------------------------------------------*/</span><br><span class="line"><span class="comment">#include &quot;main.h&quot;</span></span><br><span class="line"></span><br><span class="line">extern TIM_HandleTypeDef htim2;</span><br><span class="line"></span><br><span class="line">void MX_TIM2_Init(void);</span><br><span class="line"></span><br><span class="line"><span class="comment">#ifdef __cplusplus</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#endif /* __TIM_H__ */</span></span><br></pre></td></tr></table></figure><h3 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h3><p>LED0和LED1会同时闪烁，LED0为定时器中断控制。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &quot;main.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;tim.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;gpio.h&quot;</span></span><br><span class="line"></span><br><span class="line">/* Private includes ----------------------------------------------------------*/</span><br><span class="line"><span class="comment">#include &quot;LED\BSP_LED.h&quot;</span></span><br><span class="line"></span><br><span class="line">/* Private typedef -----------------------------------------------------------*/</span><br><span class="line">void SystemClock_Config(void);</span><br><span class="line"></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  /* MCU Configuration--------------------------------------------------------*/</span><br><span class="line"></span><br><span class="line">  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */</span><br><span class="line">  HAL_Init();</span><br><span class="line"></span><br><span class="line">  /* Configure the system clock */</span><br><span class="line">  SystemClock_Config();</span><br><span class="line"></span><br><span class="line">  /* Initialize all configured peripherals */</span><br><span class="line">  MX_GPIO_Init();</span><br><span class="line">  MX_TIM2_Init();</span><br><span class="line">LED_Init();</span><br><span class="line"></span><br><span class="line">  /* Infinite loop */</span><br><span class="line">  <span class="keyword">while</span> (1)</span><br><span class="line">  &#123;</span><br><span class="line">HAL_Delay(500);</span><br><span class="line">LED_switch(LED1);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32 PWM设置</title>
      <link href="/STM32/STM32-PWM%E8%AE%BE%E7%BD%AE-2415bde2d729/"/>
      <url>/STM32/STM32-PWM%E8%AE%BE%E7%BD%AE-2415bde2d729/</url>
      
        <content type="html"><![CDATA[<h2 id="PWM"><a href="#PWM" class="headerlink" title="PWM"></a>PWM</h2><p>通过控制方波中低平信号长度来控制LED亮度或电机速度。</p><span id="more"></span><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>Timers内选择一个定时器（以TIM1为例）。Clock Source选择Internal Clock, 选择一个Channel（例如Channel 1）选择PWM Generation CH1, 这时PA8就被选定，我们可以用LED0测试PWM效果了</p><p>Prescaler: 72-1<br>Period: 1000-1<br>Pulse: 500</p><p>这样frequency大致为1000hz（PWMf=TIMf/(prescaler+1)*(Period+1)）</p><h3 id="PWM-c"><a href="#PWM-c" class="headerlink" title="PWM.c"></a>PWM.c</h3><p>需自行加入TIM_SetTIM1Compare函数，更改CCR值。<br>在Init函数结尾加上 HAL_TIM_PWM_Start(&amp;htim1, TIM_CHANNEL_1); 开启pwm</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br></pre></td><td class="code"><pre><span class="line">//TIM1 channel 1, works on PA8</span><br><span class="line">//default psc=72-1, arr=1000-1, pulse=500(almost 50%) </span><br><span class="line">//<span class="keyword">in</span> this <span class="keyword">case</span> the frequency is 1000hz</span><br><span class="line"></span><br><span class="line"><span class="comment">#include &quot;PWM\BSP_PWM.h&quot;</span></span><br><span class="line"></span><br><span class="line">/* USER CODE BEGIN 0 */</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/* USER CODE END 0 */</span><br><span class="line"></span><br><span class="line">TIM_HandleTypeDef htim1;</span><br><span class="line"></span><br><span class="line">/* TIM1 init <span class="keyword">function</span> */</span><br><span class="line">void MX_TIM1_Init(void)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  /* USER CODE BEGIN TIM1_Init 0 */</span><br><span class="line">  /* USER CODE END TIM1_Init 0 */</span><br><span class="line"></span><br><span class="line">  TIM_MasterConfigTypeDef sMasterConfig = &#123;0&#125;;</span><br><span class="line">  TIM_OC_InitTypeDef sConfigOC = &#123;0&#125;;</span><br><span class="line">  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = &#123;0&#125;;</span><br><span class="line"></span><br><span class="line">  /* USER CODE BEGIN TIM1_Init 1 */</span><br><span class="line"></span><br><span class="line">  /* USER CODE END TIM1_Init 1 */</span><br><span class="line">  htim1.Instance = TIM1;</span><br><span class="line">  htim1.Init.Prescaler = 72-1;</span><br><span class="line">  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;</span><br><span class="line">  htim1.Init.Period = 1000-1;</span><br><span class="line">  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;</span><br><span class="line">  htim1.Init.RepetitionCounter = 0;</span><br><span class="line">  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIM_PWM_Init(&amp;htim1) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;</span><br><span class="line">  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIMEx_MasterConfigSynchronization(&amp;htim1, &amp;sMasterConfig) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  sConfigOC.OCMode = TIM_OCMODE_PWM1;</span><br><span class="line">  sConfigOC.Pulse = 500;</span><br><span class="line">  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;</span><br><span class="line">  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;</span><br><span class="line">  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;</span><br><span class="line">  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;</span><br><span class="line">  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIM_PWM_ConfigChannel(&amp;htim1, &amp;sConfigOC, TIM_CHANNEL_1) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;</span><br><span class="line">  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;</span><br><span class="line">  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;</span><br><span class="line">  sBreakDeadTimeConfig.DeadTime = 0;</span><br><span class="line">  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;</span><br><span class="line">  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;</span><br><span class="line">  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIMEx_ConfigBreakDeadTime(&amp;htim1, &amp;sBreakDeadTimeConfig) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  /* USER CODE BEGIN TIM1_Init 2 */</span><br><span class="line"></span><br><span class="line">  /* USER CODE END TIM1_Init 2 */</span><br><span class="line">  HAL_TIM_MspPostInit(&amp;htim1);</span><br><span class="line">HAL_TIM_PWM_Start(&amp;htim1, TIM_CHANNEL_1);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* tim_pwmHandle)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(tim_pwmHandle-&gt;Instance==TIM1)</span><br><span class="line">  &#123;</span><br><span class="line">  /* USER CODE BEGIN TIM1_MspInit 0 */</span><br><span class="line"></span><br><span class="line">  /* USER CODE END TIM1_MspInit 0 */</span><br><span class="line">    /* TIM1 clock <span class="built_in">enable</span> */</span><br><span class="line">    __HAL_RCC_TIM1_CLK_ENABLE();</span><br><span class="line">  /* USER CODE BEGIN TIM1_MspInit 1 */</span><br><span class="line"></span><br><span class="line">  /* USER CODE END TIM1_MspInit 1 */</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  GPIO_InitTypeDef GPIO_InitStruct = &#123;0&#125;;</span><br><span class="line">  <span class="keyword">if</span>(timHandle-&gt;Instance==TIM1)</span><br><span class="line">  &#123;</span><br><span class="line">  /* USER CODE BEGIN TIM1_MspPostInit 0 */</span><br><span class="line"></span><br><span class="line">  /* USER CODE END TIM1_MspPostInit 0 */</span><br><span class="line"></span><br><span class="line">    __HAL_RCC_GPIOA_CLK_ENABLE();</span><br><span class="line">    /**TIM1 GPIO Configuration</span><br><span class="line">    PA8     ------&gt; TIM1_CH1</span><br><span class="line">    */</span><br><span class="line">    GPIO_InitStruct.Pin = GPIO_PIN_8;</span><br><span class="line">    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;</span><br><span class="line">    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;</span><br><span class="line">    HAL_GPIO_Init(GPIOA, &amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line">  /* USER CODE BEGIN TIM1_MspPostInit 1 */</span><br><span class="line"></span><br><span class="line">  /* USER CODE END TIM1_MspPostInit 1 */</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void HAL_TIM_PWM_MspDeInit(TIM_HandleTypeDef* tim_pwmHandle)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(tim_pwmHandle-&gt;Instance==TIM1)</span><br><span class="line">  &#123;</span><br><span class="line">  /* USER CODE BEGIN TIM1_MspDeInit 0 */</span><br><span class="line"></span><br><span class="line">  /* USER CODE END TIM1_MspDeInit 0 */</span><br><span class="line">    /* Peripheral clock <span class="built_in">disable</span> */</span><br><span class="line">    __HAL_RCC_TIM1_CLK_DISABLE();</span><br><span class="line">  /* USER CODE BEGIN TIM1_MspDeInit 1 */</span><br><span class="line"></span><br><span class="line">  /* USER CODE END TIM1_MspDeInit 1 */</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void TIM_SetTIM1Compare(long int compare)</span><br><span class="line">&#123;</span><br><span class="line">TIM1-&gt;CCR1=compare; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void Compare_Value_Setting(void)</span><br><span class="line">&#123;</span><br><span class="line">static uint8_t pwm_compare_state=0;</span><br><span class="line">static long int PWM_COMPARE=0;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (PWM_COMPARE==0) pwm_compare_state=1; </span><br><span class="line"><span class="keyword">if</span> (PWM_COMPARE&gt;htim1.Init.Period) pwm_compare_state=0; </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (pwm_compare_state)&#123;</span><br><span class="line">PWM_COMPARE+=10;</span><br><span class="line">TIM_SetTIM1Compare(PWM_COMPARE);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">PWM_COMPARE-=10;</span><br><span class="line">TIM_SetTIM1Compare(PWM_COMPARE);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="PWM-h"><a href="#PWM-h" class="headerlink" title="PWM.h"></a>PWM.h</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#ifndef __BSP_PWM_H__</span></span><br><span class="line"><span class="comment">#define __BSP_PWM_H__</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#ifdef __cplusplus</span></span><br><span class="line">extern <span class="string">&quot;C&quot;</span> &#123;</span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"></span><br><span class="line">/* Includes ------------------------------------------------------------------*/</span><br><span class="line"><span class="comment">#include &quot;main.h&quot;</span></span><br><span class="line"></span><br><span class="line">/* USER CODE BEGIN Includes */</span><br><span class="line"></span><br><span class="line">/* USER CODE END Includes */</span><br><span class="line"></span><br><span class="line">extern TIM_HandleTypeDef htim1;</span><br><span class="line"></span><br><span class="line">/* USER CODE BEGIN Private defines */</span><br><span class="line"></span><br><span class="line">/* USER CODE END Private defines */</span><br><span class="line"></span><br><span class="line">void MX_TIM1_Init(void);</span><br><span class="line"></span><br><span class="line">void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);</span><br><span class="line"></span><br><span class="line">/* USER CODE BEGIN Prototypes */</span><br><span class="line"></span><br><span class="line">void TIM_SetTIM1Compare(long int compare);</span><br><span class="line"></span><br><span class="line">void Compare_Value_Setting(void);</span><br><span class="line"></span><br><span class="line">/* USER CODE END Prototypes */</span><br><span class="line"></span><br><span class="line"><span class="comment">#ifdef __cplusplus</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>LED0会缓慢变亮又变暗,LED初始化必须在TIM1之前。</p><p>注意： 如果灯长暗或长亮，检查是不是最开channel里没选pwm generation这类。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &quot;main.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;gpio.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#include &quot;PWM\BSP_PWM.h&quot;</span></span><br><span class="line"></span><br><span class="line">void SystemClock_Config(void);</span><br><span class="line"></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">  HAL_Init();</span><br><span class="line"></span><br><span class="line">  SystemClock_Config();</span><br><span class="line"></span><br><span class="line">  MX_GPIO_Init();</span><br><span class="line">  MX_TIM1_Init();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (1)</span><br><span class="line">  &#123;</span><br><span class="line">Compare_Value_Setting();</span><br><span class="line">HAL_Delay(10);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32 点灯/按钮</title>
      <link href="/STM32/STM32-%E7%82%B9%E7%81%AF%E6%8C%89%E9%92%AE-20505a203b7c/"/>
      <url>/STM32/STM32-%E7%82%B9%E7%81%AF%E6%8C%89%E9%92%AE-20505a203b7c/</url>
      
        <content type="html"><![CDATA[<h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h2><p>此系列用于介绍常见STM32外设及使用方法，基于<a href="https://www.st.com/en/development-tools/stm32cubemx.html">STM32CubeMX</a>初始化。</p><span id="more"></span><h2 id="点灯"><a href="#点灯" class="headerlink" title="点灯"></a>点灯</h2><p>直接在GPIO端设置即可，设置推挽输出。</p><h3 id="LED-c"><a href="#LED-c" class="headerlink" title="LED.c"></a>LED.c</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &quot;LED\BSP_LED.h&quot;</span></span><br><span class="line"></span><br><span class="line">//LED0 LED1 initialize</span><br><span class="line">void LED_Init(void)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  GPIO_InitTypeDef GPIO_InitStruct = &#123;0&#125;;</span><br><span class="line"></span><br><span class="line">  /* GPIO Ports Clock Enable */</span><br><span class="line">  __HAL_RCC_GPIOD_CLK_ENABLE();</span><br><span class="line">  __HAL_RCC_GPIOA_CLK_ENABLE();</span><br><span class="line"></span><br><span class="line">  /*Configure GPIO pin Output Level */</span><br><span class="line">  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_SET);</span><br><span class="line"></span><br><span class="line">  /*Configure GPIO pin Output Level */</span><br><span class="line">  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2, GPIO_PIN_SET);</span><br><span class="line"></span><br><span class="line">  /*Configure GPIO pin : PA8 */</span><br><span class="line">  GPIO_InitStruct.Pin = GPIO_PIN_8;</span><br><span class="line">  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;</span><br><span class="line">  GPIO_InitStruct.Pull = GPIO_NOPULL;</span><br><span class="line">  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;</span><br><span class="line">  HAL_GPIO_Init(GPIOA, &amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line">  /*Configure GPIO pin : PD2 */</span><br><span class="line">  GPIO_InitStruct.Pin = GPIO_PIN_2;</span><br><span class="line">  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;</span><br><span class="line">  GPIO_InitStruct.Pull = GPIO_NOPULL;</span><br><span class="line">  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;</span><br><span class="line">  HAL_GPIO_Init(GPIOD, &amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//switching on/off LED</span><br><span class="line">void LED_switch (uint8_t LEDx)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">uint8_t state;</span><br><span class="line"></span><br><span class="line">switch (LEDx)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> LED0:</span><br><span class="line">state=HAL_GPIO_ReadPin(GPIOA,GPIO_PIN_8);</span><br><span class="line"><span class="keyword">if</span> (state) HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_RESET);</span><br><span class="line"><span class="keyword">else</span> HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_SET);</span><br><span class="line"><span class="built_in">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> LED1:</span><br><span class="line">state=HAL_GPIO_ReadPin(GPIOD,GPIO_PIN_2);</span><br><span class="line"><span class="keyword">if</span> (state) HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2, GPIO_PIN_RESET);</span><br><span class="line"><span class="keyword">else</span> HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2, GPIO_PIN_SET);</span><br><span class="line"><span class="built_in">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="LED-h"><a href="#LED-h" class="headerlink" title="LED.h"></a>LED.h</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#ifndef __BSP_LED_H__</span></span><br><span class="line"><span class="comment">#define __BSP_LED_H__</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#include &quot;main.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#define LED0 0</span></span><br><span class="line"><span class="comment">#define LED1 1</span></span><br><span class="line"></span><br><span class="line">void LED_Init(void);</span><br><span class="line">void LED_switch (uint8_t LEDx);</span><br><span class="line"></span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>LED0，LED1 流水灯，交替亮</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#include &quot;main.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;LED/BSP_LED.h&quot;</span></span><br><span class="line"></span><br><span class="line">void SystemClock_Config(void);</span><br><span class="line"></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">  HAL_Init();</span><br><span class="line">  LED_Init();</span><br><span class="line"></span><br><span class="line">  SystemClock_Config();</span><br><span class="line"></span><br><span class="line">  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_SET); //turn off</span><br><span class="line">  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2, GPIO_PIN_RESET); //turn on</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (1)</span><br><span class="line">  &#123;</span><br><span class="line">HAL_Delay(500);</span><br><span class="line">LED_switch (LED0); //switching the state</span><br><span class="line">LED_switch (LED1);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="按键"><a href="#按键" class="headerlink" title="按键"></a>按键</h2><p>三个按键中PA0需设置下拉输出，其他两个PC5,PA15上拉输出</p><h3 id="KEY-c"><a href="#KEY-c" class="headerlink" title="KEY.c"></a>KEY.c</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &quot;KEY\BSP_KEY.h&quot;</span></span><br><span class="line"></span><br><span class="line">void KEY_Init(void)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  GPIO_InitTypeDef GPIO_InitStruct = &#123;0&#125;;</span><br><span class="line"></span><br><span class="line">  /* GPIO Ports Clock Enable */</span><br><span class="line">  __HAL_RCC_GPIOC_CLK_ENABLE();</span><br><span class="line">  __HAL_RCC_GPIOA_CLK_ENABLE();</span><br><span class="line"></span><br><span class="line">/*Configure GPIO pin : PA0 */</span><br><span class="line">GPIO_InitStruct.Pin=GPIO_PIN_0; </span><br><span class="line">  GPIO_InitStruct.Mode=GPIO_MODE_INPUT;</span><br><span class="line">  GPIO_InitStruct.Pull=GPIO_PULLDOWN; </span><br><span class="line">  GPIO_InitStruct.Speed=GPIO_SPEED_FREQ_HIGH;</span><br><span class="line">  HAL_GPIO_Init(GPIOA,&amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line">  /*Configure GPIO pin : PC5 */</span><br><span class="line">  GPIO_InitStruct.Pin = GPIO_PIN_5;</span><br><span class="line">  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;</span><br><span class="line">  GPIO_InitStruct.Pull = GPIO_PULLUP;</span><br><span class="line">  HAL_GPIO_Init(GPIOC, &amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line">  /*Configure GPIO pin : PA15 */</span><br><span class="line">  GPIO_InitStruct.Pin = GPIO_PIN_15;</span><br><span class="line">  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;</span><br><span class="line">  GPIO_InitStruct.Pull = GPIO_PULLUP;</span><br><span class="line">  HAL_GPIO_Init(GPIOA, &amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">uint8_t KEY_Scan(uint8_t mode)</span><br><span class="line">&#123;</span><br><span class="line">    static uint8_t key_up=1;</span><br><span class="line">    <span class="keyword">if</span>(mode==1)key_up=1; </span><br><span class="line">    <span class="keyword">if</span>(key_up&amp;&amp;(KEY0==0||KEY1==0||WK_UP==1))</span><br><span class="line">    &#123;</span><br><span class="line">        HAL_Delay(10);</span><br><span class="line">        key_up=0;</span><br><span class="line">        <span class="keyword">if</span>(KEY0==0)       <span class="built_in">return</span> KEY0_PRES;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(KEY1==0)  <span class="built_in">return</span> KEY1_PRES;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(WK_UP==1) <span class="built_in">return</span> WKUP_PRES;          </span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(KEY0==1&amp;&amp;KEY1==1&amp;&amp;WK_UP==0)key_up=1;</span><br><span class="line">    <span class="built_in">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="KEY-h"><a href="#KEY-h" class="headerlink" title="KEY.h"></a>KEY.h</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#ifndef __BSP_KEY_H__</span></span><br><span class="line"><span class="comment">#define __BSP_KEY_H__</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#include &quot;main.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#define KEY0        HAL_GPIO_ReadPin(GPIOC,GPIO_PIN_5)  //KEY0</span></span><br><span class="line"><span class="comment">#define KEY1        HAL_GPIO_ReadPin(GPIOA,GPIO_PIN_15) //KEY1°</span></span><br><span class="line"><span class="comment">#define WK_UP       HAL_GPIO_ReadPin(GPIOA,GPIO_PIN_0)  //WKUP</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#define KEY0_PRES 1</span></span><br><span class="line"><span class="comment">#define KEY1_PRES2</span></span><br><span class="line"><span class="comment">#define WKUP_PRES   3</span></span><br><span class="line"></span><br><span class="line">void KEY_Init(void);</span><br><span class="line">uint8_t KEY_Scan(uint8_t mode);</span><br><span class="line"></span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h3><p>按key0 LED0变化，key1 LED1变化<br>按WKUP两个都变化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &quot;main.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;gpio.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#include &quot;LED\BSP_LED.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;KEY\BSP_KEY.h&quot;</span></span><br><span class="line"></span><br><span class="line">void SystemClock_Config(void);</span><br><span class="line"></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">  HAL_Init();</span><br><span class="line"></span><br><span class="line">  LED_Init();</span><br><span class="line">  KEY_Init();</span><br><span class="line">  </span><br><span class="line">  SystemClock_Config();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (1)</span><br><span class="line">  &#123;</span><br><span class="line"></span><br><span class="line">switch(KEY_Scan(0))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> KEY0_PRES:</span><br><span class="line">LED_switch(LED0);</span><br><span class="line"><span class="built_in">break</span>;</span><br><span class="line"><span class="keyword">case</span> KEY1_PRES:</span><br><span class="line">LED_switch(LED1);</span><br><span class="line"><span class="built_in">break</span>;</span><br><span class="line"><span class="keyword">case</span> WKUP_PRES:</span><br><span class="line">LED_switch(LED0);</span><br><span class="line">LED_switch(LED1);</span><br><span class="line"><span class="built_in">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MINI STM32 Schematic diagram</title>
      <link href="/STM32/MINI-STM32-Schematic-diagram-208edd9bb4a4/"/>
      <url>/STM32/MINI-STM32-Schematic-diagram-208edd9bb4a4/</url>
      
        <content type="html"><![CDATA[<p>-</p><span id="more"></span><div class="pdf-container" data-target="MiniSTM32_V3.3_SCH.pdf" data-height="500px"></div> ]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 硬件 </tag>
            
            <tag> stm32 </tag>
            
            <tag> PDF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32 DataSheet</title>
      <link href="/STM32/STM32-DataSheet-00cce55e09fc/"/>
      <url>/STM32/STM32-DataSheet-00cce55e09fc/</url>
      
        <content type="html"><![CDATA[<p>-</p><span id="more"></span><p>2.1 Device overview:<br> -performance line block diagram</p><p>table 5:<br> -pin definetitn</p><div class="pdf-container" data-target="stm32f103rc.pdf" data-height="500px"></div> ]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 硬件 </tag>
            
            <tag> stm32 </tag>
            
            <tag> PDF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo个人博客创建引导（三）</title>
      <link href="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%B8%89%EF%BC%89-a191561fb171/"/>
      <url>/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%B8%89%EF%BC%89-a191561fb171/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="插件介绍"><a href="#插件介绍" class="headerlink" title="插件介绍"></a>插件介绍</h2><p>如果一些功能没有包含在主题内或想使用自己的内容，可以在官网的<a href="https://hexo.io/plugins/">插件库</a>内下载使用。一些常用的插件会时不时更新在此页面。</p><span id="more"></span><h2 id="搜索功能插件"><a href="#搜索功能插件" class="headerlink" title="搜索功能插件"></a>搜索功能插件</h2><p>在主要小图标的最右侧增加一个搜索按钮。</p><p>在工程更根目录输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><p>全局配置文件内加入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Search</span></span><br><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  <span class="built_in">limit</span>: 10000</span><br></pre></td></tr></table></figure><p>theme配置文件寻找“Local Search”修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Local Search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/next-theme/hexo-generator-searchdb</span></span><br><span class="line">local_search:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="插入图片插件"><a href="#插入图片插件" class="headerlink" title="插入图片插件"></a>插入图片插件</h2><p>支持在Blog里放入图片。</p><p>在工程更根目录输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure><p>全局配置文件内修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>找到“/node_module/hexo-asset-image/index.js”, 替换内容为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;use strict&#x27;</span>;</span><br><span class="line">var cheerio = require(<span class="string">&#x27;cheerio&#x27;</span>);</span><br><span class="line"></span><br><span class="line">// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string</span><br><span class="line"><span class="keyword">function</span> getPosition(str, m, i) &#123;</span><br><span class="line">  <span class="built_in">return</span> str.split(m, i).join(m).length;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var version = String(hexo.version).split(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">hexo.extend.filter.register(<span class="string">&#x27;after_post_render&#x27;</span>, <span class="keyword">function</span>(data)&#123;</span><br><span class="line">  var config = hexo.config;</span><br><span class="line">  <span class="keyword">if</span>(config.post_asset_folder)&#123;</span><br><span class="line">        var link = data.permalink;</span><br><span class="line">    <span class="keyword">if</span>(version.length &gt; 0 &amp;&amp; Number(version[0]) == 3)</span><br><span class="line">       var beginPos = getPosition(link, <span class="string">&#x27;/&#x27;</span>, 1) + 1;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">       var beginPos = getPosition(link, <span class="string">&#x27;/&#x27;</span>, 3) + 1;</span><br><span class="line">    // In hexo 3.1.1, the permalink of <span class="string">&quot;about&quot;</span> page is like <span class="string">&quot;.../about/index.html&quot;</span>.</span><br><span class="line">    var endPos = link.lastIndexOf(<span class="string">&#x27;/&#x27;</span>) + 1;</span><br><span class="line">    link = link.substring(beginPos, endPos);</span><br><span class="line"></span><br><span class="line">    var toprocess = [<span class="string">&#x27;excerpt&#x27;</span>, <span class="string">&#x27;more&#x27;</span>, <span class="string">&#x27;content&#x27;</span>];</span><br><span class="line">    <span class="keyword">for</span>(var i = 0; i &lt; toprocess.length; i++)&#123;</span><br><span class="line">      var key = toprocess[i];</span><br><span class="line"> </span><br><span class="line">      var $ = cheerio.load(data[key], &#123;</span><br><span class="line">        ignoreWhitespace: <span class="literal">false</span>,</span><br><span class="line">        xmlMode: <span class="literal">false</span>,</span><br><span class="line">        lowerCaseTags: <span class="literal">false</span>,</span><br><span class="line">        decodeEntities: <span class="literal">false</span></span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      $(<span class="string">&#x27;img&#x27;</span>).each(<span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">        <span class="keyword">if</span> ($(this).attr(<span class="string">&#x27;src&#x27;</span>))&#123;</span><br><span class="line">            // For windows style path, we replace <span class="string">&#x27;\&#x27;</span> to <span class="string">&#x27;/&#x27;</span>.</span><br><span class="line">            var src = $(this).attr(<span class="string">&#x27;src&#x27;</span>).replace(<span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">            <span class="keyword">if</span>(!/http[s]*.*|\/\/.*/.<span class="built_in">test</span>(src) &amp;&amp;</span><br><span class="line">               !/^\s*\//.<span class="built_in">test</span>(src)) &#123;</span><br><span class="line">              // For <span class="string">&quot;about&quot;</span> page, the first part of <span class="string">&quot;src&quot;</span> can<span class="string">&#x27;t be removed.</span></span><br><span class="line"><span class="string">              // In addition, to support multi-level local directory.</span></span><br><span class="line"><span class="string">              var linkArray = link.split(&#x27;</span>/<span class="string">&#x27;).filter(function(elem)&#123;</span></span><br><span class="line"><span class="string">                return elem != &#x27;</span><span class="string">&#x27;;</span></span><br><span class="line"><span class="string">              &#125;);</span></span><br><span class="line"><span class="string">              var srcArray = src.split(&#x27;</span>/<span class="string">&#x27;).filter(function(elem)&#123;</span></span><br><span class="line"><span class="string">                return elem != &#x27;</span><span class="string">&#x27; &amp;&amp; elem != &#x27;</span>.<span class="string">&#x27;;</span></span><br><span class="line"><span class="string">              &#125;);</span></span><br><span class="line"><span class="string">              if(srcArray.length &gt; 1)</span></span><br><span class="line"><span class="string">                srcArray.shift();</span></span><br><span class="line"><span class="string">              src = srcArray.join(&#x27;</span>/<span class="string">&#x27;);</span></span><br><span class="line"><span class="string">              $(this).attr(&#x27;</span>src<span class="string">&#x27;, config.root + link + src);</span></span><br><span class="line"><span class="string">              console.info&amp;&amp;console.info(&quot;update link as:--&gt;&quot;+config.root + link + src);</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">        &#125;else&#123;</span></span><br><span class="line"><span class="string">            console.info&amp;&amp;console.info(&quot;no src attr, skipped...&quot;);</span></span><br><span class="line"><span class="string">            console.info&amp;&amp;console.info($(this));</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;);</span></span><br><span class="line"><span class="string">      data[key] = $.html();</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">&#125;);</span></span><br></pre></td></tr></table></figure><p><a href="https://blog.csnd.net/xjm850552586">原地址在此</a>，赞美大佬！</p><p>之后每次新建new page都会额外生成一个同名文件夹，把需要的图片放进去后在.md文件内输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![ImageDescription](ImageName.npg)</span><br></pre></td></tr></table></figure><p>就可以显示图片了。</p><h2 id="插入本地音乐播放器"><a href="#插入本地音乐播放器" class="headerlink" title="插入本地音乐播放器"></a>插入本地音乐播放器</h2><p>(<a href="https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md#%E6%92%AD%E6%94%BE%E5%88%97%E8%A1%A8">https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md#%E6%92%AD%E6%94%BE%E5%88%97%E8%A1%A8</a>)<br>支持在Blog里放入音乐。</p><p>在工程更根目录输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-tag-aplayer</span><br></pre></td></tr></table></figure><p>全局配置文件内修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>在.md文件内输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayer title author url [picture_url, narrow, autoplay, width:xxx, lrc:xxx] %&#125;</span><br></pre></td></tr></table></figure><p>例如</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayer <span class="string">&quot;Caffeine&quot;</span> <span class="string">&quot;Jeff Williams&quot;</span> <span class="string">&quot;caffeine.mp3&quot;</span> <span class="string">&quot;picture.jpg&quot;</span> <span class="string">&quot;lrc:caffeine.txt&quot;</span> %&#125;</span><br></pre></td></tr></table></figure><h2 id="文章密码插件"><a href="#文章密码插件" class="headerlink" title="文章密码插件"></a>文章密码插件</h2><p>如果想加密某些文件，可以添加这个插件。</p><p>下载plugin</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-blog-encrypt</span><br></pre></td></tr></table></figure><p>在根目录配置文件添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Security</span></span><br><span class="line">encrypt: <span class="comment"># hexo-blog-encrypt</span></span><br><span class="line">  abstract: Here<span class="string">&#x27;s something encrypted, password is required to continue reading.</span></span><br><span class="line"><span class="string">  message: Hey, password is required here.</span></span><br><span class="line"><span class="string">  tags:</span></span><br><span class="line"><span class="string">  - &#123;name: encryptAsDiary, password: passwordA&#125;</span></span><br><span class="line"><span class="string">  - &#123;name: encryptAsTips, password: passwordB&#125;</span></span><br><span class="line"><span class="string">  theme: up</span></span><br><span class="line"><span class="string">  wrong_pass_message: Oh, this is an invalid password. Check and try again, please.</span></span><br><span class="line"><span class="string">  wrong_hash_message: Oh, these decrypted content cannot be verified, but you can still have a look.</span></span><br></pre></td></tr></table></figure><p>theme: 密码输入界面样式，可查看<a href="https://mhexo.github.io/2020/12/23/Theme-Test-Default/">作者实例</a>。</p><p>之后只要在文章配置内加入password</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: Hello World</span><br><span class="line">date: 2020-03-13 21:12:21</span><br><span class="line">password: hello</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>文章底有encrypt again按钮，可重置密码记忆记录。</p><h2 id="插入PDF插件"><a href="#插入PDF插件" class="headerlink" title="插入PDF插件"></a>插入PDF插件</h2><p>可以插入一个pdf阅读框</p><p>下载plugin</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install --save hexo-pdf</span><br></pre></td></tr></table></figure><p>打开hexo configuration，修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># PDF tag</span></span><br><span class="line"><span class="comment"># NexT will try to load pdf files natively, if failed, pdf.js will be used.</span></span><br><span class="line"><span class="comment"># So, you have to install the dependency of pdf.js if you want to use pdf tag and make it available to all browsers.</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/next-theme/theme-next-pdf</span></span><br><span class="line">pdf:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Default height</span></span><br><span class="line">  height: 500px</span><br></pre></td></tr></table></figure><p>如果需要插入pdf，在.md同目录新建一个同名文件夹，放入pdf文件，输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% pdf  pfdName.pdf %&#125; </span><br></pre></td></tr></table></figure><p>插入PDF</p>]]></content>
      
      
      <categories>
          
          <category> Hexo模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo个人博客创建引导——NEXT主题</title>
      <link href="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%E2%80%94%E2%80%94NEXT%E4%B8%BB%E9%A2%98-32547c269389/"/>
      <url>/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%E2%80%94%E2%80%94NEXT%E4%B8%BB%E9%A2%98-32547c269389/</url>
      
        <content type="html"><![CDATA[<h2 id="主题更换"><a href="#主题更换" class="headerlink" title="主题更换"></a>主题更换</h2><p>在hexo官网有<a href="https://hexo.io/themes/">主题下载</a>页面，存储有大量主题。如果需要更换就点击进入主题的github页面，按上面的说明步骤直接clone进自己的文件夹就行。下载的文件可以在根目录下的\themes里找到。</p><span id="more"></span><p>打开根目录的_config.yml文件，搜索Extensions</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line">theme: next</span><br></pre></td></tr></table></figure><p>将最后的theme改为新主题的名字即可，本地的话刷新就更换主题了。</p><p>现在网站使用的是大佬推荐的<a href="https://github.com/next-theme/hexo-theme-next">Next</a>主题，内容设置相对丰富点，页面简约动画也不突兀。由于本人next主题使用的相对多点，这篇基本就记录下next里各个configuration，如果之后使用其他主题的话会另开一篇记录。</p><h2 id="网页设置"><a href="#网页设置" class="headerlink" title="网页设置"></a>网页设置</h2><p>网页设置就是在hexo根目录下的_donfig.yml里的内容，一般下载插件或者更改基础设置时会使用。详细介绍可以找<a href="https://hexo.io/docs/configuration">官方文档</a>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line">title: 朽丶 // 主标题</span><br><span class="line">subtitle: <span class="string">&#x27;个人学习记录&#x27;</span> //副标题</span><br><span class="line">description: <span class="string">&#x27;Personal Learning Technical Blog&#x27;</span> //左边拉框内介绍</span><br><span class="line">keywords:</span><br><span class="line">author: Yang Cen //作者姓名</span><br><span class="line">language: zh-CN //语言设置</span><br><span class="line">timezone: <span class="string">&#x27;&#x27;</span> </span><br></pre></td></tr></table></figure><p>另外可以查找下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">permalink: :title-:<span class="built_in">hash</span>/</span><br></pre></td></tr></table></figure><p>更多模板可以在<a href="https://hexo.io/docs/permalinks">官网</a>找到。</p><h2 id="主题设置"><a href="#主题设置" class="headerlink" title="主题设置"></a>主题设置</h2><p>打开themes文件夹里的正在使用的主题文件夹，会发现里边也有个_config.yml文件，这个就是主题的配置文件。此板块会不定期更新，用来记录下理解的模块。</p><h3 id="Schemes"><a href="#Schemes" class="headerlink" title="Schemes"></a>Schemes</h3><p>Next主题有四个体系</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Schemes</span></span><br><span class="line"><span class="comment">#scheme: Muse</span></span><br><span class="line"><span class="comment">#scheme: Mist</span></span><br><span class="line"><span class="comment">#scheme: Pisces</span></span><br><span class="line">scheme: Gemini</span><br></pre></td></tr></table></figure><p>大体是header，left-side排版的变化，推荐都试试看看那个顺眼。由于只能选择一种体系，所以更换时记得注销掉不需要的内容。</p><h3 id="menu"><a href="#menu" class="headerlink" title="menu"></a>menu</h3><p>位于标题附近的小目录，使用的话直接去掉之前的“#”即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || fa fa-home</span><br><span class="line">  tags: /tags/ || fa fa-tags</span><br><span class="line">  categories: /categories/ || fa fa-th</span><br><span class="line">  archives: /archives/ || fa fa-archive</span><br><span class="line">  about: /about/ || fa fa-user</span><br><span class="line">  <span class="comment">#schedule: /schedule/ || fa fa-calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || fa fa-sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || fa fa-heartbeat</span></span><br></pre></td></tr></table></figure><p>如果全打开效果类似下图<br><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%E2%80%94%E2%80%94NEXT%E4%B8%BB%E9%A2%98-32547c269389/%E7%9B%AE%E5%BD%95%E5%9B%BE%E8%A1%A8.PNG" alt="目录图表.PNG"></p><p>如果开启新板块需要bash里输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page pat_name</span><br></pre></td></tr></table></figure><p>然后前往\source，会发现新建了一个同名文件夹，打开里边的index.md,按这个模板配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line"><span class="built_in">type</span>: <span class="string">&quot;categories&quot;</span></span><br><span class="line">date: 2021-09-07 11:13:54</span><br><span class="line">comments: <span class="literal">false</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>完成后就可以使用这些小图标了。</p><p>基本上archives,categories,tags需要用的多些，这些不用怎么管的，有文章进去自己就会变化计数。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Enable / Disable menu icons / item badges.</span></span><br><span class="line">menu_settings:</span><br><span class="line">  icons: <span class="literal">true</span></span><br><span class="line">  badges: <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>icons: 之前的小图标<br>badges：开启会在每条末尾加一个计数表，显示数量</p><h3 id="Social-Links"><a href="#Social-Links" class="headerlink" title="Social Links"></a>Social Links</h3><p>在side bar增加社交app图标和连接。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Social Links</span></span><br><span class="line"><span class="comment"># Usage: `Key: permalink || icon`</span></span><br><span class="line"><span class="comment"># Key is the link label showing to end users.</span></span><br><span class="line"><span class="comment"># Value before `||` delimiter is the target permalink, value after `||` delimiter is the name of Font Awesome icon.</span></span><br><span class="line">social:</span><br><span class="line">  GitHub: https://github.com/ycen2111 || fab fa-github</span><br><span class="line">  E-Mail: mailto:ycen2111@gmail.com || fa fa-envelope</span><br><span class="line">  <span class="comment">#Weibo: https://weibo.com/yourname || fab fa-weibo</span></span><br><span class="line">  <span class="comment">#Google: https://plus.google.com/yourname || fab fa-google</span></span><br><span class="line">  <span class="comment">#Twitter: https://twitter.com/yourname || fab fa-twitter</span></span><br></pre></td></tr></table></figure><p>||后的是图标连接，改下前面的网址就可以导向了。</p><h3 id="Footer"><a href="#Footer" class="headerlink" title="Footer"></a>Footer</h3><p>在icon内可以更改footer中间那个图标</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Icon between year and copyright info.</span></span><br><span class="line">  icon:</span><br><span class="line">    <span class="comment"># Icon name in Font Awesome. See: https://fontawesome.com/icons</span></span><br><span class="line">    name: fa fa-grip-lines-vertical</span><br><span class="line">    <span class="comment"># If you want to animate the icon, set it to true.</span></span><br><span class="line">    animated: <span class="literal">false</span></span><br><span class="line">    <span class="comment"># Change the color of icon, using Hex Code.</span></span><br><span class="line">    color: <span class="string">&quot;#999999&quot;</span></span><br></pre></td></tr></table></figure><p>name:可以在<a href="https://fontawesome.com/icons">fontawesome</a>内选择图标，直接替换fa后的名字即可。<br>color:控制图标颜色，必须使用<a href="https://www.color-hex.com/">HEX</a>代码。#999999与旁边字体颜色最近。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Powered by Hexo &amp; NexT</span></span><br><span class="line">powered: <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>默认为true，改为false可以把最后那个Powered by Hexo &amp; NexT取消掉。</p><h3 id="Post-Setting"><a href="#Post-Setting" class="headerlink" title="Post Setting"></a>Post Setting</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Read more button</span></span><br><span class="line"><span class="comment"># If true, the read more button will be displayed in excerpt section.</span></span><br><span class="line">read_more_btn: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>主界面阅读全文按钮，可以在.md文件内写入 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- more --&gt;</span><br></pre></td></tr></table></figure><p>定位按钮位置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Post meta display settings</span></span><br><span class="line">post_meta:</span><br><span class="line">  item_text: <span class="literal">false</span></span><br><span class="line">  created_at: <span class="literal">true</span></span><br><span class="line">  updated_at:</span><br><span class="line">    <span class="built_in">enable</span>: <span class="literal">false</span></span><br><span class="line">    another_day: <span class="literal">false</span></span><br><span class="line">  categories: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>文章标题下面的一些信息。<br>item_text:图标旁边是否加上文字描述<br>created_at:创建时间<br>update_at:更新时间，如果another_day为true就只显示不同日期的更改记录。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Use icon instead of the symbol # to indicate the tag at the bottom of the post</span></span><br><span class="line">tag_icon: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>文章最后的tags之前用小图标标记。</p><p>另外关于donate和reward的内容也在此，需要的话直接修改就行。</p><h2 id="Layout-设置"><a href="#Layout-设置" class="headerlink" title="Layout 设置"></a>Layout 设置</h2><p>在 .\Hexo\themes\next\layout 目录下有所有显示排版设置，可以调整实际输出的格式。</p><h3 id="index-njk"><a href="#index-njk" class="headerlink" title="index.njk"></a>index.njk</h3><p>有时不想在首页显示一些日记但可以通过标签找到文章，可以增加一个判断条件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% block content %&#125;</span><br><span class="line"></span><br><span class="line">  &#123;%- <span class="keyword">for</span> post <span class="keyword">in</span> page.posts.toArray() %&#125;</span><br><span class="line">  <span class="comment">#开始判断，invisible不为true的输出显示</span></span><br><span class="line">    &#123;% <span class="keyword">if</span> post.Invisible != <span class="literal">true</span> %&#125;</span><br><span class="line">      &#123;&#123; partial(<span class="string">&#x27;_macro/post.njk&#x27;</span>, &#123;post: post, is_index: <span class="literal">true</span>&#125;) &#125;&#125;</span><br><span class="line">  <span class="comment">#停止判断</span></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">  &#123;%- endfor %&#125;</span><br><span class="line"></span><br><span class="line">  &#123;%- include <span class="string">&#x27;_partials/pagination.njk&#x27;</span> -%&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure><p>然后在文章设置内添加Invisible就行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">title: </span><br><span class="line">date: 2022-09-26 08:19:31</span><br><span class="line">tags:</span><br><span class="line"></span><br><span class="line">Invisible: True</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo个人博客创建引导（二）</title>
      <link href="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-cee5c8cdb4b0/"/>
      <url>/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-cee5c8cdb4b0/</url>
      
        <content type="html"><![CDATA[<h2 id="申请域名"><a href="#申请域名" class="headerlink" title="申请域名"></a>申请域名</h2><p>虽然github可以免费生成一个”.github.io”结尾的域名，但通常情况下大多数人还是愿意申请一个更适合的域名并重定向过去。由于域名申请审核需要一定时间，这里先介绍域名申请的流程及注意事项，如不打算自己申请可以先跳过这节。</p><p>此文会讲解在<a href="https://wanwang.aliyun.com/domain?utm_content=se_1008364728">阿里云平台</a>申请域名。优点在于阿里云可以直接解析域名，减少工作量，相对方便。</p><span id="more"></span><p><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-cee5c8cdb4b0/%E9%98%BF%E9%87%8C%E4%BA%91%E5%9F%9F%E5%90%8D%E5%9B%BE%E7%89%87.PNG" alt="阿里云域名图片"></p><p>个人认为.top结尾的域名便宜又好使，完全可以个人使用，如果可以接受稍微贵点的话.com结尾也比较大气。不同域名价格相差极大，个别热门名字价格可能会到几万，需要多找找。（像此网站域名pipirima.top，就是天蝎座μ2的英文，尾宿增二，3.57等星，双星系统）</p><p>找到合适的就直接加入列表购买就行。已购买的可以在域名控制台，域名列表里找到<br><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-cee5c8cdb4b0/%E5%9F%9F%E5%90%8D%E5%88%97%E8%A1%A8.PNG" alt="域名列表"></p><p>一开始购买的域名需要实名认证下，会有提示的，进去后把名字和身份证传下就行。人工审核大概需要半天的样子，完成后会发过来一封信息提醒的，耐心等待即可。审核完成后需要解析下，点击上图蓝色的”解析“即可,这个后面会说。</p><h2 id="github创造仓库"><a href="#github创造仓库" class="headerlink" title="github创造仓库"></a>github创造仓库</h2><p>接下来的内容是假设可以登录github并有账号的情况，如果还未注册请先进行注册并完成基础操作。</p><p>首先打开仓库<br><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-cee5c8cdb4b0/github%E4%BB%93%E5%BA%93.PNG" alt="github仓库.PNG"></p><p>在右上角点击绿色的”new“，开始创建。<br><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-cee5c8cdb4b0/%E5%88%9B%E5%BB%BA%E4%BB%93%E5%BA%93.PNG" alt="创建仓库.PNG"></p><p>（懒得涂名字了，反正都能看到的，算了）</p><p>老样子，将yourname改为自己的名字，选择public，直接创建。完成的话像这个样子<br><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-cee5c8cdb4b0/%E5%88%9B%E9%80%A0%E5%AE%8C%E6%88%90.PNG" alt="创造完成.PNG"></p><h2 id="生成SSH"><a href="#生成SSH" class="headerlink" title="生成SSH"></a>生成SSH</h2><p>利用bash直接生成密钥，然后把公共密钥给github，就不用每次都属用户名密码了（没试过需要输入的情况，这么说总是方便吧）</p><p>如果bash是第一次使用的话先设置一次账号密码。打开bash后输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;yourname&quot;</span></span><br><span class="line">git config --global user.emil <span class="string">&quot;youremail&quot;</span></span><br></pre></td></tr></table></figure><p>记得替换好名字和邮箱</p><p>然后就生成SSH</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;youremail&quot;</span></span><br></pre></td></tr></table></figure><p>全程回车确认，最后会提示生成完毕，并给一个地址。基本会在 C:\User.ssh 里找到一个id_rsa.pub<br><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-cee5c8cdb4b0/SSH.PNG" alt="SSH.PNG"></p><p>用记事本打开，复制内容后回github黏贴<br><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-cee5c8cdb4b0/github_ssh.PNG" alt="github_ssh.PNG"></p><p>点击new ssh key黏贴密钥。</p><p>完成后在Bash里输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-cee5c8cdb4b0/%E6%A3%80%E6%9F%A5ssh.PNG" alt="检查ssh.PNG"></p><p>本人是这个结果，如果出现的话基本就没事了。</p><h2 id="hexo关联github"><a href="#hexo关联github" class="headerlink" title="hexo关联github"></a>hexo关联github</h2><p>说是关联，其实也只是将.git等一部分文件上传关联，没有全部发送备份。本文最后有将整个项目上传过程。</p><p>打开项目根目录，打开 _config.yml 配置文件直接拖到最后，改为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repository: https://github.com/yourname/yourname.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>改为自己名字后保存退出，打开bash安装hexo的部署功能</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>之后我们就可以使用 hexo d 这个命令了。</p><p>连续输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d//上传部署</span><br></pre></td></tr></table></figure><p>hexo d部署估计是由于墙的问题，很容易失败，多试几次发现没提示error就说明成功了。<br><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-cee5c8cdb4b0/%E9%83%A8%E7%BD%B2%E6%88%90%E5%8A%9F.PNG" alt="部署成功.PNG"></p><p>稍微过会儿进入<a href="http://yourname.github.io就可以看到上传的页面了./">http://yourname.github.io就可以看到上传的页面了。</a></p><h2 id="解析域名"><a href="#解析域名" class="headerlink" title="解析域名"></a>解析域名</h2><p>之前申请的域名审核通过就可以解析了，不需要认证。</p><p><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-cee5c8cdb4b0/%E8%A7%A3%E6%9E%90%E8%AE%BE%E7%BD%AE.PNG" alt="解析设置.PNG"></p><p>（注意！！！）解析设置必须在完成github配置后再进行。</p><p>先说主机记录这块，”@“意思是无前缀，直接输入域名就行，如直接pipirima.top就可以访问此网站。”WWW“就是前缀加上，如 <a href="http://www.pipirima.top/">www.pipirima.top</a> ,两个都设置的话两个写法都可以访问此网站。</p><p>记录类型一般有两个选择，”A“或者”CNAME“。如果选择”A“就需要在记录值这里填写.github.io对应的ip地址。打开windows自带cmd，输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping yourname.github.io</span><br></pre></td></tr></table></figure><p><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-cee5c8cdb4b0/git_ip%E6%9F%A5%E8%AF%A2.PNG" alt="git_ip查询.PNG"></p><p>yourname改为自己的github姓名。在记录值里输入ip即可。</p><p>但github方面更推荐使用”CNAME“，如果用”A“在最后github设置customer domain时会有个warning，看着难受。所以一般都是推荐使用”CNAME“。这种情况下直接在记录值输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yourname.github.io</span><br></pre></td></tr></table></figure><p>即可，同样记得自己改下名字。</p><p>解析线路选择默认，TTL选10分钟即可（更新时间间隔）。点击确认。</p><h2 id="配置CNAME"><a href="#配置CNAME" class="headerlink" title="配置CNAME"></a>配置CNAME</h2><p>最后，再告诉github和hexo新域名</p><p>进入仓库中的setting，在page页面内找到customer domain选项<br><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-cee5c8cdb4b0/customer_domain.PNG" alt="customer_domain.PNG"></p><p>直接输入域名，不用任何前缀。推荐点上下边的enforce https，更安全一点。点击save，等旁边出现一个绿勾就完成了。</p><p>虽然现在就能进入新域名了，但每次部署后都需要从新输入customer domain。解决办法是在本地hexo，source文件夹里新建一个文件，去除后缀（所有格式形式），输入新域名（同样只输入域名进行），重新hexo clean，g，d，部署后就每次可以不用再次输入了。</p><p>同样，上传部署后需要等待一会儿，不会马上更新的。</p><p>现在可以访问新域名，进行后续的theme选择和内容书写了。</p><h2 id="备份HEXO文件"><a href="#备份HEXO文件" class="headerlink" title="备份HEXO文件"></a>备份HEXO文件</h2><p>为了防止工程文件随本地文件消失而损失，可在仓库中另建一个branch来存放文件。</p><p>在github项目仓库中新建branch。</p><p><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-cee5c8cdb4b0/new_branch.PNG" alt="new_branch.PNG"></p><p>在setting中设置默认branch</p><p><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-cee5c8cdb4b0/set_default.PNG" alt="set_default.PNG"></p><p>之后在本地新建一个文件夹来存放已上传的文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/yourname/yourname.github.io.git</span><br><span class="line"></span><br><span class="line">git remote rm origin</span><br><span class="line"></span><br><span class="line">git remote add origin https://github.com/yourname/yourname.github.io.git</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>开启隐藏文件显示，保留.git文件之外删除其他文件，并将需要上传的文件放进来（必须保留.gitignor文件）。输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line"></span><br><span class="line">git commit -m <span class="string">&quot;something&quot;</span></span><br><span class="line"></span><br><span class="line">git push origin branchName</span><br><span class="line">//<span class="keyword">if</span> fail</span><br><span class="line">git pull origin branchName</span><br><span class="line">//and follow</span><br><span class="line">git push origin <span class="built_in">source</span></span><br></pre></td></tr></table></figure><p>可发现文件已上传。</p><p>Shell 脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> D://Blog</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">read</span> -n 1</span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">cp -a .//Hexo//<span class="built_in">source</span> .//<span class="built_in">source</span>//ycen2111.github.io</span><br><span class="line">cp -a .//Hexo//_config.yml .//<span class="built_in">source</span>//ycen2111.github.io</span><br><span class="line">cp -a .//Hexo//package.json .//<span class="built_in">source</span>//ycen2111.github.io</span><br><span class="line">cp -a .//Hexo//.gitignore .//<span class="built_in">source</span>//ycen2111.github.io</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ ! -d <span class="string">&quot;.//source//ycen2111.github.io//themes//next&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Create .//source//ycen2111.github.io//themes//next&quot;</span></span><br><span class="line">mkdir -p .//<span class="built_in">source</span>//ycen2111.github.io//themes//next</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">read</span> -n 1</span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">cp -a .//Hexo//themes//next//_config.yml .//<span class="built_in">source</span>//ycen2111.github.io//themes//next</span><br><span class="line">cp -a .//Hexo//themes//next//package.json .//<span class="built_in">source</span>//ycen2111.github.io//themes//next</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> .//<span class="built_in">source</span>//ycen2111.github.io &amp;&amp; git add . &amp;&amp; git commit -m <span class="string">&quot;backup&quot;</span> &amp;&amp; git push origin <span class="built_in">source</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">read</span> -n 1</span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> Blog </tag>
            
            <tag> 图文教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo个人博客创建引导（一）</title>
      <link href="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%B8%80%EF%BC%89-0c90e66798ef/"/>
      <url>/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%B8%80%EF%BC%89-0c90e66798ef/</url>
      
        <content type="html"><![CDATA[<h2 id="总起"><a href="#总起" class="headerlink" title="总起"></a>总起</h2><p>此图文教程为基于<a href="https://hexo.io/zh-cn/">Hexo</a>私人博客框架和github建立自己的网站博客。</p><p>此攻略大量参考资料<a href="https://blog.csdn.net/weixin_41800884/article/details/103589663">零基础搭建博客：入门</a>, <a href="https://blog.csdn.net/sinat_37781304/article/details/82729029">hexo史上最全搭建教程</a>,并加入自己的理解及遇到的问题和对此的解决方法。仅作为自己之后的回忆笔记，可能不具备普适性。</p><span id="more"></span><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>需要环境：<br>    1.Git<br>    2.Git bush<br>    3.Node.js<br>    4.Github</p><h3 id="1-Git-bush与Node-js安装"><a href="#1-Git-bush与Node-js安装" class="headerlink" title="1. Git bush与Node.js安装"></a>1. Git bush与Node.js安装</h3><p>这几步和<a href>Git Command</a>流程一样。</p><p>Git可于<a href="https://gitforwindows.org/">git官网</a>安装。点击download直接会开启一个下载进程，直接全程默认安装即可。这个安装包包含如下图所示三个文件：</p><p><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%B8%80%EF%BC%89-0c90e66798ef/Git_Display.png" alt="Git 安装后的三个文件"></p><p>其中Git GUI和Git CMD基本不会用到，只需要Git Bash来运行Linux command即可。 （ps：到此处为止Git Bash默认并未识别sudo命令，之后会用Node.js里的npm功能代替。）</p><p>完成之后可以打开Bash输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure><p>看看版本<br><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%B8%80%EF%BC%89-0c90e66798ef/git_version.PNG" alt="bash查询Git版本"></p><p>没有问题后就可以着手开始Node.js的安装了。如果没有墙的问题的话可以去<a href="https://nodejs.org/en/download/">nodejs</a>官网，不然就老老实实去<a href="http://nodejs.cn/download/">国内端点</a>下载。一样的。<br><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%B8%80%EF%BC%89-0c90e66798ef/nodejs.PNG" alt="nodejs官网图片"></p><p>完成后就可以使用npm命令下载了。马上输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><p>看看是否成功。</p><h3 id="2-下载Hexo"><a href="#2-下载Hexo" class="headerlink" title="2.下载Hexo"></a>2.下载Hexo</h3><p>主菜来了，今晚的主角。由于Hexo是基于Node.js框架，所以必须完成上面的几步再安装。</p><p>先找个合适的地方创建文件夹存放架构，然后直接在新建的目录下操作。</p><p>直接Bash输入命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>这条命令可以直接在Hexo官网找到。注意，不清楚是不是墙的原因Bash会花费大量时间下载，并且没有任何提示（会突然暴毙）。因此尽量多注意下下载状况，多读读command里的内容。</p><p>老规矩，查下版本。这里使用的是4.3版本。<br><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%B8%80%EF%BC%89-0c90e66798ef/hexo_version.png" alt="hexo版本"></p><p>安装完成后需要先初始化一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init filename</span><br></pre></td></tr></table></figure><p>自己取个合适的名字。它会自己创建一个文件夹来保存东西不需要自己提前创建。有失败的可能性，如果失败需要删掉它之前创建的文件夹，防止报错。</p><p>进入那个文件夹，输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><p>初始化好的文件夹就基本如下图所示：<br><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%B8%80%EF%BC%89-0c90e66798ef/init_folder.PNG" alt="Hexo初始化后的文件夹"><br>有些文件可能发现没有，但之后都会有的。</p><p>其中_config.yml非常重要，基本所有关于网页的配置都会在这里。</p><p>最后输入三条黄金代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean //清除缓存</span><br><span class="line">hexo g //创建页面</span><br><span class="line">hexo s //本地启动网页</span><br></pre></td></tr></table></figure><p>之后直接访问 localhost:4000 就可以看见默认的网页模板了。 ctrl+c可以退出本地网页。<br><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%B8%80%EF%BC%89-0c90e66798ef/web_page.png" alt="本地网页"></p><p>(完)</p>]]></content>
      
      
      <categories>
          
          <category> Hexo模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> Blog </tag>
            
            <tag> 图文教程 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
