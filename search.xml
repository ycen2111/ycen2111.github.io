<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>STM32 HID device</title>
      <link href="/STM32/STM32-HID-device-ebe1966271bf/"/>
      <url>/STM32/STM32-HID-device-ebe1966271bf/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>可用STM32模拟鼠标数据控制。</p><span id="more"></span><p>发送给上位机数据为4 bytes</p><table><thead><tr><th align="left">byte</th><th align="left">bit</th><th align="left">implement</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">7</td><td align="left">1 means Y changes larger than the range -256~255</td></tr><tr><td align="left">1</td><td align="left">6</td><td align="left">1 means X changes larger than the range -256~255</td></tr><tr><td align="left">1</td><td align="left">5</td><td align="left">1 means Y changes to negative part</td></tr><tr><td align="left">1</td><td align="left">4</td><td align="left">1 means X changes to negative part</td></tr><tr><td align="left">1</td><td align="left">3</td><td align="left">constant 1</td></tr><tr><td align="left">1</td><td align="left">2</td><td align="left">middle key pressed</td></tr><tr><td align="left">1</td><td align="left">1</td><td align="left">right key pressed</td></tr><tr><td align="left">1</td><td align="left">0</td><td align="left">left key pressed</td></tr><tr><td align="left">2</td><td align="left">0-7</td><td align="left">X coordinate’s chaning</td></tr><tr><td align="left">3</td><td align="left">0-7</td><td align="left">Y coordinate’s chaning</td></tr><tr><td align="left">4</td><td align="left">0-7</td><td align="left">rolling value</td></tr></tbody></table><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><p>CubeMX里 connectivity-USB enable “Device”, 然后Middleware 选择 HID，保持默认即可</p><p>在main.c中添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include “usbd_hid.h”</span></span><br><span class="line"></span><br><span class="line">uint8_t MouseData01[4] = &#123;0,0,0,0&#125;;</span><br><span class="line">extern USBD_HandleTypeDef hUsbDeviceFS;</span><br></pre></td></tr></table></figure><p>while里</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">USBD_HID_SendReport(&amp;hUsbDeviceFS,(uint8_t*)&amp;MouseData01,sizeof(MouseData01));</span><br></pre></td></tr></table></figure><p>即可控制</p>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo快速编辑TIPS</title>
      <link href="/hello-world-1a2da80343a8/"/>
      <url>/hello-world-1a2da80343a8/</url>
      
        <content type="html"><![CDATA[<p>一些基本的Hexo命令行语句。每次修改完记得按流程测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean // 清除缓存</span><br><span class="line"></span><br><span class="line">$ hexo g // 从新生成html静态文件</span><br><span class="line"></span><br><span class="line">$ hexo s // 本地创建 localhost:4000</span><br><span class="line"></span><br><span class="line">$ hexo d // 上传域名</span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MGT388 Finance and Law for Engineers</title>
      <link href="/2021-2022/MGT388-Finance-and-Law-for-Engineers-6bc17ae9658a/"/>
      <url>/2021-2022/MGT388-Finance-and-Law-for-Engineers-6bc17ae9658a/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="0d023087df9a1c7f8bf7cc840a6c3e6f62a7d31f29b80af2546eca9668d072d3">c9970121048dab1892173b62e4bce2896bb95d167225a7277c15f9175947a6a4b6fde3c82290f0ab53138b4c9ac2d684f5af62332a46ce22ae8b7c873745820d331326df5e7a5567f0e9fdd436c92062df56e44c5e39cb7aead960112749f6eb58704a8337d2c5f1d6b5af1241572516c1faa109fcbcc47f8517da30b49a687dc410693a5ecffeb86f8a4081197f783c14444f86e171cdad4108532dca667a18a2ef9684489e6d828438df7fc07348a8bf774fcd5eeb080d45d212e05e529bb55e1ae7ee95161763871450dcc245b36f59c6911e4bc8340077fde3174ef724d85432736b2fe7e1f8bfafb733152cddcf61defc54036523e73483a5a2dbe11a92584d004790030810d5b3554726ca690b374a0dcc0dc3adf89054d62e5fd575f016f1536e3be852d58321b86ce8b1a6720452f88cba59a4b0ce742aa22e77fb9fc5218e2de156b42cdf18c1054ce487faac42aee65193ab7862d7edc2e6a2b2a2b7bde2de79e89b84fee760f96b03478a27ec5c7af2c59387fa43969ca8c99143da8c65c36adb3484c67a053480439e0de9e6476fbb31878a0feaa20bedbbc12cec2534bd9b6c465775306ed18bccc97d95aeef55c9055895d7f94bc1d455ac3830c494d97e5a6109c1103c5ba3aef5213b991200fecd50655832cb5b820556905d46ed6defe3dab91d5a47fce50c29987871580d62f7a1730050793646d0596188be949164bd523d7963ac29da73469f70538fc6700f9cc055bf3ab5357dded6db74a8ea97e047f44df8fcb0454cfb863faff8ea05dd35595871ffc74755ecf31a5d0cc7836f339c2853aa785cd0fe9253495c690541068b04f445d14af2d9c679758d18fa46013e37fb36fc79ccc4ec8a4fb032db3c63c8d06b746dbe04af02cbe99a1aebc6877d2e326f21fcd1724df9dd906b5d099a4f59fe17ae77903cc18d10a7e157cc8bab440dd2b45be3dc7bfad65b5d2651695be5975f8eae46441090da262d7cefbdd0d72fb8df85caa0b56154bb98d105b19084d99dbaeed40867dec04d634859b8161023e87e6a963447e793491fa248650a36ca777a55d036f7ab9bda22b3877aa384c5b4a7c6265086834bab45f868d9cae6fe9180ed4fc99e11b3c4fdec811b282043eb07eed2f6dce49b775133c067e3a1b6b890e39560cf22694ffdc4841bfbe10465166d76291c3a272869881437c853d74048eefe1d76f5db349213686a1b9d52ce1219ccb5c037d0c30e5a977799ea8eec0672fac3c4e1dbc3279a3a6950bf2e8a5eeba9ee5d894a6707670d42e14df70b3c7e38067eff0f4555dbe0d413e2ac5bb91b6d21ab4c44ab199b9814bd1d4e2943285f973086b3e40c6f893577bdd1f3d2eb33e29e2408410b6e53f1c73a94977df9f464466843f533e77f4b753e57c4c49f9a1a7db75081a300e6307f64341fe9aa0762467f14ebb703938315e1dff7fea2e2fd90539df5fab1d2ebd78656e8eff0145a62a5cce81103f149bd4be9c7784979c9ab553525886fc374e76e36564a1ef68ed0bb3c636ed14c836ff5c7abf159c153ec3c0fd0b50c2297f8d9803539b80ff526039745138154dc73b65890738e5ab4b36e05fba8901fce995aedfd62d3fb7a58071f9034a0fc3bbd7e60a62024236f8285931ac696d7d61d44108f7973b999a3f41c7566abea5f0b0ea077c258be08c09a55b834bb4d80472aa331d1fe9c8b632b55012b0b3fea1de2cf58103b794698f5455fe2a6ed3a932815fe7d47d7d4eea1b5e51446929f68743062ddfa44d89c06bd0bf2ed7ddee146e2e0b2cc39f530f3ea39f4d9397b9518b42d7e4526a75dc7b1b7fc8250a89ebc40625a7c3bd0e9bb44415e019605f7e37af36e9a35578ce5c740b9ffa0ad4f31e1a24b48cb889e189c32726ad555f8107b2eb6e9f10455560e2b78d86a0bbea604741c034cc11ce78a3f1a76144add926ca6ba0dbf151d87ffb26bfae394901f8da11e8e5f7392b84bbbadf9f3db0b7c104e3feecf9979381f568c6dfbe255278cfc66708b26667fcfc8033667bfc3851c7a5467fd4c9ad90ecc41a2cca4aa49849f576f5696086e0751f3b512a9bd62a2269af9a1096e0d3679b75e11940a794986b7ae3ad0df62ff536fefdb9bc92386998dbf6d04ea04b202859077be7eaddd40689f24fdd9e8a748891afcbc1f82c9571565d0830a9847882616faa8ffa610fd4174723a5d27fa1a42472a5fcca9693704f3a9db3c8fc1fa796d279344ac5a0a24ba28ca91aa3cd63decf022de1a4d1e88bcdb6b9fd5d3e8b22f8506501be760e1e2bf5661</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-up">      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-up">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> academic material </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2021-2022 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MAS381 Mathematics III</title>
      <link href="/2021-2022/MAS381-Mathematics-III-152972655c65/"/>
      <url>/2021-2022/MAS381-Mathematics-III-152972655c65/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="d2d30ac2247a349d36747543afad95b011a3ba8377cac7e2cd3006f70b1a90bc"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-up">      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-up">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> academic material </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2021-2022 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EEE380 Individual Design Project</title>
      <link href="/2021-2022/EEE380-Individual-Design-Project-7e2ebb9fc9fe/"/>
      <url>/2021-2022/EEE380-Individual-Design-Project-7e2ebb9fc9fe/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="3d3fafc64ac69ed37f50b2b0fd66438ac25b274299febb292104fce092dba036">c9970121048dab1892173b62e4bce289cadc2ffd08d2ceec6c034b645a8e2337</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-up">      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-up">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> academic material </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2021-2022 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EEE348 Electronics and Devices</title>
      <link href="/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/"/>
      <url>/2021-2022/EEE348-Electronics-and-Devices-43cc82391ef8/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="28d8aee9209fcef67ed83f5259c4ebd0973bf9ff984d26529827d92ab1169c7b"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-up">      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-up">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> academic material </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2021-2022 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EEE339 Digital Engineering</title>
      <link href="/2021-2022/EEE339-Digital-Engineering-de67ee225472/"/>
      <url>/2021-2022/EEE339-Digital-Engineering-de67ee225472/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="b13d29cb3cab7c67bbb41591113ea7c55e3f7c5a3483b9e0e6626cd82ea484d0"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-up">      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-up">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> academic material </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2021-2022 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EEE317 Principle of Communications</title>
      <link href="/2021-2022/EEE317-Principle-of-Communications-93699c44d491/"/>
      <url>/2021-2022/EEE317-Principle-of-Communications-93699c44d491/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="44bf0eb2ac6a1f1b08f59aa2331c35dfcd7cfea6ff5dd2246f387a9b024de111"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-up">      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-up">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> academic material </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2021-2022 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ACS342 Feedback systems Design</title>
      <link href="/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/"/>
      <url>/2021-2022/ACS342-Feedback-systems-Design-d52d279f36bf/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="3d3fafc64ac69ed37f50b2b0fd66438ac25b274299febb292104fce092dba036">c9970121048dab1892173b62e4bce289cadc2ffd08d2ceec6c034b645a8e2337</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-up">      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-up">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> academic material </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2021-2022 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32 IIC通信</title>
      <link href="/STM32/STM32-IIC%E9%80%9A%E4%BF%A1-89def3d6f728/"/>
      <url>/STM32/STM32-IIC%E9%80%9A%E4%BF%A1-89def3d6f728/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>IIC协议是一种通用connection method，通过SCL和SDA双线通讯，可以通过设置地址来实现多主机/从机共用双线通讯，节省端口。但效率不高，遇上大数据量通讯弊端明显。</p><span id="more"></span><h2 id="IIC协议"><a href="#IIC协议" class="headerlink" title="IIC协议"></a>IIC协议</h2><p>IIC时序有如下规律：</p><p>SCL | SDA | Result<br>  H  |    ↓    | Start Signal<br>  H  |    ↑    | Stop Signal<br>  H  |   →   | Read Signal<br>  L   |    X   | Change Signal</p><p><img src="/STM32/STM32-IIC%E9%80%9A%E4%BF%A1-89def3d6f728/20190409113350288.png" alt="20190409113350288.png"></p><p>寻址方面，一般寻址会发送8位数据，前7位为地址，第8位为读/写（1/0）标记。<br>例如主机从从机读数据，可以是1010 0001。</p><p>每次发送一个字节数据后，主机会拉高SDA并等待从机应答。如检测到下拉信号后继续传输。一般一次传输完成后需delay至少5ms再继续传输。</p><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><p>cubemx connectivity中可选择I2C1或是2。选择standard mode就行，这样内部时钟就是100khz。</p><p>注意：如使用mini板会发现它将EEPROM，24C02芯片连接在PC11和PC12上，而非定义的IIC接口，需要外部自行连接。</p><p>另：在查资料时发现有说法将以下自动生成的代码放置在GPIO enable之前：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">__HAL_RCC_I2C2_CLK_ENABLE();</span><br></pre></td></tr></table></figure><p>但尝试后发现并无区别，先在此记录。</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="polling"><a href="#polling" class="headerlink" title="polling"></a>polling</h3><p>单纯的读写可使用如下函数：</p><p>HAL_StatusTypeDef HAL_I2C_Master_Transmit(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)<br>HAL_StatusTypeDef HAL_I2C_Master_Receive(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)<br>example：HAL_I2C_Master_Transmit(&amp;hi2c2, 0xA0, Buffer, 8, 1000);</p><p>或：<br>HAL_StatusTypeDef HAL_I2C_Mem_Write(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint8_t *pData, uint16_t Size, uint32_t Timeout)<br>HAL_StatusTypeDef HAL_I2C_Mem_Read(I2C_HandleTypeDef <em>hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint8_t <em>pData, uint16_t Size, uint32_t Timeout)<br>example：HAL_I2C_Mem_Write(&amp;hi2c2, 0xA0,8</em>i,I2C_MEMADD_SIZE_8BIT,Buffer+8</em>i,8, 1000);</p><p>基本上最好选择mem记录和读取，因为可以选择开始储存的地址，灵活。</p>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>STM32 红外接收（NEC协议）</title>
      <link href="/STM32/STM32-%E7%BA%A2%E5%A4%96%E6%8E%A5%E6%94%B6%EF%BC%88NEC%E5%8D%8F%E8%AE%AE%EF%BC%89-e21c0e49c925/"/>
      <url>/STM32/STM32-%E7%BA%A2%E5%A4%96%E6%8E%A5%E6%94%B6%EF%BC%88NEC%E5%8D%8F%E8%AE%AE%EF%BC%89-e21c0e49c925/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>本文将使用<a href="https://pdf1.alldatasheet.com/datasheet-pdf/view/26526/VISHAY/TSAL6200.html">TSAL6200</a>发射头和<a href="https://pdf1.alldatasheet.com/datasheet-pdf/view/103034/VISHAY/HS0038B.html">HS0038</a>接收头传递信号。HS0038会输出解码完成的信号并以高低电频方式输出。</p><span id="more"></span><h2 id="输入捕获"><a href="#输入捕获" class="headerlink" title="输入捕获"></a>输入捕获</h2><p>通过tim IC功能实现输入中断，来测量两trigger间时间差。</p><p>由于接红外接收头连接于PA1，这里选用TIM5 channel 2实现中断。</p><p>cubeMX选中TIM5 channel 2 Input Capture direct mode, 勾选Internal Clock。</p><p>Prescaler= 72-1<br>Counter Period= 65535(0XFFFF) //越大越好，尽量减少溢出次数<br>auto-reload= enable</p><p>记得设置NVIC优先级。</p><h3 id="tim-c"><a href="#tim-c" class="headerlink" title="tim.c"></a>tim.c</h3><p>需要在init之后加入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HAL_TIM_Base_Start_IT(&amp;htim5); //开启计时中断</span><br><span class="line">HAL_TIM_IC_Start_IT(&amp;htim5,TIM_CHANNEL_2); //开启输入中断</span><br></pre></td></tr></table></figure><p>计数器溢出回调函数。计数溢出次数，并标记一些重要内容。<br>RmtSta[(0&lt;=接收标记)00(0&lt;=high trigger标记) (0000&lt;=4bits counter)]</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(htim==(&amp;htim5))</span><br><span class="line">&#123;</span><br><span class="line"> <span class="keyword">if</span>(RmtSta&amp;0x80)//1000 0000 start receiving</span><br><span class="line">&#123;</span><br><span class="line">RmtSta&amp;=~0X10; //cancle the rising mark</span><br><span class="line"><span class="keyword">if</span>((RmtSta&amp;0X0F)==0X00)RmtSta|=1&lt;&lt;<span class="string">6;//0100 0000 finishing a receive</span></span><br><span class="line"><span class="string">if((RmtSta&amp;0X0F)&lt;14)RmtSta++;</span></span><br><span class="line"><span class="string">else //(RmtSta&amp;0X0F)=15</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">RmtSta&amp;=~(1&lt;&lt;7);</span></span><br><span class="line"><span class="string">RmtSta&amp;=0XF0;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>输入中断回调函数。计算一个周期内的时间差，交替设置high/down trigger中断来实现高/低电频时间测量。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(htim==(&amp;htim5))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (HAL_GPIO_ReadPin(GPIOA,GPIO_PIN_1))</span><br><span class="line">&#123;</span><br><span class="line">TIM_RESET_CAPTUREPOLARITY(&amp;htim5,TIM_CHANNEL_2); //reset configuration (important)</span><br><span class="line">TIM_SET_CAPTUREPOLARITY(&amp;htim5,TIM_CHANNEL_2,TIM_ICPOLARITY_FALLING); //interrept <span class="keyword">in</span> falling edge</span><br><span class="line">__HAL_TIM_SET_COUNTER(&amp;htim5,0);  //reset timer</span><br><span class="line">  RmtSta|=0X10; //0001 0000</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">Dval=HAL_TIM_ReadCapturedValue(&amp;htim5,TIM_CHANNEL_2); //get time difference</span><br><span class="line">TIM_RESET_CAPTUREPOLARITY(&amp;htim5,TIM_CHANNEL_2);</span><br><span class="line">TIM_SET_CAPTUREPOLARITY(&amp;htim5,TIM_CHANNEL_2,TIM_ICPOLARITY_RISING); //interrept <span class="keyword">in</span> rising edge</span><br><span class="line">  RmtSta&amp;=~(1&lt;&lt;<span class="string">4); //000(1&lt;-0) 0000</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>之后将Dval加上溢出的时间就得到完整的高/低电频时间了。</p><h2 id="NEC协议"><a href="#NEC协议" class="headerlink" title="NEC协议"></a>NEC协议</h2><p>NEC协议遵从以下规则：</p><p><img src="/STM32/STM32-%E7%BA%A2%E5%A4%96%E6%8E%A5%E6%94%B6%EF%BC%88NEC%E5%8D%8F%E8%AE%AE%EF%BC%89-e21c0e49c925/12215924-779a256456e84999b95e2b9133125781.png" alt="12215924-779a256456e84999b95e2b9133125781.png"></p><p>每条命令会由一个起始信号，8位地址，8位反位地址，8位cmd,8位反位cmd和若干repeat信号组成。</p><p><img src="/STM32/STM32-%E7%BA%A2%E5%A4%96%E6%8E%A5%E6%94%B6%EF%BC%88NEC%E5%8D%8F%E8%AE%AE%EF%BC%89-e21c0e49c925/20190615153604389.png" alt="20190615153604389.png"></p><p>起始信号会产生9ms高信号和4.5ms低信号，</p><p>发射逻辑“1”会产生560μs高信号和1690μs低信号，</p><p>发射逻辑“0”会产生560μs高信号和560μs低信号，</p><p>repeat会产生9ms高信号和2.25ms低信号。</p><p><img src="/STM32/STM32-%E7%BA%A2%E5%A4%96%E6%8E%A5%E6%94%B6%EF%BC%88NEC%E5%8D%8F%E8%AE%AE%EF%BC%89-e21c0e49c925/20190615155851364.png" alt="20190615155851364.png"></p><p>但是接收头却会反调接收的高信号和低信号，如接收逻辑“1”会产生560μs低信号和1690μs高信号。</p><p>由于接收的高信号足以区分不同codes，因此可以只检测高信号长度来解码。</p><h3 id="按钮信号"><a href="#按钮信号" class="headerlink" title="按钮信号"></a>按钮信号</h3><p>通过测试正点原子配套的遥控器，得如下结果：</p><p>按7X3位置排序cmd码<br> 162 | 098 | 226<br> 034 | 002 | 194<br> 224 | 168 | 144<br> 104 | 152 | 176<br> 048 | 024 | 122<br> 016 | 056 | 090<br> 066 | ( n ) | 082</p><h3 id="tim-c-1"><a href="#tim-c-1" class="headerlink" title="tim.c"></a>tim.c</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &quot;tim.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#include &quot;stdio.h&quot;</span></span><br><span class="line"><span class="comment"># include &quot;LED\BSP_LED.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;OLED\oled.h&quot;</span></span><br><span class="line"></span><br><span class="line">TIM_HandleTypeDef htim2;</span><br><span class="line">TIM_HandleTypeDef htim5;</span><br><span class="line"></span><br><span class="line">/* TIM2 init <span class="keyword">function</span> */</span><br><span class="line">void MX_TIM2_Init(void)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  TIM_ClockConfigTypeDef sClockSourceConfig = &#123;0&#125;;</span><br><span class="line">  TIM_MasterConfigTypeDef sMasterConfig = &#123;0&#125;;</span><br><span class="line"></span><br><span class="line">  htim2.Instance = TIM2;</span><br><span class="line">  htim2.Init.Prescaler = 7200-1;</span><br><span class="line">  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;</span><br><span class="line">  htim2.Init.Period = 5000-1;</span><br><span class="line">  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;</span><br><span class="line">  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIM_Base_Init(&amp;htim2) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIM_ConfigClockSource(&amp;htim2, &amp;sClockSourceConfig) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;</span><br><span class="line">  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIMEx_MasterConfigSynchronization(&amp;htim2, &amp;sMasterConfig) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">HAL_TIM_Base_Start_IT(&amp;htim2);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">/* TIM5 init <span class="keyword">function</span> */</span><br><span class="line">void MX_TIM5_Init(void)</span><br><span class="line">&#123;</span><br><span class="line">  TIM_ClockConfigTypeDef sClockSourceConfig = &#123;0&#125;;</span><br><span class="line">  TIM_MasterConfigTypeDef sMasterConfig = &#123;0&#125;;</span><br><span class="line">  TIM_IC_InitTypeDef sConfigIC = &#123;0&#125;;</span><br><span class="line"></span><br><span class="line">  htim5.Instance = TIM5;</span><br><span class="line">  htim5.Init.Prescaler = 72-1;</span><br><span class="line">  htim5.Init.CounterMode = TIM_COUNTERMODE_UP;</span><br><span class="line">  htim5.Init.Period = 65535;</span><br><span class="line">  htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;</span><br><span class="line">  htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIM_Base_Init(&amp;htim5) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIM_ConfigClockSource(&amp;htim5, &amp;sClockSourceConfig) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIM_IC_Init(&amp;htim5) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;</span><br><span class="line">  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIMEx_MasterConfigSynchronization(&amp;htim5, &amp;sMasterConfig) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_RISING;</span><br><span class="line">  sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;</span><br><span class="line">  sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;</span><br><span class="line">  sConfigIC.ICFilter = 0;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIM_IC_ConfigChannel(&amp;htim5, &amp;sConfigIC, TIM_CHANNEL_2) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">HAL_TIM_Base_Start_IT(&amp;htim5);</span><br><span class="line">HAL_TIM_IC_Start_IT(&amp;htim5,TIM_CHANNEL_2);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  GPIO_InitTypeDef GPIO_InitStruct = &#123;0&#125;;</span><br><span class="line">  <span class="keyword">if</span>(tim_baseHandle-&gt;Instance==TIM2)</span><br><span class="line">  &#123;</span><br><span class="line">    /* TIM2 clock <span class="built_in">enable</span> */</span><br><span class="line">    __HAL_RCC_TIM2_CLK_ENABLE();</span><br><span class="line"></span><br><span class="line">    /* TIM2 interrupt Init */</span><br><span class="line">    HAL_NVIC_SetPriority(TIM2_IRQn, 10, 0);</span><br><span class="line">    HAL_NVIC_EnableIRQ(TIM2_IRQn);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(tim_baseHandle-&gt;Instance==TIM5)</span><br><span class="line">  &#123;</span><br><span class="line">    /* TIM5 clock <span class="built_in">enable</span> */</span><br><span class="line">    __HAL_RCC_TIM5_CLK_ENABLE();</span><br><span class="line"></span><br><span class="line">    __HAL_RCC_GPIOA_CLK_ENABLE();</span><br><span class="line">    /**TIM5 GPIO Configuration</span><br><span class="line">    PA1     ------&gt; TIM5_CH2</span><br><span class="line">    */</span><br><span class="line">    GPIO_InitStruct.Pin = GPIO_PIN_1;</span><br><span class="line">    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;</span><br><span class="line">    GPIO_InitStruct.Pull = GPIO_NOPULL;</span><br><span class="line">    HAL_GPIO_Init(GPIOA, &amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line">    /* TIM5 interrupt Init */</span><br><span class="line">    HAL_NVIC_SetPriority(TIM5_IRQn, 2, 0);</span><br><span class="line">    HAL_NVIC_EnableIRQ(TIM5_IRQn);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(tim_baseHandle-&gt;Instance==TIM2)</span><br><span class="line">  &#123;</span><br><span class="line">    /* Peripheral clock <span class="built_in">disable</span> */</span><br><span class="line">    __HAL_RCC_TIM2_CLK_DISABLE();</span><br><span class="line"></span><br><span class="line">    /* TIM2 interrupt Deinit */</span><br><span class="line">    HAL_NVIC_DisableIRQ(TIM2_IRQn);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(tim_baseHandle-&gt;Instance==TIM5)</span><br><span class="line">  &#123;</span><br><span class="line">    /* Peripheral clock <span class="built_in">disable</span> */</span><br><span class="line">    __HAL_RCC_TIM5_CLK_DISABLE();</span><br><span class="line"></span><br><span class="line">    /**TIM5 GPIO Configuration</span><br><span class="line">    PA1     ------&gt; TIM5_CH2</span><br><span class="line">    */</span><br><span class="line">    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);</span><br><span class="line"></span><br><span class="line">    /* TIM5 interrupt Deinit */</span><br><span class="line">    HAL_NVIC_DisableIRQ(TIM5_IRQn);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">static uint8_t RmtSta=0,RmtCnt=0;  </span><br><span class="line">uint8_t count=0;</span><br><span class="line">uint16_t Dval;</span><br><span class="line">static uint32_t RmtRec;</span><br><span class="line"></span><br><span class="line">void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(htim==(&amp;htim2))</span><br><span class="line">    &#123;</span><br><span class="line">    LED_switch(LED0);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">if</span>(htim==(&amp;htim5))</span><br><span class="line">&#123;</span><br><span class="line"> <span class="keyword">if</span>(RmtSta&amp;0x80)//1000 0000 start receiving</span><br><span class="line">&#123;</span><br><span class="line">RmtSta&amp;=~0X10; //cancle the rising mark</span><br><span class="line"><span class="keyword">if</span>((RmtSta&amp;0X0F)==0X00)RmtSta|=1&lt;&lt;<span class="string">6;//0100 0000 finishing a receive</span></span><br><span class="line"><span class="string">if((RmtSta&amp;0X0F)&lt;14)RmtSta++;</span></span><br><span class="line"><span class="string">else //(RmtSta&amp;0X0F)=15</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">RmtSta&amp;=~(1&lt;&lt;7);</span></span><br><span class="line"><span class="string">RmtSta&amp;=0XF0;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">if(htim==(&amp;htim5))</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">if (HAL_GPIO_ReadPin(GPIOA,GPIO_PIN_1))</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">TIM_RESET_CAPTUREPOLARITY(&amp;htim5,TIM_CHANNEL_2);</span></span><br><span class="line"><span class="string">TIM_SET_CAPTUREPOLARITY(&amp;htim5,TIM_CHANNEL_2,TIM_ICPOLARITY_FALLING);</span></span><br><span class="line"><span class="string">__HAL_TIM_SET_COUNTER(&amp;htim5,0);  </span></span><br><span class="line"><span class="string">  RmtSta|=0X10; //0001 0000</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">Dval=HAL_TIM_ReadCapturedValue(&amp;htim5,TIM_CHANNEL_2);</span></span><br><span class="line"><span class="string">TIM_RESET_CAPTUREPOLARITY(&amp;htim5,TIM_CHANNEL_2);</span></span><br><span class="line"><span class="string">TIM_SET_CAPTUREPOLARITY(&amp;htim5,TIM_CHANNEL_2,TIM_ICPOLARITY_RISING);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if (RmtSta&amp;0X80)//1000 0000</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">if(Dval&gt;300&amp;&amp;Dval&lt;800) //560us logic 0</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">RmtRec&lt;&lt;=1;</span></span><br><span class="line"><span class="string">RmtRec|=0;  </span></span><br><span class="line"><span class="string">count++;</span></span><br><span class="line"><span class="string">&#125;else if(Dval&gt;1400&amp;&amp;Dval&lt;1800) //1680us logic 1</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">RmtRec&lt;&lt;=1;</span></span><br><span class="line"><span class="string">RmtRec|=1;</span></span><br><span class="line"><span class="string">count++;</span></span><br><span class="line"><span class="string">&#125;else if(Dval&gt;2200&amp;&amp;Dval&lt;2600) //2.25us</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">RmtCnt++;</span></span><br><span class="line"><span class="string">RmtSta&amp;=0XF0;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if (count==32)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">printf(&quot; [%d %d %d %d]\r\n&quot;,(RmtRec&amp;0XFF000000)&gt;&gt;24,(RmtRec&amp;0X00FF0000)&gt;&gt;16,(RmtRec&amp;0X0000FF00)&gt;&gt;8,RmtRec&amp;0X000000FF);</span></span><br><span class="line"><span class="string">count=0;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">else if(Dval&gt;4200&amp;&amp;Dval&lt;4700)//4.5ms</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">RmtSta|=1&lt;&lt;7;//1000 0000</span></span><br><span class="line"><span class="string">RmtCnt=0;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  RmtSta&amp;=~(1&lt;&lt;4); //000(1&lt;-0) 0000</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">uint8_t get_radio(void)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">uint8_t check=0,add=0;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if (RmtSta&amp;0x40)//0100 0000</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">printf(&quot;start getting\r\n&quot;);</span></span><br><span class="line"><span class="string">if (((RmtRec&amp;0XFF000000)&gt;&gt;24==(~RmtRec&amp;0X00FF0000)&gt;&gt;16)&amp;&amp;((RmtRec&amp;0X0000FF00)&gt;&gt;8==(~RmtRec&amp;0X000000FF))) check=1;</span></span><br><span class="line"><span class="string">if (check) &#123;add=((RmtRec&amp;0X0000FF00)&gt;&gt;8); printf(&quot;add=%d\r\n&quot;,add);&#125;</span></span><br><span class="line"><span class="string">if (check==0||(RmtSta&amp;0x80)==0)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">RmtCnt=0;</span></span><br><span class="line"><span class="string">RmtSta&amp;=~(0x40);//0(1&lt;=0)00 0000</span></span><br><span class="line"><span class="string">printf(&quot;stop checking&quot;);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">return add;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><h3 id="tim-h"><a href="#tim-h" class="headerlink" title="tim.h"></a>tim.h</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#ifndef __TIM_H__</span></span><br><span class="line"><span class="comment">#define __TIM_H__</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#ifdef __cplusplus</span></span><br><span class="line">extern <span class="string">&quot;C&quot;</span> &#123;</span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"></span><br><span class="line">/* Includes ------------------------------------------------------------------*/</span><br><span class="line"><span class="comment">#include &quot;main.h&quot;</span></span><br><span class="line"></span><br><span class="line">extern TIM_HandleTypeDef htim2;</span><br><span class="line">extern TIM_HandleTypeDef htim5;</span><br><span class="line"></span><br><span class="line">void MX_TIM2_Init(void);</span><br><span class="line">void MX_TIM5_Init(void);</span><br><span class="line"></span><br><span class="line">uint8_t get_radio(void);</span><br><span class="line"></span><br><span class="line"><span class="comment">#ifdef __cplusplus</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#endif /* __TIM_H__ */</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>LED0做指示灯会循环开关。oled会显示按下的按钮cmd编号。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &quot;main.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;tim.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;usart.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;gpio.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#include &quot;LED\BSP_LED.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;OLED\oled.h&quot;</span></span><br><span class="line"></span><br><span class="line">/* USER CODE BEGIN PV */</span><br><span class="line">uint8_t startMessage[]=<span class="string">&quot;start communication \r\n&quot;</span>;</span><br><span class="line">uint8_t aRxBuffer[10];</span><br><span class="line"></span><br><span class="line">void SystemClock_Config(void);</span><br><span class="line"></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */</span><br><span class="line">  HAL_Init();</span><br><span class="line"></span><br><span class="line">  /* Configure the system clock */</span><br><span class="line">  SystemClock_Config();</span><br><span class="line"></span><br><span class="line">LED_Init();</span><br><span class="line">OLED_Init();</span><br><span class="line"></span><br><span class="line">  /* Initialize all configured peripherals */</span><br><span class="line">  MX_GPIO_Init();</span><br><span class="line">  MX_TIM2_Init();</span><br><span class="line">  MX_USART1_UART_Init();</span><br><span class="line">  MX_TIM5_Init();</span><br><span class="line">OLED_ShowString(0,0,<span class="string">&quot;Ray test&quot;</span>,24);</span><br><span class="line">OLED_ShowString(0,32,<span class="string">&quot;address=000&quot;</span>,16);</span><br><span class="line"></span><br><span class="line">OLED_Refresh_Gram();</span><br><span class="line"></span><br><span class="line">  /* Infinite loop */</span><br><span class="line">uint8_t radio_num=0;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (1)</span><br><span class="line">  &#123;</span><br><span class="line">radio_num=get_radio();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (radio_num)</span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowNum(64,32,radio_num,3,16);</span><br><span class="line">OLED_Refresh_Gram();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">HAL_Delay(10);</span><br><span class="line">radio_num=0;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32 ADC</title>
      <link href="/STM32/STM32-ADC-a3f09d1360b4/"/>
      <url>/STM32/STM32-ADC-a3f09d1360b4/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>将模电数据转换为数字信号后传输，一般返回12位数据，可用unit16_t接收数据。返回值最大4096，可通过（Voltage=value*3.3/4096）得到最大3.3v的结果。尽量不要测量大于3.3v的电压以防止烧坏ADC。</p><span id="more"></span><h2 id="ADC"><a href="#ADC" class="headerlink" title="ADC"></a>ADC</h2><p>选择ADC1，IN1，选中PA1端口。</p><p>Mode：indepandent mode 每个端口只会有一个测量通道</p><p>Data Alignment: 向左对其或向右对其，只要对应即可</p><p>注意：如果用中断实现的话adc初始化必须在tim初始化之前，不然会在中断里卡死。</p><h3 id="adc-c"><a href="#adc-c" class="headerlink" title="adc.c"></a>adc.c</h3><p>不需要改任何东西，生成就能用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &quot;adc.h&quot;</span></span><br><span class="line"></span><br><span class="line">ADC_HandleTypeDef hadc1;</span><br><span class="line"></span><br><span class="line">void MX_ADC1_Init(void)</span><br><span class="line">&#123;</span><br><span class="line">  ADC_ChannelConfTypeDef sConfig = &#123;0&#125;;</span><br><span class="line">  hadc1.Instance = ADC1;</span><br><span class="line">  hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;</span><br><span class="line">  hadc1.Init.ContinuousConvMode = DISABLE;</span><br><span class="line">  hadc1.Init.DiscontinuousConvMode = DISABLE;</span><br><span class="line">  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;</span><br><span class="line">  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;</span><br><span class="line">  hadc1.Init.NbrOfConversion = 1;</span><br><span class="line">  <span class="keyword">if</span> (HAL_ADC_Init(&amp;hadc1) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  sConfig.Channel = ADC_CHANNEL_1;</span><br><span class="line">  sConfig.Rank = ADC_REGULAR_RANK_1;</span><br><span class="line">  sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;</span><br><span class="line">  <span class="keyword">if</span> (HAL_ADC_ConfigChannel(&amp;hadc1, &amp;sConfig) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  GPIO_InitTypeDef GPIO_InitStruct = &#123;0&#125;;</span><br><span class="line">  <span class="keyword">if</span>(adcHandle-&gt;Instance==ADC1)</span><br><span class="line">  &#123;</span><br><span class="line">    __HAL_RCC_ADC1_CLK_ENABLE();</span><br><span class="line"></span><br><span class="line">    __HAL_RCC_GPIOA_CLK_ENABLE();</span><br><span class="line"></span><br><span class="line">    GPIO_InitStruct.Pin = GPIO_PIN_1;</span><br><span class="line">    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;</span><br><span class="line">    HAL_GPIO_Init(GPIOA, &amp;GPIO_InitStruct);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(adcHandle-&gt;Instance==ADC1)</span><br><span class="line">  &#123;</span><br><span class="line">    __HAL_RCC_ADC1_CLK_DISABLE();</span><br><span class="line"></span><br><span class="line">    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="adc-h"><a href="#adc-h" class="headerlink" title="adc.h"></a>adc.h</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#ifndef __ADC_H__</span></span><br><span class="line"><span class="comment">#define __ADC_H__</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#ifdef __cplusplus</span></span><br><span class="line">extern <span class="string">&quot;C&quot;</span> &#123;</span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"></span><br><span class="line">/* Includes ------------------------------------------------------------------*/</span><br><span class="line"><span class="comment">#include &quot;main.h&quot;</span></span><br><span class="line"></span><br><span class="line">extern ADC_HandleTypeDef hadc1;</span><br><span class="line"></span><br><span class="line">void MX_ADC1_Init(void);</span><br><span class="line"></span><br><span class="line"><span class="comment">#ifdef __cplusplus</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#endif /* __ADC_H__ */</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>加入oled.h来实时显示数值。会实时显示PA1处电压。</p><p>HAL_ADC_Start(&amp;hadc1)； 打开adc</p><p>HAL_ADC_PollForConversion(&amp;hadc1, 0xFF); 等待读取完成</p><p>adc_value=HAL_ADC_GetValue(&amp;hadc1); 读数据</p><p>HAL_ADC_Stop(&amp;hadc1); 关闭</p><p>需注意有时候显示上一个时段数据却误以为是最新数据，需仔细分析时序逻辑。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &quot;main.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;adc.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;gpio.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#include &quot;LED\BSP_LED.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;OLED\oled.h&quot;</span></span><br><span class="line"></span><br><span class="line">uint8_t startMessage[]=<span class="string">&quot;start communication \r\n&quot;</span>;</span><br><span class="line">uint8_t aRxBuffer[10];</span><br><span class="line"></span><br><span class="line">void SystemClock_Config(void);</span><br><span class="line"></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">uint16_t adc_value=0;</span><br><span class="line"><span class="built_in">float</span> adc_cal=0.0;</span><br><span class="line"></span><br><span class="line">   HAL_Init();</span><br><span class="line"></span><br><span class="line">  SystemClock_Config();</span><br><span class="line"></span><br><span class="line">LED_Init();</span><br><span class="line">OLED_Init();</span><br><span class="line"></span><br><span class="line">  MX_GPIO_Init();</span><br><span class="line">  MX_ADC1_Init();</span><br><span class="line"></span><br><span class="line">OLED_ShowString(0,0,<span class="string">&quot;ADC test&quot;</span>,24);</span><br><span class="line">OLED_ShowString(0,32,<span class="string">&quot;adc=0000&quot;</span>,16);</span><br><span class="line">OLED_ShowString(0,48,<span class="string">&quot;adc/3.3V=0.000&quot;</span>,16);</span><br><span class="line">OLED_Refresh_Gram();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (1)</span><br><span class="line">  &#123;</span><br><span class="line">LED_switch(LED0);</span><br><span class="line">HAL_Delay(500);</span><br><span class="line"></span><br><span class="line">HAL_ADC_Start(&amp;hadc1);</span><br><span class="line">HAL_ADC_PollForConversion(&amp;hadc1, 0xFF);</span><br><span class="line">adc_value=HAL_ADC_GetValue(&amp;hadc1);</span><br><span class="line">adc_cal=(<span class="built_in">float</span>)adc_value*3.3/4096;</span><br><span class="line">OLED_ShowNum(32,32,adc_value,4,16);</span><br><span class="line">OLED_ShowNum(72,48,(uint16_t)adc_cal,1,16);</span><br><span class="line">OLED_ShowNum(88,48,(uint16_t)((adc_cal-(uint16_t)adc_cal)*1000),3,16);</span><br><span class="line">HAL_ADC_Stop(&amp;hadc1);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">OLED_Refresh_Gram();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="内置温度测量器"><a href="#内置温度测量器" class="headerlink" title="内置温度测量器"></a>内置温度测量器</h2><p>STM32F10系列有内部温度计可以通过内部通道测量。在adc中选择Temperature（或者应该是IN16）开启。</p><p>公式：T=(V25-Vout)/Avg_Slop(V)+25</p><p>数据可在datasheet 113页看到。通常V25=1.43V，Avg_Slop=0.0043V/°C</p><p>刚开板子会出现小于10°的情况，放太阳下照照就上来了。</p>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32 OLED(SSD1306)</title>
      <link href="/STM32/STM32-OLED-SSD1306-39011672d22e/"/>
      <url>/STM32/STM32-OLED-SSD1306-39011672d22e/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>此运用的硬件是ATK 096 OLED，基于SSD1306的OLED。这里的driver全复制于原子科技的例码。</p><p>注意：每次设置完内容后必须加上（OLED_Refresh_Gram();）刷新。</p><span id="more"></span><h3 id="oled-c"><a href="#oled-c" class="headerlink" title="oled.c"></a>oled.c</h3><p>CS：拉低时开始片选oled<br>WR：写入数据<br>RD：读取数据<br>D[7:0]：数据位<br>RST：复位<br>DC：0为命令位，1为数据位</p><p>以写入命令为例：DC（RS）位拉低，CS拉低，WR拉低开始读取D[7:0]数据，然后再全部拉高完成。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &quot;oled.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;stdlib.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;delay.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;oledfont.h&quot;</span></span><br><span class="line"> </span><br><span class="line">//刷新屏幕</span><br><span class="line">void OLED_Refresh_Gram(void)</span><br><span class="line">&#123;</span><br><span class="line">u8 i,n;    </span><br><span class="line"><span class="keyword">for</span>(i=0;i&lt;8;i++)  </span><br><span class="line">&#123;  </span><br><span class="line">OLED_WR_Byte (0xb0+i,OLED_CMD); //页数设置</span><br><span class="line">OLED_WR_Byte (0x00,OLED_CMD);//低八位</span><br><span class="line">OLED_WR_Byte (0x10,OLED_CMD);//高八位</span><br><span class="line"><span class="keyword">for</span>(n=0;n&lt;128;n++)OLED_WR_Byte(OLED_GRAM[n][i],OLED_DATA); </span><br><span class="line">&#125;   </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#if OLED_MODE==1 //8080模式</span></span><br><span class="line"> </span><br><span class="line">//cmd=1: data mode, 0: <span class="built_in">command</span> mode</span><br><span class="line">//dat: required data</span><br><span class="line">void OLED_WR_Byte(u8 dat,u8 cmd)</span><br><span class="line">&#123;</span><br><span class="line">DATAOUT(dat);</span><br><span class="line"> OLED_RS=cmd;</span><br><span class="line">OLED_CS=0;</span><br><span class="line">OLED_WR=0;  </span><br><span class="line">OLED_WR=1;   </span><br><span class="line">OLED_CS=1;   </span><br><span class="line">OLED_RS=1;   </span><br><span class="line">&#125;         </span><br><span class="line"><span class="comment">#else //ISP mode</span></span><br><span class="line">void OLED_WR_Byte(u8 dat,u8 cmd)</span><br><span class="line">&#123;</span><br><span class="line">u8 i;  </span><br><span class="line">OLED_RS=cmd;</span><br><span class="line">OLED_CS=0;  </span><br><span class="line"><span class="keyword">for</span>(i=0;i&lt;8;i++)</span><br><span class="line">&#123;  </span><br><span class="line">OLED_SCLK=0;</span><br><span class="line"><span class="keyword">if</span>(dat&amp;0x80)OLED_SDIN=1;</span><br><span class="line"><span class="keyword">else</span> OLED_SDIN=0;</span><br><span class="line">OLED_SCLK=1;</span><br><span class="line">dat&lt;&lt;=1;   </span><br><span class="line">&#125; </span><br><span class="line">OLED_CS=1;  </span><br><span class="line">OLED_RS=1;     </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"></span><br><span class="line">//开启显示    </span><br><span class="line">void OLED_Display_On(void)</span><br><span class="line">&#123;</span><br><span class="line">OLED_WR_Byte(0X8D,OLED_CMD); //设置电荷泵</span><br><span class="line">OLED_WR_Byte(0X14,OLED_CMD); //开启</span><br><span class="line">OLED_WR_Byte(0XAF,OLED_CMD);//开启显示</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//关闭显示</span><br><span class="line">void OLED_Display_Off(void)</span><br><span class="line">&#123;</span><br><span class="line">OLED_WR_Byte(0X8D,OLED_CMD);</span><br><span class="line">OLED_WR_Byte(0X10,OLED_CMD);</span><br><span class="line">OLED_WR_Byte(0XAE,OLED_CMD);</span><br><span class="line">&#125;    </span><br><span class="line"></span><br><span class="line">//清屏  </span><br><span class="line">void OLED_Clear(void)  </span><br><span class="line">&#123;  </span><br><span class="line">u8 i,n;  </span><br><span class="line"><span class="keyword">for</span>(i=0;i&lt;8;i++)<span class="keyword">for</span>(n=0;n&lt;128;n++)OLED_GRAM[n][i]=0X00;  </span><br><span class="line">OLED_Refresh_Gram();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//画点   </span><br><span class="line">//t=1: fill, t=0: unfill</span><br><span class="line">void OLED_DrawPoint(u8 x,u8 y,u8 t)</span><br><span class="line">&#123;</span><br><span class="line">u8 pos,bx,temp=0;</span><br><span class="line"><span class="keyword">if</span>(x&gt;127||y&gt;63)<span class="built_in">return</span>;</span><br><span class="line">pos=7-y/8;</span><br><span class="line">bx=y%8;</span><br><span class="line">temp=1&lt;&lt;(7-bx);</span><br><span class="line"><span class="keyword">if</span>(t)OLED_GRAM[x][pos]|=temp;</span><br><span class="line"><span class="keyword">else</span> OLED_GRAM[x][pos]&amp;=~temp;    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//填块</span><br><span class="line">//t=1: fill, t=0: unfill</span><br><span class="line">void OLED_Fill(u8 x1,u8 y1,u8 x2,u8 y2,u8 dot)  </span><br><span class="line">&#123;  </span><br><span class="line">u8 x,y;  </span><br><span class="line"><span class="keyword">for</span>(x=x1;x&lt;=x2;x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(y=y1;y&lt;=y2;y++)OLED_DrawPoint(x,y,dot);</span><br><span class="line">&#125;    </span><br><span class="line">OLED_Refresh_Gram();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//显示字符</span><br><span class="line">//size=12 or 16 or 24</span><br><span class="line">//mode=1: 正常显示，mode=0: 反向显示</span><br><span class="line">void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 size,u8 mode)</span><br><span class="line">&#123;          </span><br><span class="line">u8 temp,t,t1;</span><br><span class="line">u8 y0=y;</span><br><span class="line">u8 csize=(size/8+((size%8)?1:0))*(size/2);</span><br><span class="line">chr=chr-<span class="string">&#x27; &#x27;</span>; </span><br><span class="line">    <span class="keyword">for</span>(t=0;t&lt;csize;t++)</span><br><span class="line">    &#123;   </span><br><span class="line"><span class="keyword">if</span>(size==12)temp=asc2_1206[chr][t];</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(size==16)temp=asc2_1608[chr][t];</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(size==24)temp=asc2_2412[chr][t];</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">return</span>;</span><br><span class="line">        <span class="keyword">for</span>(t1=0;t1&lt;8;t1++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(temp&amp;0x80)OLED_DrawPoint(x,y,mode);</span><br><span class="line"><span class="keyword">else</span> OLED_DrawPoint(x,y,!mode);</span><br><span class="line">temp&lt;&lt;=1;</span><br><span class="line">y++;</span><br><span class="line"><span class="keyword">if</span>((y-y0)==size)</span><br><span class="line">&#123;</span><br><span class="line">y=y0;</span><br><span class="line">x++;</span><br><span class="line"><span class="built_in">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;   </span><br><span class="line">    &#125;          </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">u32 mypow(u8 m,u8 n)</span><br><span class="line">&#123;</span><br><span class="line">u32 result=1; </span><br><span class="line"><span class="keyword">while</span>(n--)result*=m;    </span><br><span class="line"><span class="built_in">return</span> result;</span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line">//显示数字</span><br><span class="line">//num: 数字（0-429467295）</span><br><span class="line">//len：位数</span><br><span class="line">void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 size)</span><br><span class="line">&#123;         </span><br><span class="line">u8 t,temp;</span><br><span class="line">u8 enshow=0;   </span><br><span class="line"><span class="keyword">for</span>(t=0;t&lt;len;t++)</span><br><span class="line">&#123;</span><br><span class="line">temp=(num/mypow(10,len-t-1))%10;</span><br><span class="line"><span class="keyword">if</span>(enshow==0&amp;&amp;t&lt;(len-1))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(temp==0)</span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowChar(x+(size/2)*t,y,<span class="string">&#x27; &#x27;</span>,size,1);</span><br><span class="line"><span class="built_in">continue</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> enshow=1; </span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"> OLED_ShowChar(x+(size/2)*t,y,temp+<span class="string">&#x27;0&#x27;</span>,size,1); </span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">//打印字符串</span><br><span class="line">void OLED_ShowString(u8 x,u8 y,const u8 *p,u8 size)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span>((*p&lt;=<span class="string">&#x27;~&#x27;</span>)&amp;&amp;(*p&gt;=<span class="string">&#x27; &#x27;</span>))</span><br><span class="line">    &#123;       </span><br><span class="line">        <span class="keyword">if</span>(x&gt;(128-(size/2)))&#123;x=0;y+=size;&#125;</span><br><span class="line">        <span class="keyword">if</span>(y&gt;(64-size))&#123;y=x=0;OLED_Clear();&#125;</span><br><span class="line">        OLED_ShowChar(x,y,*p,size,1); </span><br><span class="line">        x+=size/2;</span><br><span class="line">        p++;</span><br><span class="line">    &#125;  </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">void OLED_Init(void)</span><br><span class="line">&#123;   </span><br><span class="line">    GPIO_InitTypeDef  GPIO_Initure;</span><br><span class="line"></span><br><span class="line">    __HAL_RCC_GPIOB_CLK_ENABLE();   </span><br><span class="line">    __HAL_RCC_GPIOC_CLK_ENABLE();  </span><br><span class="line"></span><br><span class="line"><span class="comment">#if OLED_MODE==1/8080 mode</span></span><br><span class="line"></span><br><span class="line">//PC6,7,8,9  </span><br><span class="line">    GPIO_Initure.Pin=GPIO_PIN_6|GPIO_PIN_7|\</span><br><span class="line"> GPIO_PIN_8|GPIO_PIN_9; </span><br><span class="line">    GPIO_Initure.Mode=GPIO_MODE_OUTPUT_PP;</span><br><span class="line">    GPIO_Initure.Pull=GPIO_PULLUP;  </span><br><span class="line">    GPIO_Initure.Speed=GPIO_SPEED_FREQ_HIGH;</span><br><span class="line">    HAL_GPIO_Init(GPIOC,&amp;GPIO_Initure);   </span><br><span class="line">//PB0-7</span><br><span class="line">    GPIO_Initure.Pin=GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3|\</span><br><span class="line"> GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;        </span><br><span class="line">    HAL_GPIO_Init(GPIOB,&amp;GPIO_Initure);   </span><br><span class="line"></span><br><span class="line">__HAL_AFIO_REMAP_SWJ_DISABLE();</span><br><span class="line"></span><br><span class="line">OLED_WR=1;</span><br><span class="line">  OLED_RD=1; </span><br><span class="line"><span class="comment">#else</span></span><br><span class="line"> </span><br><span class="line">    GPIO_Initure.Pin=GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_7;</span><br><span class="line">    GPIO_Initure.Mode=GPIO_MODE_OUTPUT_PP;</span><br><span class="line">    GPIO_Initure.Pull=GPIO_PULLUP; </span><br><span class="line">    GPIO_Initure.Speed=GPIO_SPEED_FREQ_HIGH;</span><br><span class="line">    HAL_GPIO_Init(GPIOB,&amp;GPIO_Initure); </span><br><span class="line"></span><br><span class="line">    GPIO_Initure.Pin=GPIO_PIN_8|GPIO_PIN_9;</span><br><span class="line">HAL_GPIO_Init(GPIOC,&amp;GPIO_Initure);</span><br><span class="line"></span><br><span class="line">OLED_SDIN=1;</span><br><span class="line">OLED_SCLK=1;</span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line">OLED_CS=1;</span><br><span class="line">OLED_RS=1; </span><br><span class="line">  </span><br><span class="line">OLED_WR_Byte(0xAE,OLED_CMD);</span><br><span class="line">OLED_WR_Byte(0xD5,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(80,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0xA8,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0X3F,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0xD3,OLED_CMD);</span><br><span class="line">OLED_WR_Byte(0X00,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0x40,OLED_CMD);     </span><br><span class="line">OLED_WR_Byte(0x8D,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0x14,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0x20,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0x02,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0xA1,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0xC0,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0xDA,OLED_CMD);</span><br><span class="line">OLED_WR_Byte(0x12,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0x81,OLED_CMD); //亮度</span><br><span class="line">OLED_WR_Byte(0xEF,OLED_CMD); //1-255</span><br><span class="line">OLED_WR_Byte(0xD9,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0xf1,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0xDB,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0x30,OLED_CMD);</span><br><span class="line">OLED_WR_Byte(0xA4,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0xA6,OLED_CMD);        </span><br><span class="line">OLED_WR_Byte(0xAF,OLED_CMD); </span><br><span class="line">OLED_Clear();</span><br><span class="line">&#125;  </span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="oled-h"><a href="#oled-h" class="headerlink" title="oled.h"></a>oled.h</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#ifndef __OLED_H</span></span><br><span class="line"><span class="comment">#define __OLED_H</span></span><br><span class="line"><span class="comment">#include &quot;sys.h&quot;</span></span><br><span class="line"></span><br><span class="line">//0:四线模式</span><br><span class="line">//1:8080模式</span><br><span class="line"><span class="comment">#define OLED_MODE 1</span></span><br><span class="line">      </span><br><span class="line"><span class="comment">#define OLED_CS     PCout(9)</span></span><br><span class="line">//<span class="comment">#define OLED_RST  PGout(15)//已有reset位</span></span><br><span class="line"><span class="comment">#define OLED_RS     PCout(8)</span></span><br><span class="line"><span class="comment">#define OLED_WR     PCout(7)</span></span><br><span class="line"><span class="comment">#define OLED_RD     PCout(6)</span></span><br><span class="line"> </span><br><span class="line">//PB0~7,数据线</span><br><span class="line"><span class="comment">#define DATAOUT(x) GPIOB-&gt;ODR=(GPIOB-&gt;ODR&amp;0xff00)|(x&amp;0x00FF); </span></span><br><span class="line"></span><br><span class="line">//SPI通信</span><br><span class="line"><span class="comment">#define OLED_SCLK   PBout(0)</span></span><br><span class="line"><span class="comment">#define OLED_SDIN   PBout(1)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#define OLED_CMD  0//命令位</span></span><br><span class="line"><span class="comment">#define OLED_DATA 1//数据位</span></span><br><span class="line"></span><br><span class="line">void OLED_WR_Byte(u8 dat,u8 cmd);    </span><br><span class="line">void OLED_Display_On(void);</span><br><span class="line">void OLED_Display_Off(void);</span><br><span class="line">void OLED_Refresh_Gram(void);   </span><br><span class="line">       </span><br><span class="line">void OLED_Init(void);</span><br><span class="line">void OLED_Clear(void);</span><br><span class="line">void OLED_DrawPoint(u8 x,u8 y,u8 t);</span><br><span class="line">void OLED_Fill(u8 x1,u8 y1,u8 x2,u8 y2,u8 dot);</span><br><span class="line">void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 size,u8 mode);</span><br><span class="line">void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 size);</span><br><span class="line">void OLED_ShowString(u8 x,u8 y,const u8 *p,u8 size);</span><br><span class="line"><span class="comment">#endif</span></span><br></pre></td></tr></table></figure><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32 串口通信</title>
      <link href="/STM32/STM32-%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1-f9e2941ae957/"/>
      <url>/STM32/STM32-%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1-f9e2941ae957/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>通过USART和上位或下位机通信。通过schematic diagram可以发现USB转串口接口PA9，PA10正是由USART1控制。这里选择USART1，和上位机电脑进行通信。</p><span id="more"></span><h2 id="非中断通信"><a href="#非中断通信" class="headerlink" title="非中断通信"></a>非中断通信</h2><p>在CUBE MX里选择USART1<br>Mode: Asynchronous<br>Baud Rate: 115200 (只要与接受口一样就行)<br>Word Length: 8 Bits</p><p>生成后只要调用两函数就行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">uint8_t aRxBuffer[10];</span><br><span class="line"></span><br><span class="line">HAL_UART_Receive(&amp;huart1, (uint8_t *)aRxBuffer, 10, 0xffff);</span><br><span class="line">HAL_UART_Transmit(&amp;huart1, (uint8_t *)aRxBuffer, sizeof(aRxBuffer), 0xffff);</span><br></pre></td></tr></table></figure><p>就可以接收上位机信息并发回去。但因为会中断其他所有进程，不灵活，所有基本不用。</p><h2 id="printf-重定向"><a href="#printf-重定向" class="headerlink" title="printf 重定向"></a>printf 重定向</h2><p>可以利用usb转串口将printf里的内容重定向到串口上，显示在上位机里。</p><p>printf函数内部会调用fputc()函数，如果重定义此函数并加入HAL_UART_Transmit函数即可在串口打印。</p><p>在usart.h内添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &quot;stdio.h&quot;</span></span><br></pre></td></tr></table></figure><p>在usart.c内添加从定向函数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#ifdef __GNUC__</span></span><br><span class="line">  /* With GCC/RAISONANCE, small <span class="built_in">printf</span> (option LD Linker-&gt;Libraries-&gt;Small <span class="built_in">printf</span></span><br><span class="line">     <span class="built_in">set</span> to <span class="string">&#x27;Yes&#x27;</span>) calls __io_putchar() */</span><br><span class="line">  <span class="comment">#define PUTCHAR_PROTOTYPE int __io_putchar(int ch)</span></span><br><span class="line"><span class="comment">#else</span></span><br><span class="line">  <span class="comment">#define PUTCHAR_PROTOTYPE int fputc(int ch, FILE *f)</span></span><br><span class="line"><span class="comment">#endif /* __GNUC__ */</span></span><br><span class="line">/**</span><br><span class="line">  * @brief  Retargets the C library <span class="built_in">printf</span> <span class="keyword">function</span> to the USART.</span><br><span class="line">  * @param  None</span><br><span class="line">  * @retval None</span><br><span class="line">  */</span><br><span class="line">PUTCHAR_PROTOTYPE</span><br><span class="line">&#123;</span><br><span class="line">  /* Place your implementation of fputc here */</span><br><span class="line">  /* e.g. write a character to the EVAL_COM1 and Loop until the end of transmission */</span><br><span class="line">  HAL_UART_Transmit(&amp;huart1, (uint8_t *)&amp;ch, 1, 0xFFFF);</span><br><span class="line">  </span><br><span class="line">  <span class="built_in">return</span> ch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：如果没选择semiLib库需要在usart.c内额外添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">void _sys_exit(int x)</span><br><span class="line">&#123;</span><br><span class="line">    x = x;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">void _ttywrch(int x)</span><br><span class="line">&#123;</span><br><span class="line">    x = x;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">struct __FILE</span><br><span class="line">&#123;</span><br><span class="line">    int handle;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line">FILE __stdout;    </span><br></pre></td></tr></table></figure><p>否则程序会在printf函数处卡死。</p><p>现在在主函数输入 printf(“test\r\n”); 即可通讯。</p><h2 id="中断通信"><a href="#中断通信" class="headerlink" title="中断通信"></a>中断通信</h2><p>生成代码时在NVIC enable通道设置优先级。由于暂不清楚项目中通信的流程顾先放过，之后熟悉了再来完善。</p>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32 中断</title>
      <link href="/STM32/STM32-%E4%B8%AD%E6%96%AD-acfed473a8b2/"/>
      <url>/STM32/STM32-%E4%B8%AD%E6%96%AD-acfed473a8b2/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>此文会记录stm32中外部中断和定时器中断的使用方法及注意事项。中断可以一定程度上模拟计算机中的多线程进程，但需要特别注意优先级问题（特别是HAL_DELAY函数优先级冲突导致的卡死问题）。</p><span id="more"></span><h2 id="外部中断"><a href="#外部中断" class="headerlink" title="外部中断"></a>外部中断</h2><p>可通过外部按钮，IO口等外部控制中断。</p><h3 id="EXTI-c"><a href="#EXTI-c" class="headerlink" title="EXTI.c"></a>EXTI.c</h3><p>选择IO口后选择”GPIO_EXTIx”,根据端点情况GPIP mode选rising edge或falling edge。进入NVIC enable对应通道，设置优先级后生成代码。</p><p>完成后加入”void EXTIx_IRQHandler(void)”函数（注意EXTI0会在system文件中重复定义，注销掉即可），”void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)”函数，这两个函数名是确定的，不能改变。注意不要使用HAL_DELAY函数，解决方法之后有机会去研究下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &quot;EXIT\BSP_EXTI.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#include &quot;KEY\BSP_KEY.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;LED\BSP_LED.h&quot;</span></span><br><span class="line"></span><br><span class="line">/** Configure pins as</span><br><span class="line">        * Analog</span><br><span class="line">        * Input</span><br><span class="line">        * Output</span><br><span class="line">        * EVENT_OUT</span><br><span class="line">        * EXTI</span><br><span class="line">*/</span><br><span class="line">void EXTI_Init(void)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  GPIO_InitTypeDef GPIO_InitStruct = &#123;0&#125;;</span><br><span class="line"></span><br><span class="line">  /* GPIO Ports Clock Enable */</span><br><span class="line">  __HAL_RCC_GPIOD_CLK_ENABLE();</span><br><span class="line">  __HAL_RCC_GPIOA_CLK_ENABLE();</span><br><span class="line"></span><br><span class="line">  /*Configure GPIO pin : PA0 */</span><br><span class="line">  GPIO_InitStruct.Pin = GPIO_PIN_0;</span><br><span class="line">  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;</span><br><span class="line">  GPIO_InitStruct.Pull = GPIO_PULLDOWN;</span><br><span class="line">  HAL_GPIO_Init(GPIOA, &amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line">  /* EXTI interrupt init*/</span><br><span class="line">  HAL_NVIC_SetPriority(EXTI0_IRQn, 2, 0);</span><br><span class="line">  HAL_NVIC_EnableIRQ(EXTI0_IRQn);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void EXTI0_IRQHandler(void)</span><br><span class="line">&#123;</span><br><span class="line">HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)</span><br><span class="line">&#123;</span><br><span class="line">    //HAL_Delay(100); //!!! dont use it !!!</span><br><span class="line">    switch(GPIO_Pin)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> GPIO_PIN_0:</span><br><span class="line"><span class="keyword">if</span>(WK_UP==1)&#123;</span><br><span class="line">LED_switch(LED0);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="EXTI-h"><a href="#EXTI-h" class="headerlink" title="EXTI.h"></a>EXTI.h</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#ifndef __BSP_EXTI_H__</span></span><br><span class="line"><span class="comment">#define __BSP_EXTI_H__</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#ifdef __cplusplus</span></span><br><span class="line">extern <span class="string">&quot;C&quot;</span> &#123;</span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"></span><br><span class="line">/* Includes ------------------------------------------------------------------*/</span><br><span class="line"><span class="comment">#include &quot;main.h&quot;</span></span><br><span class="line"></span><br><span class="line">void EXTI_Init(void);</span><br><span class="line"></span><br><span class="line"><span class="comment">#ifdef __cplusplus</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"><span class="comment">#endif /*__BSP_EXTI_H__ */</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>按下WK_UP按钮会变换LED0状态。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &quot;main.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#include &quot;KEY\BSP_KEY.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;LED\BSP_LED.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;EXTI\BSP_EXTI.h&quot;</span></span><br><span class="line"></span><br><span class="line">void SystemClock_Config(void);</span><br><span class="line"></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">   HAL_Init();</span><br><span class="line"></span><br><span class="line">  SystemClock_Config();</span><br><span class="line"></span><br><span class="line">  EXTI_Init();</span><br><span class="line">  LED_Init();</span><br><span class="line">  KEY_Init();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (1)</span><br><span class="line">  &#123;</span><br><span class="line">HAL_Delay(500);</span><br><span class="line">LED_switch(LED1);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="定时器中断"><a href="#定时器中断" class="headerlink" title="定时器中断"></a>定时器中断</h2><p>通过内部计时定时中断。</p><p>在Cube MX选择定时器（TIM2为例）,<br>Clock Source: Internal Clock<br>Prescaler: 7200-1<br>Counter Period: 5000-1<br>auto-reload preload: Enable (important)<br>(Tout=((arr+1)<em>(psc+1))<em>Tclk)=(5000</em>7200)</em>(1/72Mhz)=0.5s,会每隔500ms中断下循环。但现实却有细微误差，和HAL_DELAY(500)同时运行会发现频率有细微差别，初步估计是内部语句运行误差。</p><p>别忘记在NVIC中enable interrupt并设定优先级。</p><h3 id="tim-c"><a href="#tim-c" class="headerlink" title="tim.c"></a>tim.c</h3><p>需自行加上（void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)）回调函数，同时在initialization函数末尾加上（HAL_TIM_Base_Start_IT(&amp;htim2);）开启计时器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &quot;tim.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#include &quot;LED\BSP_LED.h&quot;</span></span><br><span class="line"></span><br><span class="line">TIM_HandleTypeDef htim2;</span><br><span class="line"></span><br><span class="line">/* TIM2 init <span class="keyword">function</span> */</span><br><span class="line">void MX_TIM2_Init(void)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  TIM_ClockConfigTypeDef sClockSourceConfig = &#123;0&#125;;</span><br><span class="line">  TIM_MasterConfigTypeDef sMasterConfig = &#123;0&#125;;</span><br><span class="line"></span><br><span class="line">  htim2.Instance = TIM2;</span><br><span class="line">  htim2.Init.Prescaler = 7200-1;</span><br><span class="line">  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;</span><br><span class="line">  htim2.Init.Period = 5000-1;</span><br><span class="line">  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;</span><br><span class="line">  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIM_Base_Init(&amp;htim2) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIM_ConfigClockSource(&amp;htim2, &amp;sClockSourceConfig) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;</span><br><span class="line">  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIMEx_MasterConfigSynchronization(&amp;htim2, &amp;sMasterConfig) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">HAL_TIM_Base_Start_IT(&amp;htim2);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(tim_baseHandle-&gt;Instance==TIM2)</span><br><span class="line">  &#123;</span><br><span class="line">    /* TIM2 clock <span class="built_in">enable</span> */</span><br><span class="line">    __HAL_RCC_TIM2_CLK_ENABLE();</span><br><span class="line"></span><br><span class="line">    /* TIM2 interrupt Init */</span><br><span class="line">    HAL_NVIC_SetPriority(TIM2_IRQn, 2, 0);</span><br><span class="line">    HAL_NVIC_EnableIRQ(TIM2_IRQn);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(tim_baseHandle-&gt;Instance==TIM2)</span><br><span class="line">  &#123;</span><br><span class="line">    /* Peripheral clock <span class="built_in">disable</span> */</span><br><span class="line">    __HAL_RCC_TIM2_CLK_DISABLE();</span><br><span class="line"></span><br><span class="line">    /* TIM2 interrupt Deinit */</span><br><span class="line">    HAL_NVIC_DisableIRQ(TIM2_IRQn);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(htim==(&amp;htim2))</span><br><span class="line">    &#123;</span><br><span class="line">        LED_switch(LED0);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="tim-h"><a href="#tim-h" class="headerlink" title="tim.h"></a>tim.h</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#ifndef __TIM_H__</span></span><br><span class="line"><span class="comment">#define __TIM_H__</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#ifdef __cplusplus</span></span><br><span class="line">extern <span class="string">&quot;C&quot;</span> &#123;</span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"></span><br><span class="line">/* Includes ------------------------------------------------------------------*/</span><br><span class="line"><span class="comment">#include &quot;main.h&quot;</span></span><br><span class="line"></span><br><span class="line">extern TIM_HandleTypeDef htim2;</span><br><span class="line"></span><br><span class="line">void MX_TIM2_Init(void);</span><br><span class="line"></span><br><span class="line"><span class="comment">#ifdef __cplusplus</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#endif /* __TIM_H__ */</span></span><br></pre></td></tr></table></figure><h3 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h3><p>LED0和LED1会同时闪烁，LED0为定时器中断控制。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &quot;main.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;tim.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;gpio.h&quot;</span></span><br><span class="line"></span><br><span class="line">/* Private includes ----------------------------------------------------------*/</span><br><span class="line"><span class="comment">#include &quot;LED\BSP_LED.h&quot;</span></span><br><span class="line"></span><br><span class="line">/* Private typedef -----------------------------------------------------------*/</span><br><span class="line">void SystemClock_Config(void);</span><br><span class="line"></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  /* MCU Configuration--------------------------------------------------------*/</span><br><span class="line"></span><br><span class="line">  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */</span><br><span class="line">  HAL_Init();</span><br><span class="line"></span><br><span class="line">  /* Configure the system clock */</span><br><span class="line">  SystemClock_Config();</span><br><span class="line"></span><br><span class="line">  /* Initialize all configured peripherals */</span><br><span class="line">  MX_GPIO_Init();</span><br><span class="line">  MX_TIM2_Init();</span><br><span class="line">LED_Init();</span><br><span class="line"></span><br><span class="line">  /* Infinite loop */</span><br><span class="line">  <span class="keyword">while</span> (1)</span><br><span class="line">  &#123;</span><br><span class="line">HAL_Delay(500);</span><br><span class="line">LED_switch(LED1);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32 PWM设置</title>
      <link href="/STM32/STM32-PWM%E8%AE%BE%E7%BD%AE-2415bde2d729/"/>
      <url>/STM32/STM32-PWM%E8%AE%BE%E7%BD%AE-2415bde2d729/</url>
      
        <content type="html"><![CDATA[<h2 id="PWM"><a href="#PWM" class="headerlink" title="PWM"></a>PWM</h2><p>通过控制方波中低平信号长度来控制LED亮度或电机速度。</p><span id="more"></span><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>Timers内选择一个定时器（以TIM1为例）。Clock Source选择Internal Clock, 选择一个Channel（例如Channel 1）选择PWM Generation CH1, 这时PA8就被选定，我们可以用LED0测试PWM效果了</p><p>Prescaler: 72-1<br>Period: 1000-1<br>Pulse: 500</p><p>这样frequency大致为1000hz（PWMf=TIMf/(prescaler+1)*(Period+1)）</p><h3 id="PWM-c"><a href="#PWM-c" class="headerlink" title="PWM.c"></a>PWM.c</h3><p>需自行加入TIM_SetTIM1Compare函数，更改CCR值。<br>在Init函数结尾加上 HAL_TIM_PWM_Start(&amp;htim1, TIM_CHANNEL_1); 开启pwm</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br></pre></td><td class="code"><pre><span class="line">//TIM1 channel 1, works on PA8</span><br><span class="line">//default psc=72-1, arr=1000-1, pulse=500(almost 50%) </span><br><span class="line">//<span class="keyword">in</span> this <span class="keyword">case</span> the frequency is 1000hz</span><br><span class="line"></span><br><span class="line"><span class="comment">#include &quot;PWM\BSP_PWM.h&quot;</span></span><br><span class="line"></span><br><span class="line">/* USER CODE BEGIN 0 */</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/* USER CODE END 0 */</span><br><span class="line"></span><br><span class="line">TIM_HandleTypeDef htim1;</span><br><span class="line"></span><br><span class="line">/* TIM1 init <span class="keyword">function</span> */</span><br><span class="line">void MX_TIM1_Init(void)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  /* USER CODE BEGIN TIM1_Init 0 */</span><br><span class="line">  /* USER CODE END TIM1_Init 0 */</span><br><span class="line"></span><br><span class="line">  TIM_MasterConfigTypeDef sMasterConfig = &#123;0&#125;;</span><br><span class="line">  TIM_OC_InitTypeDef sConfigOC = &#123;0&#125;;</span><br><span class="line">  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = &#123;0&#125;;</span><br><span class="line"></span><br><span class="line">  /* USER CODE BEGIN TIM1_Init 1 */</span><br><span class="line"></span><br><span class="line">  /* USER CODE END TIM1_Init 1 */</span><br><span class="line">  htim1.Instance = TIM1;</span><br><span class="line">  htim1.Init.Prescaler = 72-1;</span><br><span class="line">  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;</span><br><span class="line">  htim1.Init.Period = 1000-1;</span><br><span class="line">  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;</span><br><span class="line">  htim1.Init.RepetitionCounter = 0;</span><br><span class="line">  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIM_PWM_Init(&amp;htim1) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;</span><br><span class="line">  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIMEx_MasterConfigSynchronization(&amp;htim1, &amp;sMasterConfig) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  sConfigOC.OCMode = TIM_OCMODE_PWM1;</span><br><span class="line">  sConfigOC.Pulse = 500;</span><br><span class="line">  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;</span><br><span class="line">  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;</span><br><span class="line">  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;</span><br><span class="line">  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;</span><br><span class="line">  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIM_PWM_ConfigChannel(&amp;htim1, &amp;sConfigOC, TIM_CHANNEL_1) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;</span><br><span class="line">  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;</span><br><span class="line">  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;</span><br><span class="line">  sBreakDeadTimeConfig.DeadTime = 0;</span><br><span class="line">  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;</span><br><span class="line">  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;</span><br><span class="line">  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIMEx_ConfigBreakDeadTime(&amp;htim1, &amp;sBreakDeadTimeConfig) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  /* USER CODE BEGIN TIM1_Init 2 */</span><br><span class="line"></span><br><span class="line">  /* USER CODE END TIM1_Init 2 */</span><br><span class="line">  HAL_TIM_MspPostInit(&amp;htim1);</span><br><span class="line">HAL_TIM_PWM_Start(&amp;htim1, TIM_CHANNEL_1);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* tim_pwmHandle)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(tim_pwmHandle-&gt;Instance==TIM1)</span><br><span class="line">  &#123;</span><br><span class="line">  /* USER CODE BEGIN TIM1_MspInit 0 */</span><br><span class="line"></span><br><span class="line">  /* USER CODE END TIM1_MspInit 0 */</span><br><span class="line">    /* TIM1 clock <span class="built_in">enable</span> */</span><br><span class="line">    __HAL_RCC_TIM1_CLK_ENABLE();</span><br><span class="line">  /* USER CODE BEGIN TIM1_MspInit 1 */</span><br><span class="line"></span><br><span class="line">  /* USER CODE END TIM1_MspInit 1 */</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  GPIO_InitTypeDef GPIO_InitStruct = &#123;0&#125;;</span><br><span class="line">  <span class="keyword">if</span>(timHandle-&gt;Instance==TIM1)</span><br><span class="line">  &#123;</span><br><span class="line">  /* USER CODE BEGIN TIM1_MspPostInit 0 */</span><br><span class="line"></span><br><span class="line">  /* USER CODE END TIM1_MspPostInit 0 */</span><br><span class="line"></span><br><span class="line">    __HAL_RCC_GPIOA_CLK_ENABLE();</span><br><span class="line">    /**TIM1 GPIO Configuration</span><br><span class="line">    PA8     ------&gt; TIM1_CH1</span><br><span class="line">    */</span><br><span class="line">    GPIO_InitStruct.Pin = GPIO_PIN_8;</span><br><span class="line">    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;</span><br><span class="line">    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;</span><br><span class="line">    HAL_GPIO_Init(GPIOA, &amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line">  /* USER CODE BEGIN TIM1_MspPostInit 1 */</span><br><span class="line"></span><br><span class="line">  /* USER CODE END TIM1_MspPostInit 1 */</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void HAL_TIM_PWM_MspDeInit(TIM_HandleTypeDef* tim_pwmHandle)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(tim_pwmHandle-&gt;Instance==TIM1)</span><br><span class="line">  &#123;</span><br><span class="line">  /* USER CODE BEGIN TIM1_MspDeInit 0 */</span><br><span class="line"></span><br><span class="line">  /* USER CODE END TIM1_MspDeInit 0 */</span><br><span class="line">    /* Peripheral clock <span class="built_in">disable</span> */</span><br><span class="line">    __HAL_RCC_TIM1_CLK_DISABLE();</span><br><span class="line">  /* USER CODE BEGIN TIM1_MspDeInit 1 */</span><br><span class="line"></span><br><span class="line">  /* USER CODE END TIM1_MspDeInit 1 */</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void TIM_SetTIM1Compare(long int compare)</span><br><span class="line">&#123;</span><br><span class="line">TIM1-&gt;CCR1=compare; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void Compare_Value_Setting(void)</span><br><span class="line">&#123;</span><br><span class="line">static uint8_t pwm_compare_state=0;</span><br><span class="line">static long int PWM_COMPARE=0;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (PWM_COMPARE==0) pwm_compare_state=1; </span><br><span class="line"><span class="keyword">if</span> (PWM_COMPARE&gt;htim1.Init.Period) pwm_compare_state=0; </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (pwm_compare_state)&#123;</span><br><span class="line">PWM_COMPARE+=10;</span><br><span class="line">TIM_SetTIM1Compare(PWM_COMPARE);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">PWM_COMPARE-=10;</span><br><span class="line">TIM_SetTIM1Compare(PWM_COMPARE);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="PWM-h"><a href="#PWM-h" class="headerlink" title="PWM.h"></a>PWM.h</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#ifndef __BSP_PWM_H__</span></span><br><span class="line"><span class="comment">#define __BSP_PWM_H__</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#ifdef __cplusplus</span></span><br><span class="line">extern <span class="string">&quot;C&quot;</span> &#123;</span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"></span><br><span class="line">/* Includes ------------------------------------------------------------------*/</span><br><span class="line"><span class="comment">#include &quot;main.h&quot;</span></span><br><span class="line"></span><br><span class="line">/* USER CODE BEGIN Includes */</span><br><span class="line"></span><br><span class="line">/* USER CODE END Includes */</span><br><span class="line"></span><br><span class="line">extern TIM_HandleTypeDef htim1;</span><br><span class="line"></span><br><span class="line">/* USER CODE BEGIN Private defines */</span><br><span class="line"></span><br><span class="line">/* USER CODE END Private defines */</span><br><span class="line"></span><br><span class="line">void MX_TIM1_Init(void);</span><br><span class="line"></span><br><span class="line">void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);</span><br><span class="line"></span><br><span class="line">/* USER CODE BEGIN Prototypes */</span><br><span class="line"></span><br><span class="line">void TIM_SetTIM1Compare(long int compare);</span><br><span class="line"></span><br><span class="line">void Compare_Value_Setting(void);</span><br><span class="line"></span><br><span class="line">/* USER CODE END Prototypes */</span><br><span class="line"></span><br><span class="line"><span class="comment">#ifdef __cplusplus</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>LED0会缓慢变亮又变暗,LED初始化必须在TIM1之前。</p><p>注意： 如果灯长暗或长亮，检查是不是最开channel里没选pwm generation这类。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &quot;main.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;gpio.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#include &quot;PWM\BSP_PWM.h&quot;</span></span><br><span class="line"></span><br><span class="line">void SystemClock_Config(void);</span><br><span class="line"></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">  HAL_Init();</span><br><span class="line"></span><br><span class="line">  SystemClock_Config();</span><br><span class="line"></span><br><span class="line">  MX_GPIO_Init();</span><br><span class="line">  MX_TIM1_Init();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (1)</span><br><span class="line">  &#123;</span><br><span class="line">Compare_Value_Setting();</span><br><span class="line">HAL_Delay(10);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32 点灯/按钮</title>
      <link href="/STM32/STM32-%E7%82%B9%E7%81%AF%E6%8C%89%E9%92%AE-20505a203b7c/"/>
      <url>/STM32/STM32-%E7%82%B9%E7%81%AF%E6%8C%89%E9%92%AE-20505a203b7c/</url>
      
        <content type="html"><![CDATA[<h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h2><p>此系列用于介绍常见STM32外设及使用方法，基于<a href="https://www.st.com/en/development-tools/stm32cubemx.html">STM32CubeMX</a>初始化。</p><span id="more"></span><h2 id="点灯"><a href="#点灯" class="headerlink" title="点灯"></a>点灯</h2><p>直接在GPIO端设置即可，设置推挽输出。</p><h3 id="LED-c"><a href="#LED-c" class="headerlink" title="LED.c"></a>LED.c</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &quot;LED\BSP_LED.h&quot;</span></span><br><span class="line"></span><br><span class="line">//LED0 LED1 initialize</span><br><span class="line">void LED_Init(void)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  GPIO_InitTypeDef GPIO_InitStruct = &#123;0&#125;;</span><br><span class="line"></span><br><span class="line">  /* GPIO Ports Clock Enable */</span><br><span class="line">  __HAL_RCC_GPIOD_CLK_ENABLE();</span><br><span class="line">  __HAL_RCC_GPIOA_CLK_ENABLE();</span><br><span class="line"></span><br><span class="line">  /*Configure GPIO pin Output Level */</span><br><span class="line">  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_SET);</span><br><span class="line"></span><br><span class="line">  /*Configure GPIO pin Output Level */</span><br><span class="line">  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2, GPIO_PIN_SET);</span><br><span class="line"></span><br><span class="line">  /*Configure GPIO pin : PA8 */</span><br><span class="line">  GPIO_InitStruct.Pin = GPIO_PIN_8;</span><br><span class="line">  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;</span><br><span class="line">  GPIO_InitStruct.Pull = GPIO_NOPULL;</span><br><span class="line">  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;</span><br><span class="line">  HAL_GPIO_Init(GPIOA, &amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line">  /*Configure GPIO pin : PD2 */</span><br><span class="line">  GPIO_InitStruct.Pin = GPIO_PIN_2;</span><br><span class="line">  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;</span><br><span class="line">  GPIO_InitStruct.Pull = GPIO_NOPULL;</span><br><span class="line">  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;</span><br><span class="line">  HAL_GPIO_Init(GPIOD, &amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//switching on/off LED</span><br><span class="line">void LED_switch (uint8_t LEDx)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">uint8_t state;</span><br><span class="line"></span><br><span class="line">switch (LEDx)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> LED0:</span><br><span class="line">state=HAL_GPIO_ReadPin(GPIOA,GPIO_PIN_8);</span><br><span class="line"><span class="keyword">if</span> (state) HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_RESET);</span><br><span class="line"><span class="keyword">else</span> HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_SET);</span><br><span class="line"><span class="built_in">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> LED1:</span><br><span class="line">state=HAL_GPIO_ReadPin(GPIOD,GPIO_PIN_2);</span><br><span class="line"><span class="keyword">if</span> (state) HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2, GPIO_PIN_RESET);</span><br><span class="line"><span class="keyword">else</span> HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2, GPIO_PIN_SET);</span><br><span class="line"><span class="built_in">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="LED-h"><a href="#LED-h" class="headerlink" title="LED.h"></a>LED.h</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#ifndef __BSP_LED_H__</span></span><br><span class="line"><span class="comment">#define __BSP_LED_H__</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#include &quot;main.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#define LED0 0</span></span><br><span class="line"><span class="comment">#define LED1 1</span></span><br><span class="line"></span><br><span class="line">void LED_Init(void);</span><br><span class="line">void LED_switch (uint8_t LEDx);</span><br><span class="line"></span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>LED0，LED1 流水灯，交替亮</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#include &quot;main.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;LED/BSP_LED.h&quot;</span></span><br><span class="line"></span><br><span class="line">void SystemClock_Config(void);</span><br><span class="line"></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">  HAL_Init();</span><br><span class="line">  LED_Init();</span><br><span class="line"></span><br><span class="line">  SystemClock_Config();</span><br><span class="line"></span><br><span class="line">  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_SET); //turn off</span><br><span class="line">  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2, GPIO_PIN_RESET); //turn on</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (1)</span><br><span class="line">  &#123;</span><br><span class="line">HAL_Delay(500);</span><br><span class="line">LED_switch (LED0); //switching the state</span><br><span class="line">LED_switch (LED1);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="按键"><a href="#按键" class="headerlink" title="按键"></a>按键</h2><p>三个按键中PA0需设置下拉输出，其他两个PC5,PA15上拉输出</p><h3 id="KEY-c"><a href="#KEY-c" class="headerlink" title="KEY.c"></a>KEY.c</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &quot;KEY\BSP_KEY.h&quot;</span></span><br><span class="line"></span><br><span class="line">void KEY_Init(void)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  GPIO_InitTypeDef GPIO_InitStruct = &#123;0&#125;;</span><br><span class="line"></span><br><span class="line">  /* GPIO Ports Clock Enable */</span><br><span class="line">  __HAL_RCC_GPIOC_CLK_ENABLE();</span><br><span class="line">  __HAL_RCC_GPIOA_CLK_ENABLE();</span><br><span class="line"></span><br><span class="line">/*Configure GPIO pin : PA0 */</span><br><span class="line">GPIO_InitStruct.Pin=GPIO_PIN_0; </span><br><span class="line">  GPIO_InitStruct.Mode=GPIO_MODE_INPUT;</span><br><span class="line">  GPIO_InitStruct.Pull=GPIO_PULLDOWN; </span><br><span class="line">  GPIO_InitStruct.Speed=GPIO_SPEED_FREQ_HIGH;</span><br><span class="line">  HAL_GPIO_Init(GPIOA,&amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line">  /*Configure GPIO pin : PC5 */</span><br><span class="line">  GPIO_InitStruct.Pin = GPIO_PIN_5;</span><br><span class="line">  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;</span><br><span class="line">  GPIO_InitStruct.Pull = GPIO_PULLUP;</span><br><span class="line">  HAL_GPIO_Init(GPIOC, &amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line">  /*Configure GPIO pin : PA15 */</span><br><span class="line">  GPIO_InitStruct.Pin = GPIO_PIN_15;</span><br><span class="line">  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;</span><br><span class="line">  GPIO_InitStruct.Pull = GPIO_PULLUP;</span><br><span class="line">  HAL_GPIO_Init(GPIOA, &amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">uint8_t KEY_Scan(uint8_t mode)</span><br><span class="line">&#123;</span><br><span class="line">    static uint8_t key_up=1;</span><br><span class="line">    <span class="keyword">if</span>(mode==1)key_up=1; </span><br><span class="line">    <span class="keyword">if</span>(key_up&amp;&amp;(KEY0==0||KEY1==0||WK_UP==1))</span><br><span class="line">    &#123;</span><br><span class="line">        HAL_Delay(10);</span><br><span class="line">        key_up=0;</span><br><span class="line">        <span class="keyword">if</span>(KEY0==0)       <span class="built_in">return</span> KEY0_PRES;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(KEY1==0)  <span class="built_in">return</span> KEY1_PRES;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(WK_UP==1) <span class="built_in">return</span> WKUP_PRES;          </span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(KEY0==1&amp;&amp;KEY1==1&amp;&amp;WK_UP==0)key_up=1;</span><br><span class="line">    <span class="built_in">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="KEY-h"><a href="#KEY-h" class="headerlink" title="KEY.h"></a>KEY.h</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#ifndef __BSP_KEY_H__</span></span><br><span class="line"><span class="comment">#define __BSP_KEY_H__</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#include &quot;main.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#define KEY0        HAL_GPIO_ReadPin(GPIOC,GPIO_PIN_5)  //KEY0</span></span><br><span class="line"><span class="comment">#define KEY1        HAL_GPIO_ReadPin(GPIOA,GPIO_PIN_15) //KEY1°</span></span><br><span class="line"><span class="comment">#define WK_UP       HAL_GPIO_ReadPin(GPIOA,GPIO_PIN_0)  //WKUP</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#define KEY0_PRES 1</span></span><br><span class="line"><span class="comment">#define KEY1_PRES2</span></span><br><span class="line"><span class="comment">#define WKUP_PRES   3</span></span><br><span class="line"></span><br><span class="line">void KEY_Init(void);</span><br><span class="line">uint8_t KEY_Scan(uint8_t mode);</span><br><span class="line"></span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h3><p>按key0 LED0变化，key1 LED1变化<br>按WKUP两个都变化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &quot;main.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;gpio.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#include &quot;LED\BSP_LED.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;KEY\BSP_KEY.h&quot;</span></span><br><span class="line"></span><br><span class="line">void SystemClock_Config(void);</span><br><span class="line"></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">  HAL_Init();</span><br><span class="line"></span><br><span class="line">  LED_Init();</span><br><span class="line">  KEY_Init();</span><br><span class="line">  </span><br><span class="line">  SystemClock_Config();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (1)</span><br><span class="line">  &#123;</span><br><span class="line"></span><br><span class="line">switch(KEY_Scan(0))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> KEY0_PRES:</span><br><span class="line">LED_switch(LED0);</span><br><span class="line"><span class="built_in">break</span>;</span><br><span class="line"><span class="keyword">case</span> KEY1_PRES:</span><br><span class="line">LED_switch(LED1);</span><br><span class="line"><span class="built_in">break</span>;</span><br><span class="line"><span class="keyword">case</span> WKUP_PRES:</span><br><span class="line">LED_switch(LED0);</span><br><span class="line">LED_switch(LED1);</span><br><span class="line"><span class="built_in">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MINI STM32 Schematic diagram</title>
      <link href="/STM32/MINI-STM32-Schematic-diagram-208edd9bb4a4/"/>
      <url>/STM32/MINI-STM32-Schematic-diagram-208edd9bb4a4/</url>
      
        <content type="html"><![CDATA[<p>-</p><span id="more"></span><div class="pdf-container" data-target="MiniSTM32_V3.3_SCH.pdf" data-height="500px"></div> ]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 硬件 </tag>
            
            <tag> stm32 </tag>
            
            <tag> PDF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32 DataSheet</title>
      <link href="/STM32/STM32-DataSheet-00cce55e09fc/"/>
      <url>/STM32/STM32-DataSheet-00cce55e09fc/</url>
      
        <content type="html"><![CDATA[<p>-</p><span id="more"></span><p>2.1 Device overview:<br> -performance line block diagram</p><p>table 5:<br> -pin definetitn</p><div class="pdf-container" data-target="stm32f103rc.pdf" data-height="500px"></div> ]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 硬件 </tag>
            
            <tag> stm32 </tag>
            
            <tag> PDF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo个人博客创建引导（三）</title>
      <link href="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%B8%89%EF%BC%89-fb46b20893ab/"/>
      <url>/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%B8%89%EF%BC%89-fb46b20893ab/</url>
      
        <content type="html"><![CDATA[<h2 id="插件介绍"><a href="#插件介绍" class="headerlink" title="插件介绍"></a>插件介绍</h2><p>如果一些功能没有包含在主题内或想使用自己的内容，可以在官网的<a href="https://hexo.io/plugins/">插件库</a>内下载使用。一些常用的插件会时不时更新在此页面。</p><span id="more"></span><h2 id="搜索功能插件"><a href="#搜索功能插件" class="headerlink" title="搜索功能插件"></a>搜索功能插件</h2><p>在主要小图标的最右侧增加一个搜索按钮。</p><p>在工程更根目录输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><p>全局配置文件内加入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Search</span></span><br><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  <span class="built_in">limit</span>: 10000</span><br></pre></td></tr></table></figure><p>theme配置文件寻找“Local Search”修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Local Search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/next-theme/hexo-generator-searchdb</span></span><br><span class="line">local_search:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="插入图片插件"><a href="#插入图片插件" class="headerlink" title="插入图片插件"></a>插入图片插件</h2><p>支持在Blog里放入图片。</p><p>在工程更根目录输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure><p>全局配置文件内修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>找到“/node_module/hexo-asset-image/index.js”, 替换内容为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;use strict&#x27;</span>;</span><br><span class="line">var cheerio = require(<span class="string">&#x27;cheerio&#x27;</span>);</span><br><span class="line"></span><br><span class="line">// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string</span><br><span class="line"><span class="keyword">function</span> getPosition(str, m, i) &#123;</span><br><span class="line">  <span class="built_in">return</span> str.split(m, i).join(m).length;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var version = String(hexo.version).split(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">hexo.extend.filter.register(<span class="string">&#x27;after_post_render&#x27;</span>, <span class="keyword">function</span>(data)&#123;</span><br><span class="line">  var config = hexo.config;</span><br><span class="line">  <span class="keyword">if</span>(config.post_asset_folder)&#123;</span><br><span class="line">        var link = data.permalink;</span><br><span class="line">    <span class="keyword">if</span>(version.length &gt; 0 &amp;&amp; Number(version[0]) == 3)</span><br><span class="line">       var beginPos = getPosition(link, <span class="string">&#x27;/&#x27;</span>, 1) + 1;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">       var beginPos = getPosition(link, <span class="string">&#x27;/&#x27;</span>, 3) + 1;</span><br><span class="line">    // In hexo 3.1.1, the permalink of <span class="string">&quot;about&quot;</span> page is like <span class="string">&quot;.../about/index.html&quot;</span>.</span><br><span class="line">    var endPos = link.lastIndexOf(<span class="string">&#x27;/&#x27;</span>) + 1;</span><br><span class="line">    link = link.substring(beginPos, endPos);</span><br><span class="line"></span><br><span class="line">    var toprocess = [<span class="string">&#x27;excerpt&#x27;</span>, <span class="string">&#x27;more&#x27;</span>, <span class="string">&#x27;content&#x27;</span>];</span><br><span class="line">    <span class="keyword">for</span>(var i = 0; i &lt; toprocess.length; i++)&#123;</span><br><span class="line">      var key = toprocess[i];</span><br><span class="line"> </span><br><span class="line">      var $ = cheerio.load(data[key], &#123;</span><br><span class="line">        ignoreWhitespace: <span class="literal">false</span>,</span><br><span class="line">        xmlMode: <span class="literal">false</span>,</span><br><span class="line">        lowerCaseTags: <span class="literal">false</span>,</span><br><span class="line">        decodeEntities: <span class="literal">false</span></span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      $(<span class="string">&#x27;img&#x27;</span>).each(<span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">        <span class="keyword">if</span> ($(this).attr(<span class="string">&#x27;src&#x27;</span>))&#123;</span><br><span class="line">            // For windows style path, we replace <span class="string">&#x27;\&#x27;</span> to <span class="string">&#x27;/&#x27;</span>.</span><br><span class="line">            var src = $(this).attr(<span class="string">&#x27;src&#x27;</span>).replace(<span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">            <span class="keyword">if</span>(!/http[s]*.*|\/\/.*/.<span class="built_in">test</span>(src) &amp;&amp;</span><br><span class="line">               !/^\s*\//.<span class="built_in">test</span>(src)) &#123;</span><br><span class="line">              // For <span class="string">&quot;about&quot;</span> page, the first part of <span class="string">&quot;src&quot;</span> can<span class="string">&#x27;t be removed.</span></span><br><span class="line"><span class="string">              // In addition, to support multi-level local directory.</span></span><br><span class="line"><span class="string">              var linkArray = link.split(&#x27;</span>/<span class="string">&#x27;).filter(function(elem)&#123;</span></span><br><span class="line"><span class="string">                return elem != &#x27;</span><span class="string">&#x27;;</span></span><br><span class="line"><span class="string">              &#125;);</span></span><br><span class="line"><span class="string">              var srcArray = src.split(&#x27;</span>/<span class="string">&#x27;).filter(function(elem)&#123;</span></span><br><span class="line"><span class="string">                return elem != &#x27;</span><span class="string">&#x27; &amp;&amp; elem != &#x27;</span>.<span class="string">&#x27;;</span></span><br><span class="line"><span class="string">              &#125;);</span></span><br><span class="line"><span class="string">              if(srcArray.length &gt; 1)</span></span><br><span class="line"><span class="string">                srcArray.shift();</span></span><br><span class="line"><span class="string">              src = srcArray.join(&#x27;</span>/<span class="string">&#x27;);</span></span><br><span class="line"><span class="string">              $(this).attr(&#x27;</span>src<span class="string">&#x27;, config.root + link + src);</span></span><br><span class="line"><span class="string">              console.info&amp;&amp;console.info(&quot;update link as:--&gt;&quot;+config.root + link + src);</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">        &#125;else&#123;</span></span><br><span class="line"><span class="string">            console.info&amp;&amp;console.info(&quot;no src attr, skipped...&quot;);</span></span><br><span class="line"><span class="string">            console.info&amp;&amp;console.info($(this));</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;);</span></span><br><span class="line"><span class="string">      data[key] = $.html();</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">&#125;);</span></span><br></pre></td></tr></table></figure><p><a href="https://blog.csnd.net/xjm850552586">原地址在此</a>，赞美大佬！</p><p>之后每次新建new page都会额外生成一个同名文件夹，把需要的图片放进去后在.md文件内输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![ImageDescription](ImageName.npg)</span><br></pre></td></tr></table></figure><p>就可以显示图片了。</p><h2 id="文章密码插件"><a href="#文章密码插件" class="headerlink" title="文章密码插件"></a>文章密码插件</h2><p>如果想加密某些文件，可以添加这个插件。</p><p>下载plugin</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-blog-encrypt</span><br></pre></td></tr></table></figure><p>在根目录配置文件添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Security</span></span><br><span class="line">encrypt: <span class="comment"># hexo-blog-encrypt</span></span><br><span class="line">  abstract: Here<span class="string">&#x27;s something encrypted, password is required to continue reading.</span></span><br><span class="line"><span class="string">  message: Hey, password is required here.</span></span><br><span class="line"><span class="string">  tags:</span></span><br><span class="line"><span class="string">  - &#123;name: encryptAsDiary, password: passwordA&#125;</span></span><br><span class="line"><span class="string">  - &#123;name: encryptAsTips, password: passwordB&#125;</span></span><br><span class="line"><span class="string">  theme: up</span></span><br><span class="line"><span class="string">  wrong_pass_message: Oh, this is an invalid password. Check and try again, please.</span></span><br><span class="line"><span class="string">  wrong_hash_message: Oh, these decrypted content cannot be verified, but you can still have a look.</span></span><br></pre></td></tr></table></figure><p>theme: 密码输入界面样式，可查看<a href="https://mhexo.github.io/2020/12/23/Theme-Test-Default/">作者实例</a>。</p><p>之后只要在文章配置内加入password</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: Hello World</span><br><span class="line">date: 2020-03-13 21:12:21</span><br><span class="line">password: hello</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>文章底有encrypt again按钮，可重置密码记忆记录。</p><h2 id="插入PDF插件"><a href="#插入PDF插件" class="headerlink" title="插入PDF插件"></a>插入PDF插件</h2><p>可以插入一个pdf阅读框</p><p>下载plugin</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install --save hexo-pdf</span><br></pre></td></tr></table></figure><p>打开hexo configuration，修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># PDF tag</span></span><br><span class="line"><span class="comment"># NexT will try to load pdf files natively, if failed, pdf.js will be used.</span></span><br><span class="line"><span class="comment"># So, you have to install the dependency of pdf.js if you want to use pdf tag and make it available to all browsers.</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/next-theme/theme-next-pdf</span></span><br><span class="line">pdf:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Default height</span></span><br><span class="line">  height: 500px</span><br></pre></td></tr></table></figure><p>如果需要插入pdf，在.md同目录新建一个同名文件夹，放入pdf文件，输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% pdf  pfdName.pdf %&#125; </span><br></pre></td></tr></table></figure><p>插入PDF</p>]]></content>
      
      
      <categories>
          
          <category> Hexo模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo个人博客创建引导——NEXT主题</title>
      <link href="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%E2%80%94%E2%80%94NEXT%E4%B8%BB%E9%A2%98-32547c269389/"/>
      <url>/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%E2%80%94%E2%80%94NEXT%E4%B8%BB%E9%A2%98-32547c269389/</url>
      
        <content type="html"><![CDATA[<h2 id="主题更换"><a href="#主题更换" class="headerlink" title="主题更换"></a>主题更换</h2><p>在hexo官网有<a href="https://hexo.io/themes/">主题下载</a>页面，存储有大量主题。如果需要更换就点击进入主题的github页面，按上面的说明步骤直接clone进自己的文件夹就行。下载的文件可以在根目录下的\themes里找到。</p><span id="more"></span><p>打开根目录的_config.yml文件，搜索Extensions</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line">theme: next</span><br></pre></td></tr></table></figure><p>将最后的theme改为新主题的名字即可，本地的话刷新就更换主题了。</p><p>现在网站使用的是大佬推荐的<a href="https://github.com/next-theme/hexo-theme-next">Next</a>主题，内容设置相对丰富点，页面简约动画也不突兀。由于本人next主题使用的相对多点，这篇基本就记录下next里各个configuration，如果之后使用其他主题的话会另开一篇记录。</p><h2 id="网页设置"><a href="#网页设置" class="headerlink" title="网页设置"></a>网页设置</h2><p>网页设置就是在hexo根目录下的_donfig.yml里的内容，一般下载插件或者更改基础设置时会使用。详细介绍可以找<a href="https://hexo.io/docs/configuration">官方文档</a>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line">title: 朽丶 // 主标题</span><br><span class="line">subtitle: <span class="string">&#x27;个人学习记录&#x27;</span> //副标题</span><br><span class="line">description: <span class="string">&#x27;Personal Learning Technical Blog&#x27;</span> //左边拉框内介绍</span><br><span class="line">keywords:</span><br><span class="line">author: Yang Cen //作者姓名</span><br><span class="line">language: zh-CN //语言设置</span><br><span class="line">timezone: <span class="string">&#x27;&#x27;</span> </span><br></pre></td></tr></table></figure><p>另外可以查找下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">permalink: :title-:<span class="built_in">hash</span>/</span><br></pre></td></tr></table></figure><p>更多模板可以在<a href="https://hexo.io/docs/permalinks">官网</a>找到。</p><h2 id="主题设置"><a href="#主题设置" class="headerlink" title="主题设置"></a>主题设置</h2><p>打开themes文件夹里的正在使用的主题文件夹，会发现里边也有个_config.yml文件，这个就是主题的配置文件。此板块会不定期更新，用来记录下理解的模块。</p><h3 id="Schemes"><a href="#Schemes" class="headerlink" title="Schemes"></a>Schemes</h3><p>Next主题有四个体系</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Schemes</span></span><br><span class="line"><span class="comment">#scheme: Muse</span></span><br><span class="line"><span class="comment">#scheme: Mist</span></span><br><span class="line"><span class="comment">#scheme: Pisces</span></span><br><span class="line">scheme: Gemini</span><br></pre></td></tr></table></figure><p>大体是header，left-side排版的变化，推荐都试试看看那个顺眼。由于只能选择一种体系，所以更换时记得注销掉不需要的内容。</p><h3 id="menu"><a href="#menu" class="headerlink" title="menu"></a>menu</h3><p>位于标题附近的小目录，使用的话直接去掉之前的“#”即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || fa fa-home</span><br><span class="line">  tags: /tags/ || fa fa-tags</span><br><span class="line">  categories: /categories/ || fa fa-th</span><br><span class="line">  archives: /archives/ || fa fa-archive</span><br><span class="line">  about: /about/ || fa fa-user</span><br><span class="line">  <span class="comment">#schedule: /schedule/ || fa fa-calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || fa fa-sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || fa fa-heartbeat</span></span><br></pre></td></tr></table></figure><p>如果全打开效果类似下图<br><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%E2%80%94%E2%80%94NEXT%E4%B8%BB%E9%A2%98-32547c269389/%E7%9B%AE%E5%BD%95%E5%9B%BE%E8%A1%A8.PNG" alt="目录图表.PNG"></p><p>如果开启新板块需要bash里输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page pat_name</span><br></pre></td></tr></table></figure><p>然后前往\source，会发现新建了一个同名文件夹，打开里边的index.md,按这个模板配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line"><span class="built_in">type</span>: <span class="string">&quot;categories&quot;</span></span><br><span class="line">date: 2021-09-07 11:13:54</span><br><span class="line">comments: <span class="literal">false</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>完成后就可以使用这些小图标了。</p><p>基本上archives,categories,tags需要用的多些，这些不用怎么管的，有文章进去自己就会变化计数。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Enable / Disable menu icons / item badges.</span></span><br><span class="line">menu_settings:</span><br><span class="line">  icons: <span class="literal">true</span></span><br><span class="line">  badges: <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>icons: 之前的小图标<br>badges：开启会在每条末尾加一个计数表，显示数量</p><h3 id="Social-Links"><a href="#Social-Links" class="headerlink" title="Social Links"></a>Social Links</h3><p>在side bar增加社交app图标和连接。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Social Links</span></span><br><span class="line"><span class="comment"># Usage: `Key: permalink || icon`</span></span><br><span class="line"><span class="comment"># Key is the link label showing to end users.</span></span><br><span class="line"><span class="comment"># Value before `||` delimiter is the target permalink, value after `||` delimiter is the name of Font Awesome icon.</span></span><br><span class="line">social:</span><br><span class="line">  GitHub: https://github.com/ycen2111 || fab fa-github</span><br><span class="line">  E-Mail: mailto:ycen2111@gmail.com || fa fa-envelope</span><br><span class="line">  <span class="comment">#Weibo: https://weibo.com/yourname || fab fa-weibo</span></span><br><span class="line">  <span class="comment">#Google: https://plus.google.com/yourname || fab fa-google</span></span><br><span class="line">  <span class="comment">#Twitter: https://twitter.com/yourname || fab fa-twitter</span></span><br></pre></td></tr></table></figure><p>||后的是图标连接，改下前面的网址就可以导向了。</p><h3 id="Footer"><a href="#Footer" class="headerlink" title="Footer"></a>Footer</h3><p>在icon内可以更改footer中间那个图标</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Icon between year and copyright info.</span></span><br><span class="line">  icon:</span><br><span class="line">    <span class="comment"># Icon name in Font Awesome. See: https://fontawesome.com/icons</span></span><br><span class="line">    name: fa fa-grip-lines-vertical</span><br><span class="line">    <span class="comment"># If you want to animate the icon, set it to true.</span></span><br><span class="line">    animated: <span class="literal">false</span></span><br><span class="line">    <span class="comment"># Change the color of icon, using Hex Code.</span></span><br><span class="line">    color: <span class="string">&quot;#999999&quot;</span></span><br></pre></td></tr></table></figure><p>name:可以在<a href="https://fontawesome.com/icons">fontawesome</a>内选择图标，直接替换fa后的名字即可。<br>color:控制图标颜色，必须使用<a href="https://www.color-hex.com/">HEX</a>代码。#999999与旁边字体颜色最近。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Powered by Hexo &amp; NexT</span></span><br><span class="line">powered: <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>默认为true，改为false可以把最后那个Powered by Hexo &amp; NexT取消掉。</p><h3 id="Post-Setting"><a href="#Post-Setting" class="headerlink" title="Post Setting"></a>Post Setting</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Read more button</span></span><br><span class="line"><span class="comment"># If true, the read more button will be displayed in excerpt section.</span></span><br><span class="line">read_more_btn: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>主界面阅读全文按钮，可以在.md文件内写入 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- more --&gt;</span><br></pre></td></tr></table></figure><p>定位按钮位置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Post meta display settings</span></span><br><span class="line">post_meta:</span><br><span class="line">  item_text: <span class="literal">false</span></span><br><span class="line">  created_at: <span class="literal">true</span></span><br><span class="line">  updated_at:</span><br><span class="line">    <span class="built_in">enable</span>: <span class="literal">false</span></span><br><span class="line">    another_day: <span class="literal">false</span></span><br><span class="line">  categories: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>文章标题下面的一些信息。<br>item_text:图标旁边是否加上文字描述<br>created_at:创建时间<br>update_at:更新时间，如果another_day为true就只显示不同日期的更改记录。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Use icon instead of the symbol # to indicate the tag at the bottom of the post</span></span><br><span class="line">tag_icon: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>文章最后的tags之前用小图标标记。</p><p>另外关于donate和reward的内容也在此，需要的话直接修改就行。</p>]]></content>
      
      
      <categories>
          
          <category> Hexo模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo个人博客创建引导（二）</title>
      <link href="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-cee5c8cdb4b0/"/>
      <url>/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-cee5c8cdb4b0/</url>
      
        <content type="html"><![CDATA[<h2 id="申请域名"><a href="#申请域名" class="headerlink" title="申请域名"></a>申请域名</h2><p>虽然github可以免费生成一个”.github.io”结尾的域名，但通常情况下大多数人还是愿意申请一个更适合的域名并重定向过去。由于域名申请审核需要一定时间，这里先介绍域名申请的流程及注意事项，如不打算自己申请可以先跳过这节。</p><p>此文会讲解在<a href="https://wanwang.aliyun.com/domain?utm_content=se_1008364728">阿里云平台</a>申请域名。优点在于阿里云可以直接解析域名，减少工作量，相对方便。</p><span id="more"></span><p><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-cee5c8cdb4b0/%E9%98%BF%E9%87%8C%E4%BA%91%E5%9F%9F%E5%90%8D%E5%9B%BE%E7%89%87.PNG" alt="阿里云域名图片"></p><p>个人认为.top结尾的域名便宜又好使，完全可以个人使用，如果可以接受稍微贵点的话.com结尾也比较大气。不同域名价格相差极大，个别热门名字价格可能会到几万，需要多找找。（像此网站域名pipirima.top，就是天蝎座μ2的英文，尾宿增二，3.57等星，双星系统）</p><p>找到合适的就直接加入列表购买就行。已购买的可以在域名控制台，域名列表里找到<br><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-cee5c8cdb4b0/%E5%9F%9F%E5%90%8D%E5%88%97%E8%A1%A8.PNG" alt="域名列表"></p><p>一开始购买的域名需要实名认证下，会有提示的，进去后把名字和身份证传下就行。人工审核大概需要半天的样子，完成后会发过来一封信息提醒的，耐心等待即可。审核完成后需要解析下，点击上图蓝色的”解析“即可,这个后面会说。</p><h2 id="github创造仓库"><a href="#github创造仓库" class="headerlink" title="github创造仓库"></a>github创造仓库</h2><p>接下来的内容是假设可以登录github并有账号的情况，如果还未注册请先进行注册并完成基础操作。</p><p>首先打开仓库<br><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-cee5c8cdb4b0/github%E4%BB%93%E5%BA%93.PNG" alt="github仓库.PNG"></p><p>在右上角点击绿色的”new“，开始创建。<br><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-cee5c8cdb4b0/%E5%88%9B%E5%BB%BA%E4%BB%93%E5%BA%93.PNG" alt="创建仓库.PNG"></p><p>（懒得涂名字了，反正都能看到的，算了）</p><p>老样子，将yourname改为自己的名字，选择public，直接创建。完成的话像这个样子<br><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-cee5c8cdb4b0/%E5%88%9B%E9%80%A0%E5%AE%8C%E6%88%90.PNG" alt="创造完成.PNG"></p><h2 id="生成SSH"><a href="#生成SSH" class="headerlink" title="生成SSH"></a>生成SSH</h2><p>利用bash直接生成密钥，然后把公共密钥给github，就不用每次都属用户名密码了（没试过需要输入的情况，这么说总是方便吧）</p><p>如果bash是第一次使用的话先设置一次账号密码。打开bash后输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;yourname&quot;</span></span><br><span class="line">git config --global user.emil <span class="string">&quot;youremail&quot;</span></span><br></pre></td></tr></table></figure><p>记得替换好名字和邮箱</p><p>然后就生成SSH</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;youremail&quot;</span></span><br></pre></td></tr></table></figure><p>全程回车确认，最后会提示生成完毕，并给一个地址。基本会在 C:\User.ssh 里找到一个id_rsa.pub<br><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-cee5c8cdb4b0/SSH.PNG" alt="SSH.PNG"></p><p>用记事本打开，复制内容后回github黏贴<br><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-cee5c8cdb4b0/github_ssh.PNG" alt="github_ssh.PNG"></p><p>点击new ssh key黏贴密钥。</p><p>完成后在Bash里输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-cee5c8cdb4b0/%E6%A3%80%E6%9F%A5ssh.PNG" alt="检查ssh.PNG"></p><p>本人是这个结果，如果出现的话基本就没事了。</p><h2 id="hexo关联github"><a href="#hexo关联github" class="headerlink" title="hexo关联github"></a>hexo关联github</h2><p>说是关联，其实也只是将.git等一部分文件上传关联，没有全部发送备份。本文最后有将整个项目上传过程。</p><p>打开项目根目录，打开 _config.yml 配置文件直接拖到最后，改为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repository: https://github.com/yourname/yourname.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>改为自己名字后保存退出，打开bash安装hexo的部署功能</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>之后我们就可以使用 hexo d 这个命令了。</p><p>连续输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d//上传部署</span><br></pre></td></tr></table></figure><p>hexo d部署估计是由于墙的问题，很容易失败，多试几次发现没提示error就说明成功了。<br><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-cee5c8cdb4b0/%E9%83%A8%E7%BD%B2%E6%88%90%E5%8A%9F.PNG" alt="部署成功.PNG"></p><p>稍微过会儿进入<a href="http://yourname.github.io就可以看到上传的页面了./">http://yourname.github.io就可以看到上传的页面了。</a></p><h2 id="解析域名"><a href="#解析域名" class="headerlink" title="解析域名"></a>解析域名</h2><p>之前申请的域名审核通过就可以解析了，不需要认证。</p><p><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-cee5c8cdb4b0/%E8%A7%A3%E6%9E%90%E8%AE%BE%E7%BD%AE.PNG" alt="解析设置.PNG"></p><p>（注意！！！）解析设置必须在完成github配置后再进行。</p><p>先说主机记录这块，”@“意思是无前缀，直接输入域名就行，如直接pipirima.top就可以访问此网站。”WWW“就是前缀加上，如 <a href="http://www.pipirima.top/">www.pipirima.top</a> ,两个都设置的话两个写法都可以访问此网站。</p><p>记录类型一般有两个选择，”A“或者”CNAME“。如果选择”A“就需要在记录值这里填写.github.io对应的ip地址。打开windows自带cmd，输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping yourname.github.io</span><br></pre></td></tr></table></figure><p><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-cee5c8cdb4b0/git_ip%E6%9F%A5%E8%AF%A2.PNG" alt="git_ip查询.PNG"></p><p>yourname改为自己的github姓名。在记录值里输入ip即可。</p><p>但github方面更推荐使用”CNAME“，如果用”A“在最后github设置customer domain时会有个warning，看着难受。所以一般都是推荐使用”CNAME“。这种情况下直接在记录值输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yourname.github.io</span><br></pre></td></tr></table></figure><p>即可，同样记得自己改下名字。</p><p>解析线路选择默认，TTL选10分钟即可（更新时间间隔）。点击确认。</p><h2 id="配置CNAME"><a href="#配置CNAME" class="headerlink" title="配置CNAME"></a>配置CNAME</h2><p>最后，再告诉github和hexo新域名</p><p>进入仓库中的setting，在page页面内找到customer domain选项<br><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-cee5c8cdb4b0/customer_domain.PNG" alt="customer_domain.PNG"></p><p>直接输入域名，不用任何前缀。推荐点上下边的enforce https，更安全一点。点击save，等旁边出现一个绿勾就完成了。</p><p>虽然现在就能进入新域名了，但每次部署后都需要从新输入customer domain。解决办法是在本地hexo，source文件夹里新建一个文件，去除后缀（所有格式形式），输入新域名（同样只输入域名进行），重新hexo clean，g，d，部署后就每次可以不用再次输入了。</p><p>同样，上传部署后需要等待一会儿，不会马上更新的。</p><p>现在可以访问新域名，进行后续的theme选择和内容书写了。</p><h2 id="备份HEXO文件"><a href="#备份HEXO文件" class="headerlink" title="备份HEXO文件"></a>备份HEXO文件</h2><p>为了防止工程文件随本地文件消失而损失，可在仓库中另建一个branch来存放文件。</p><p>在github项目仓库中新建branch。</p><p>!(new_branch.PNG)[new_branch.PNG]</p><p>在setting中设置默认branch</p><p>!(set_default.PNG)[set_default.PNG]</p><p>之后在本地新建一个文件夹来存放已上传的文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/yourname/yourname.github.io.git</span><br></pre></td></tr></table></figure><p>开启隐藏文件显示，保留.git文件之外删除其他文件，并将需要上传的文件放进来（必须保留.gitignor文件）。输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">git remote rm origin</span><br><span class="line"></span><br><span class="line">git remote add origin https://github.com/yourname/yourname.github.io.git</span><br><span class="line"></span><br><span class="line">git add .</span><br><span class="line"></span><br><span class="line">git commit -m <span class="string">&quot;something&quot;</span></span><br><span class="line"></span><br><span class="line">git push origin branchName</span><br><span class="line">//<span class="keyword">if</span> fail</span><br><span class="line">git pull origin branchName</span><br><span class="line">//and follow</span><br><span class="line">git push origin <span class="built_in">source</span></span><br></pre></td></tr></table></figure><p>可发现文件已上传。</p>]]></content>
      
      
      <categories>
          
          <category> Hexo模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> Blog </tag>
            
            <tag> 图文教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo个人博客创建引导（一）</title>
      <link href="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%B8%80%EF%BC%89-0c90e66798ef/"/>
      <url>/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%B8%80%EF%BC%89-0c90e66798ef/</url>
      
        <content type="html"><![CDATA[<h2 id="总起"><a href="#总起" class="headerlink" title="总起"></a>总起</h2><p>此图文教程为基于<a href="https://hexo.io/zh-cn/">Hexo</a>私人博客框架和github建立自己的网站博客。</p><p>此攻略大量参考资料<a href="https://blog.csdn.net/weixin_41800884/article/details/103589663">零基础搭建博客：入门</a>, <a href="https://blog.csdn.net/sinat_37781304/article/details/82729029">hexo史上最全搭建教程</a>,并加入自己的理解及遇到的问题和对此的解决方法。仅作为自己之后的回忆笔记，可能不具备普适性。</p><span id="more"></span><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>需要环境：<br>    1.Git<br>    2.Git bush<br>    3.Node.js<br>    4.Github</p><h3 id="1-Git-bush与Node-js安装"><a href="#1-Git-bush与Node-js安装" class="headerlink" title="1. Git bush与Node.js安装"></a>1. Git bush与Node.js安装</h3><p>Git可于<a href="https://gitforwindows.org/">git官网</a>安装。点击download直接会开启一个下载进程，直接全程默认安装即可。这个安装包包含如下图所示三个文件：</p><p><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%B8%80%EF%BC%89-0c90e66798ef/Git_Display.png" alt="Git 安装后的三个文件"></p><p>其中Git GUI和Git CMD基本不会用到，只需要Git Bash来运行Linux command即可。 （ps：到此处为止Git Bash默认并未识别sudo命令，之后会用Node.js里的npm功能代替。）</p><p>完成之后可以打开Bash输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure><p>看看版本<br><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%B8%80%EF%BC%89-0c90e66798ef/git_version.PNG" alt="bash查询Git版本"></p><p>没有问题后就可以着手开始Node.js的安装了。如果没有墙的问题的话可以去<a href="https://nodejs.org/en/download/">nodejs</a>官网，不然就老老实实去<a href="http://nodejs.cn/download/">国内端点</a>下载。一样的。<br><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%B8%80%EF%BC%89-0c90e66798ef/nodejs.PNG" alt="nodejs官网图片"></p><p>完成后就可以使用npm命令下载了。马上输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><p>看看是否成功。</p><h3 id="2-下载Hexo"><a href="#2-下载Hexo" class="headerlink" title="2.下载Hexo"></a>2.下载Hexo</h3><p>主菜来了，今晚的主角。由于Hexo是基于Node.js框架，所以必须完成上面的几步再安装。</p><p>先找个合适的地方创建文件夹存放架构，然后直接在新建的目录下操作。</p><p>直接Bash输入命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>这条命令可以直接在Hexo官网找到。注意，不清楚是不是墙的原因Bash会花费大量时间下载，并且没有任何提示（会突然暴毙）。因此尽量多注意下下载状况，多读读command里的内容。</p><p>老规矩，查下版本。这里使用的是4.3版本。<br><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%B8%80%EF%BC%89-0c90e66798ef/hexo_version.png" alt="hexo版本"></p><p>安装完成后需要先初始化一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init filename</span><br></pre></td></tr></table></figure><p>自己取个合适的名字。它会自己创建一个文件夹来保存东西不需要自己提前创建。有失败的可能性，如果失败需要删掉它之前创建的文件夹，防止报错。</p><p>进入那个文件夹，输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><p>初始化好的文件夹就基本如下图所示：<br><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%B8%80%EF%BC%89-0c90e66798ef/init_folder.PNG" alt="Hexo初始化后的文件夹"><br>有些文件可能发现没有，但之后都会有的。</p><p>其中_config.yml非常重要，基本所有关于网页的配置都会在这里。</p><p>最后输入三条黄金代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean //清除缓存</span><br><span class="line">hexo g //创建页面</span><br><span class="line">hexo s //本地启动网页</span><br></pre></td></tr></table></figure><p>之后直接访问 localhost:4000 就可以看见默认的网页模板了。 ctrl+c可以退出本地网页。<br><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%B8%80%EF%BC%89-0c90e66798ef/web_page.png" alt="本地网页"></p><p>(完)</p>]]></content>
      
      
      <categories>
          
          <category> Hexo模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> Blog </tag>
            
            <tag> 图文教程 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
