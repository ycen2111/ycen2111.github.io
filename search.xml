<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo快速编辑TIPS</title>
      <link href="/hello-world-1a2da80343a8/"/>
      <url>/hello-world-1a2da80343a8/</url>
      
        <content type="html"><![CDATA[<p>一些基本的Hexo命令行语句。每次修改完记得按流程测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean // 清除缓存</span><br><span class="line"></span><br><span class="line">$ hexo g // 从新生成html静态文件</span><br><span class="line"></span><br><span class="line">$ hexo s // 本地创建 localhost:4000</span><br><span class="line"></span><br><span class="line">$ hexo d // 上传域名</span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MGT388 Finance and Law for Engineers</title>
      <link href="/2021-2022/MGT388-Finance-and-Law-for-Engineers-db6f0b5e205b/"/>
      <url>/2021-2022/MGT388-Finance-and-Law-for-Engineers-db6f0b5e205b/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="5de8d1ca2834688d5bdda835f3acd55cfe3ff309833ce3a4e743e4b55764705d">c9970121048dab1892173b62e4bce2896bb95d167225a7277c15f9175947a6a4b6fde3c82290f0ab53138b4c9ac2d684f5af62332a46ce22ae8b7c873745820d331326df5e7a5567f0e9fdd436c92062df56e44c5e39cb7aead960112749f6eb58704a8337d2c5f1d6b5af1241572516c1faa109fcbcc47f8517da30b49a687dc410693a5ecffeb86f8a4081197f783c14444f86e171cdad4108532dca667a18a2ef9684489e6d828438df7fc07348a8bf774fcd5eeb080d45d212e05e529bb55e1ae7ee95161763871450dcc245b36f59c6911e4bc8340077fde3174ef724d85432736b2fe7e1f8bfafb733152cddcf61defc54036523e73483a5a2dbe11a92584d004790030810d5b3554726ca690b374a0dcc0dc3adf89054d62e5fd575f016f1536e3be852d58321b86ce8b1a6720452f88cba59a4b0ce742aa22e77fb9fc5218e2de156b42cdf18c1054ce487faac42aee65193ab7862d7edc2e6a2b2a2b7bde2de79e89b84fee760f96b03478a27ec5c7af2c59387fa43969ca8c99143da8c65c36adb3484c67a053480439e0de9e6476fbb31878a0feaa20bedbbc12c3b8329b9dc7c3654fe4f9a75f5c0d12366f3aae0a55d6345276bfa466894af1cc19e68d7fd672a456a94d05ad07ab498ef965435ecb8a2e0b13b33de0952b134a46172e71755ebd2dd19d4384074c6f21f231131086d0fe2cc04c2c4c549265f28f981892a1697a541ecb54e495ccdefc45700b8a42a15a58ce31e4b8b1b8b1c3678fa98d500ed6b44571454e6657b4839677552e6b57856a668912b4f62c7792165cbb5be8422a106910cb2208cc06b52dfbd49044ae5a5edfeef5c2c49d79b42754883199af5399118b405fd64cf47b74e5334c7b891eed5755592df0c8e7c1c043c06d34dc57d3a14c9781003cff86ec59d3ec7c2e73db60d4c03d4e1abc23ba4e8d5b4efbc557670af5fdd1340191dc785302e3784a0693c3e667504fa0f4aa668abf2ec3a29df62b29fdd4ab3daa11f2f2312584268c6e1f2df1ef777e4921f08e619ee55e17c2060245a1fc73783b339857822a415d047290312202051fa5a12a38da31ea3d0498bbb1b35a29d23eac92cc0e2d9493c97a71f79ef5bb2a17989bc4ab6230e156ac07450cd2804d968a8f5379cc8d057499c4dd8d27ed3692b0347d91330cd0512281354948ed5588742c0d396a8accb4145eaffc9d6d54f1b82d2fa8807d21de44188515054fbbb8c5b90b87572e08ea5dcbcb5cb3a7912479d41d2eb49a03edbd4352794ea6749c4a86c519e0df61dc8ed683d8212d41aaaafa8df30f3d8813227d08b3dea27cc9a8a50888ab9591105002e28a0010401300d1bb57c2c848be51c616debc022b84d8a93559b0f3281ec44255e5bd96cfe358b1a346813bb0ed8a1033212885122ab85d86a2ddaf85934705f4a5f962c2b026b5f93d4298c13de2c38305f3c4d5324c1c771530f639e38e2d0397cff6c4d9267e3770fa1fad279798275f2387162d5f8685147b262e73b2bdde1cf156f8cdf9b312fb50884929697a3c5647baf31e3a971f3c7770476a666c32b4a237e9acc78b2eab4dd2eba2c97a8b96466f1357d1ac9d484ac4c19b263aaed681bcbcc9581e0b3c137e33aee02d918386be45d21f3c62ea265ae8df19e62fa8746c83e09cc10deb731a458fb659327dba12ebbe0a19968a36e52e9a5c75f93e311c75a467be566416612886a8b9e6fff78b911d5d251aadaf8b24893c01cfa31681fea1925222d5d256d48cfe9930a59ae482a2aeac373da1ef9375067fd6744ed96f9ce5b0cae629dc62eda8c1d9a6b9329d7792fdf51be6cb3cdede47e9abd35b695e3e3bd8b9b3d9613a556be1a8354c7f10fdcb0b150fc954d8f5a874fbabee8fb9b53c52b63d0de95913d5efbb84885fb770d210ca937414117b2fc363b5fc6c0ac1aea02b0f093ce4d4479ab63dfc264bd90286a214862cb9f7af7d803d899b8e143b8963a9a69c2760a63d090c9e9ac7ffb29f8bcdfc6222f7db0287a80a04b1d5d481071c8c7f9537a810d4700b73fc560a4baec18c4f74a8c511740120acc3edf1b1626f68d623f775604f304945fd9d55ef4a0c2b3e9d2e4d9395fee4e87193b96bd6d37041c1a83badfd4aa2c5e84ca367bd5b4c1b58bf5900868c0d41416d5bf797925a24fb351c4dc6c940e232c78fd1baa7c4a4126df7019595fd3522800143bab183d539eb72147b79d55adaf3b9f3bfa01e33d9dd140aae2a872c91ede37487b1cf12c0b656d3a3c0027775a857c80a108e47a05bc1ec9bb7128</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-up">      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-up">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> academic material </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2021-2022 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MAS381 Mathematics III</title>
      <link href="/2021-2022/MAS381-Mathematics-III-3b6ca523d2ea/"/>
      <url>/2021-2022/MAS381-Mathematics-III-3b6ca523d2ea/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="99e35313c9ce619a6e65494e329e466ab2e3a80721bd3ab6222ba161c899554d">c9970121048dab1892173b62e4bce2896bb95d167225a7277c15f9175947a6a489b5f0404ac038f7b09a1f5cda8f49ddc4d02c9d4bcba533b286f5c70309335d62fe18a4e467171f2ed682bbc0170754a8e916bf48e5787b46120abbcd173440f5780bd65a11ea9a9daff0ae7e98bf354bfa8ba00e3b6ea61eef965cd3aa168d0ea23296acada758b60573d7600616c7571de1751beb95c0d41709b9284f0fdb269b36f2c5f4a0e90b55702c4e25573b1273c0e470d6180163066b297c513bdb3a89f602b2fc6859532d764d8f9628b5ca9509c530b88c2280075ee2589c423264910c41ab5341216843c19f38e56b059a054a1a669af69bb5a6f2c4ccfd548af9aa41f21277aa5e253bd227fe1b2415e7e51c36285101fdc4f64ada1b95f3257b6fc6736739da1c1e48a4e86b247cdcc06541b63f3b738fbef807f0aaa46b00fae424eeff86d1e4a7ec7eabd15e65098f3fd4fbb02852c9955823e4baaf0e9a7003c828240190b8babd065471877d51e0c406c135a64aeff3f7c1a55167f9bf2a8bc8708b80a074d4fdfa745ff7b81064a471662b1391d1b676ed01a5647149505193508226686dfcc16a8073cfb5194d4e6778b72b55db051f32f9997e804d79c3ebc9d470660844ef9718018d00d2ab4970b9404e1dbe0f228b082117280bedb199afcc263590aad163f378729914dd7789b0b9672373aea8ca639cb7772eeb4705128cbff8e34c49c71bfa4bc9495fd18a7d3aa00a7a315ca44905cd820b001f929c9fe67b996a524eee348a01a19f6b983bf288e6da507dfeaf9c6f6fd93cdfbe787d8d48378d1be8f0538fd49088a6ff5da686315b784f72227a36edd1db33f850e53b0ba3b3c918bf6fe46604d0a4b1451958f018631ca87c83f7031844936b06c38d14d406b642beb426f285f1e1541539df75d72b00508daa9814aa202c5aa18a3a23ed08d5dc58026e491e8da330590e3a119b6bb76b123baeaf3baaac0bcd3a2693ab0aeb0f22a20c1825cc831e640cf2e6c1d2b6ae5dccf43a07d5e0bb82b7390b3099a28eb1d3b8cddfb053f812ce8512855f7bc3a77c2b45484477f1710b1fa55eb60b0c17ad20ebca34fe1def62883f67aa9c4665150c1925a1d1574af1cee05ca20d3e240516dee8f50e7a595f1e056dd3b6daa01447e414306b861348b6599fd70441785ce6546f56eacee7ed73830720a1f43694b312d2e239d91e9609df658fe3b235c0c50af3cc7b7e82d85d7343e3a659ad5d520aa95f91423c46c689037a858a381b861a89701c75be6ec34c95013d01b295a7f103c2ec0e4723d890b38424e98c6ef36b3480bae28f2dead6b7d9ed1c9d1c605a2e43cc5ebb83591755776124ebb659fdaf195c9cc04b8aa9524da27b806ea5b3d525bd34516e4d66d206f6b48b39c14adc14dce37a24cb903867f3f9048039c69544edbab840079ea1de6206d24cdc9ab87a8fd93b0a29dda258ad44158f081507071d3b01482bed9c11644a6c764efb5375b9b9db33bb2f2ba9e28db7148cd6910ae283c2d0e6b5c58011270051bacd92a4b724693060b40032522ab611f580176865353bcedbe584e8accf7dcc434dbcc4549eabb9deb6d1f7239073ca00464368a9db851221cf91bf30d06663e2b4ca72080d252d6f66fc9338c4e3c26304fed20a673b9c4e8d0c33fd7f7b09ea7507cfa7f14768fa480965d93d575cba5dc79e6c70a6316b430e99259522d3e27501a0bdeb27e1dcf47a371f0f0c9693aba8efdfa62b2d2b92650c2ea87eba8fa87a398b20f41bc4e7e5e33c31a35f9a5bcda3d3d19c756f8c9a74f69d70d5e78bc651928e564b1c486210253e9c4318b31d9acd0e4ead0e650c930ce5f97b3d66d08adc43a1a8d8fbbc8590b7b57735891ee5d029f5f7c56ec5fa4f20c7ed6d43210fbaff465d1865c985c7c97335fbeaa2477d88eb8d24824e9d2a9107b967d29290ffd9c648b70f8b95a847c587b61260a3231621fe5579f15f322491bb184dd105e79e8412a771c10a4253b70a41a6318e10b3e6364c7196cb6e5dc11fca84c4926dab2a41b2ff912e3ef98ed618e1811914fe3926894e0308129cb83f7d0214a9cfe000813bc4fc603df0b44626826edcc02075293180c98e94826551d8e54d7b4f78f14ebb96272902946daf55ac4c864237761e267a8097d40387e53113aa8e50df3e7df35ad11a3787399b160080cce95dc1d7fd6727d0629f914e50bb04613cfb9e43bbe2a5c08b6c180dbd662f4784f14cd279175aa7a03ab0a1d6393dacdcb7b666a5f66921849c0ffa58799f67750cc20cbb0d3c1abd4ef879d3dfb6c405f7716816ca594f0b9a21ba313f9863e884494578b2de876bb21c82601074dcf7520a1b0aa366dc7e5de3c34828a7aa1ba60c9530af9d36b3c9c5a5b0de884b4c5d796085a2755dcd98ca7839b80624694493361abd35878bec25f52eb59e0ca49dd9779d3f1d1e5a11f34c5f7f92eea196e0cd3458cc64039c00148ac72b14b551384589cb5f921f212857c46b39db159c38188ef58428f7713ed378b3366392da46f4d5a00b2263d127958da2d1f0035aaf631f056551f2e562d7913afbe9ad93814844bd317bc0f94fa47737dba65e9867625dd3a271c5b335134b051267bf4850639aa535330fbc7a812cc40222d260810f9ddf51afcf73b30775f1c06c096e8f3825f767a7f1901dd9a4f83fa596be1015386d857781e5d1a3fb1c4c19aa5db2fe49e543064556d1300154cb97bccd1da0d17ad7f770ddd7c6952efd1f89401c420aea2ee9322dcb8f191797e3f6da44a3e378185f7e8575ce956e010b039fc28f847f37f4c09e7b75ca7875faf8d4c7399a020f504bbe51149fbf09e118c990d26cbeb143558fe133a7c9a14c85333ca8d31271cae49ebcc5f2e01d819db0201d0f813bbdce79e9fa1824488d25dfe374841764ed520ed2a3608af9924d25bf2e33a9f6c24f44cffd2628b2749d21b3b00f2ff685cd8897dde16bb5e62aa7c8d202a2dc831b6173d400f5bb84d914335bd57c04950236f7cc3287fd4dd02672a3a7b4a7e7c3a7e5267f418532d8ef4e80b24edc2af2796af76ad4775f192e10194cf28da77fe6d330c49bc9e519f6e3ff90892d7969538cfac984a03516803101edbff9c2252c58956bdf4d5308548a11cd3ed89dc0bd0ee4132969ec13cc9835afe0b6d3e36557f494bf246d114ed3f7ff4f0718710e350717a9c8d30d0ff74070ddeba55201081d54cc5872b65e0e8bd544cab8defbcff41ef2f3632515f44d72ccadb65d2c863d818280b96960b6b2edf20b2a089939ed4e6f4935c0e3a1bd8778f67103db8c2882d57d408e65c924fdcd20347a0ce9a135355a3cfd511fefec25d6e6b27115f9b1a667fbec6b1f0beb312d2db2c821c6ff5918320d684d4e40d6a83d7a6fcdd10ab58f94d46b01544670a0bfd9f56f4a515e34c2182d4e5bbf9c857f3ca47089c7923794fea42a9551079bd3b51c5721258fdbdb5288893a4f7e8a101671b2a79f9b31fecfc6f473f35437523e539530e2d91a2f91c0434ee2e5d5446ceca072a719bd16f5def22d86106151e0767e9a248ea619580acf9652151e0774611013429d89edadaa139ae65fa18a8d27d1587d7ec4b151821cc85efcaa848a9cf40f9fe2c351f5f2cf9b151f566bc29debccd1260892f4b75847736ed345df7aa3534aa1b95c3ea8bd9b314762861efc5ed9f37cd39d9aea46b8d3104a7397a506a123d9f8ca98d5894de6a54edf85d9a7c1f2ee1b2b381431eb79faffaec9a2f191bcd749b8e4fc2ec4e46d9395ff932cd193d4342a5dd9d5845d8f42c6737fe9c81db946a2636547955ba11d886b544f4934e9cefc5aad3894d6145df9479e2672c8fed3b4a70abf12f4b2ba048448753474094096903ea19fff0114a2cc9f03d540157cedee50a96f16b78ab08f01bda90d4a1c69b4c405377c7b216d31fda158b88a9c9c2a0fa493a4ee584eea167c12d00cfc1e492b49d8c3d77cf013abecd777d8b03cc05606005cefe18a84921e2e0d0a7b7eedc2e788a8d864e6d5fa667fe12e98bf22f60f2e949706a7f89a8069fce9662cd6e6ea3551b3f4fff382844194b3135e1691a5611d4b5a71f9888d53e0048141c65b74e2eb6d36be18c378078a697c3e8b01a424510448a2f4eb106238cfbdcda7521828a6a4f31e77a61449f1f7621111b8d04df3f01b1b4b650583f85b4a700f0a37c053b49995fccd140fa93c6e5c8623e1e1d7220b41e90457cfcae8bf3e0caa7d3a68dda2926dc468b5a3c22e7ed6287097051f6f207dd3583a5a46fe5784341a5d49c67821bb530eda5332afb1fed1cef32dad19c32625caac3e2a2867eebb675f53a771461e5d8f729cfb307729f4c51cd0b28b1ae84b01f3b195c9f23de1f06846a1c75630107536e79e22d033fa3ddccf419e83290e3cbba3d87da70d0ed6b080ab4c5dc6f37fc65b4a2e47be3d4fdf09f8ba23443f2798325e71b1bfbff43e77b20cd19d78780656779e81ed7b92d626bac5e24933f21a6779543b5286f980c19431e4e188dc842106896c6c7bdc5be4b834597ddba024e78413476c1fd0ba8ac5d5f5a6c94f6e9d68cd98cf4f08761b3bb45a8e93c444d7c07d1202db2df4420d66813deee009d728a7dfc3a8ddc641598cea8dd41f9b0181152e9277a06a75e09392347a24ee1c876842d73e86fe3708c7db75fb1ca85455488f7813294a44658422042d1119322975982ad20b614a90227a5e50756661caa0cccd776516d35fe22fb0cb21ca3e1896c7494fcc26904a8b17852e804c3591552641563eee26ca01a42b444f2af68b2c32778ebd380f1f557846d10480b9daa50b7e3bc2edb63ea67c16a11651431d3721b86dc716fb262a0a55a71c72cdaac1c4f541ddc6da28744a75f526f5eb667453e20d1001a4c5dde46af0a8b5163776d0bbfbe30434f66cffee4d817efcf5712bbc528dfc856db7bb9525f28a0c2b30fdd5165082f649dfcea616ed71af43a1afc3acd02cd5d15c28221559cd03405cf3477298e4ef73c4a37da023754b71679114a625616ea6c7b7b1861d0acc75c4775c69f3bd523f4380f2c492cfe5a622b1ab49f47253680a13d49cf7402f7214242514c1bc01cae391a2b2d99f3330f5682b0864c70c93d44635983783dd104841629f3a8df6a0b2b54be048fdfc8ade15731f1667fba7727235a7bbaddb50f42e5edf8197b753e322af329450268e8ec0438ce50010283f10a3799649b1ff00afeaac3996e73ca06a53b81c56ec8b45011ebf3e7a96f287409bc1d29493db419f4d4dc3fa3958994a9ce497d19286215d7f4ed05fcb94b69388804f8780a296ece7ad82ff602fbc1b2fcc9b391c5237c0cd2b6945cebea839fb94e6c22035e476f761c00fcccb1e73c2def74237ac2dd35d03f46f4590e38698486a8c17e234d5b455a0ab79eec35623b039285b0c907b4e714fbd26fd7da82afd6fe5563d4d650aa5c6b551a915e0f465e533d3a5128d25ea21588890da6997631b70b58d3082a24e07505e905adfa804b8d7f4cd4ba34bcabb7460fb0d7a7bcc1c71f70ac1b734a7372cd41d6e52dfba0b4307d0922f67c140fdc7278231effba0288b02ffe95a2a26c96bc9335763214f14d7120e8b5558bf4241551699eb971b08c6499ef7bf4b08aa276418f9c48e5545b0f213c13dac1ccc2a2b3a3a66413aa31cfb7f49c6e628aa0e2de86c160b8b0443cce51ca4ea54343cba2538ed012bd11d855b39ecebe4f49c07e7fc1a3350883a354c7c13b807944d31b380a21c57bb6cd75b78fae73b66b8624a26509c3cd66030d604b1fd7bd884eef81cf8e87a38e99856afd3be40302fda04cd6adec26aac6052b019a2648f3611885ca7515e6c3337056537a53577eb88f232fcc9c13717778d31de2ac477c01998eaad68e0a92faaf6448cd7513c38db19907b50a1b1c143b4395edc4aaf4272fd0ac7e80ec9c37bc67b799b49a542c24e5d327ee9cc27f2ab2cbb6b89347a40ce2a409c28455d4cb6cf8c3a5c94c536bef7379aa66ec2ab8e09dfd313e888d34aca4d650fa5a593be21d86a5a4971b20c9d1b7432b850775c05e78d60246b72577296cd554028761704869bccd612630f35703f0a90be1e5fc1dc176228ec54a10ccbfc0d715dcf150ea09ff2c6adfc770c96d0ce3b623100a4fd9bb17491153cd52d242670212d08</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-up">      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-up">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> academic material </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2021-2022 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EEE380 Individual Design Project</title>
      <link href="/2021-2022/EEE380-Individual-Design-Project-46fa0024ef9d/"/>
      <url>/2021-2022/EEE380-Individual-Design-Project-46fa0024ef9d/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="3d3fafc64ac69ed37f50b2b0fd66438ac25b274299febb292104fce092dba036">c9970121048dab1892173b62e4bce289cadc2ffd08d2ceec6c034b645a8e2337</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-up">      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-up">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> academic material </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2021-2022 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EEE348 Electronics and Devices</title>
      <link href="/2021-2022/EEE348-Electronics-and-Devices-57a66493683f/"/>
      <url>/2021-2022/EEE348-Electronics-and-Devices-57a66493683f/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="f86b4ec364650cb695274828cca9f1f18c995cc69d395142d884cea59f9e4132"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-up">      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-up">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> academic material </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2021-2022 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EEE339 Digital Engineering</title>
      <link href="/2021-2022/EEE339-Digital-Engineering-28f94ee4e939/"/>
      <url>/2021-2022/EEE339-Digital-Engineering-28f94ee4e939/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="cef3e8e4c29e244a33b564d9819038d4450b904994f89cd08c7cdfdce5f7cab6"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-up">      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-up">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> academic material </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2021-2022 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EEE317 Principle of Communications</title>
      <link href="/2021-2022/EEE317-Principle-of-Communications-63039017b149/"/>
      <url>/2021-2022/EEE317-Principle-of-Communications-63039017b149/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="568b81fba3bf7c7157543f031477a32cc4b6ab9bd151960ea04d984a842e73dd">c9970121048dab1892173b62e4bce2896bb95d167225a7277c15f9175947a6a4947a549ea78c89bf79adbc2c879c9cb7c248c0c3d5e7c79305fcde30a578a5ef693be83d6ac6b5303c9e7e3ef499d69c86e7ba1a9c5827ab6e8df91875748fca112b60bd5cb695ff6f7c3107b2c02cd7da955959894ab53902f16ef43e3fb2032812631279818e900629b1ff011f2844f3377493c406b906ce2f6727bb3aa13920a3325fa51c5007c55524237b3585e518013636086136f54991657f1db860071374f437062d035f80fe62014e60d349170efc2c1669fc1d81f91e81861fc89ba7461e34f05f0814a461351ced8f98db6847901b0c21c71fee0c1bc7e636f3d4c551f1960a2c33501faf6dd9626d0009b4d44a41f068cc800d39e7ccd76030987454493e81c07419fbd11f562820b31f22f110bdcc8c774c78a72c9fcd42b26ab0e5b8c1f1cf732ec9db099c9a1f7af9aa6d5c8b297e3c6c88afe91851b20cf2fdb9beab9bfa237a461dcde430e123c9939e5286898f5c3a17146fd80100f8d9a3f61935c17700664b8cc65e51fae714436793e9657ca43ee472c675f05d410600c827c9bdb1f1fa71e63e2a9faef424474b4a122f3ab5f9c7df069467e893bb407b7cf3dfa55045f48e11e795e12b794b3c7ffd4880422b3369f89fcafb2a0caa395ab29c3765e6fd1b8c30ea520cc54b2f6522bf5f23be3cca82861f5e8f74760c1fe44c191cefd5eaaac9540e40c12deb4a571d254d6f103537e39f74d360e58694fd1914550c25d8185515f6e755ba2893faa248d754966558679fdda8ee718d5abb7e6602319062d7a7ed67e77f4639e1111861895d6911a5f308fbe579527ecac6127fd74dc4b1a95c4b261988af49e4ce5bde0f991ff78efcdef20379301de7182d58cc25415e08ecd47d8cb0dfc2fe815e91916111597ecd9e6820d8cc6b31e4d262413cd29e7f47c3964430ca754dd86a017fe45aa1f7323991bcff81020ea794d4ef82c58288e6c636bc5b22820f2d28c82bba665e5165687e002f450cd72117c019fb5385fb70f838efa4d94e5752a123f67f7129a1e67f4e25cc5502e6475f20386ef61296a679b50d229c190f0f7b0a6e71705b74aadd8f81f02c5b4b8a570d0394567193b8aff9258a63b7f9d3f6643bfc2901d5e43fe82a90c4f20a4327a13fda466e904c1e8c6dd8ba23918b46acc7294b398f18a6f591c883a645b31fdc2e3d6752f90f2c0770a9f8609fdd5bcc5403647f3518400768b924de72bba4436d1a96eb46aba1a5407867e2a40c2077e1c1fd55781de6eb7ee771f62b4de9297b08c431c34b9306d30706c213f834dce612493783fdcee604c72b28e641f6ff542bc773e48cfeeba3b4f4d4df419f03df98469890f4f16286f5d517c445f6724ef2359b4e9106b38241e222d77b739ae094fe199d707d4e96502f443bb6f1c0ffc76beeeb55b520b0559b95b8c022d7650e00229c346823674fcdd7c8af2a55affe402ae0e2b00576a0d9f7492b97d04a6136eaf37f4a9a82c71694c5dc24406beb4f51d4fdc3da1355bd563766244b4c091abc1719859e39aa330c24ddfa39e0d238f563f42d102a645e8d80a1ebefe5b0a05946df6c73598926a94d0f5bc6710c2201a24a898bbe6982dd29761b8908b77a6ba48753c797100249ccc00b608dcdad9f5dde68aa2eb8bda642540e9bb73b3ce8b2983941ade6fc07afd961f95097300340e3b65ba2e76201a3a58108437928f26a5c3f881bee870754c9170f0ea04456de3eb3474d9f678b9c66bfe2f076a4d031c31e46bd997c1728ff687448b25d5490135eedf6dbc708ef92c2394bdeb90b759ec28c8c7303fab8bb09ff284da8402792531ecbbc9533c5760f20b184ce7ddfeaa46f48791911ccb4a7b467b6d3f8a3ee1cc3ffca4e1797c3d5e0ed26ddb2d6a2d5f61f9ddab235979df0c226b54ef174bbd9a740237c7e2dfb6d9e4624b4174cae0a24e17034002544bfcab1e3d6ac3535c40f2844cfa7d0696dcc91fed8124f9e1d4d4f26d44584249d7612af77564cf80b964eed45eed3abd94d05685efaec1b163dd14f7dbf318d800566cab8ee784120351543bdf5a685223ee8033aae569d37584c142dff8c1a3f2d828ef79e6ee89738c5bf909c2fea1031913b371fc7058884c659def8312e047df60a6509fdcaf8c6078be671e7d58c96754b9db7ba45200ad29409b8f468914b114e2ef3196e5b4cb9301f72a2cb3c41724d69eb1f4f55fb1db39546f15375c13600c6bafbf8572ebc3bf79805580d06968199a47c98706bd7313a0c4b6b61bae4bae1d9fa0871b66ff8a189283decb72e2e26ac8ee16b74ddb65b246e95243f879f8716b4068d0022c521bf765e919db133d5c89233b22d1c9bc69b34406880084e6309aa3533e804b1b576d29dc58080a649fe6cd9c79d2b67e86a5cc98cb70a420144c37e31f532e3669e4b279ebe4c9f5ecf794d8818ff5f4324b0f654a412b1fd94bab93ccbceab962ad2218dac02b2ee55939d15dfa4aea68b32721b4b2c80eb5ef69f9b37e193f7272fa74d0a09effeec4f7cd43bc820e578a617530081547fffe58ba893301c05a0b4d25b6cff84dd3fd19ac273afe5acb68e52ca71a8b1dc0541c3a4260bf949bede3f9af9400e9b0d1c13a99d7734df1aa66ab948c5522b6498d130670d395a4062bf16455b3708c33bf714a3010a3294951de7c01f5a1b2e5f35557b286d81eae6d8e822b0d15140c7c8c4ac53d812a12803e9aadba090d625f7f550350f6281221626a54dfd8360f6b8cfec041f49ab5c94cc959a377904acafad169ca87fefd1e72eaa514b827792507c5c4115c8d23b1ff2d7f05f231c1421a9c7169fab05e1346ac95f19dd3233c46569eae600bb586b6a5fba71d21c5618f73a04e73e35cb73d604fc656497ae2eb1afc1b2db765b2cf3f69c8e66e47ff95b500c67ee68b7627824e9a5ea7bb6f858c1e3ea857d3ee02f8cc363534d337c9e53d59cc7a1747bf17144d266610ccee2858fd8eec4c232a4be1571ac4cd57f7dbf5f60967235b6b552afa5eea5266f0011cb8d51231def7a653f135f3c50fc7b7619404a79ae9559646c469065132df088621bb7177656cd4a5956c3b85387874216a6a1fe3c0f4a50730a7213e21282b27178a05e15c6fd90538b33d8e9a7c05efdecdfbdf00929221c1242a644ae97dfe3d893e3959957fde859b12e567dc0e43e996a45936c007b98801ec3eddca7582e058aa07051741a7bc9b7faf37afcc2ae504643beca93e7e2d91140a3a0d81d3a91c39b36b0b690ec781fc22d01a0e3425b12bc8030221dad51965ce2711805ec8015b95d64d0a104f486aa0720699cd0699ec254372e5099ad00a14968498edfa8aa13e1cc02ce087b33e4ed14af05d851330cd842b15cb99b26c7d548c68b1c728a11e8a35e90063840340d581eb77e3ad123016cc5dbac5ffd72087e6779edd335838c5d86dd5e15168e833616a4d640184a26270e666f6b4fb9eff29ba4d3ed8959d842b2ea7eeb2ba60696321a9002e00fe4939cedb68b364b3ad592f702f4fdcf9368aa2cdc547874741695e8d26e20f6d51bf2b627db99d1bcc9cab164a7caf09efdf37b72c8763b6574b7b3f12e3b1c8229e66bf130470d86847ff80887eaf553d8ce9fce6a4e362bd83228afb27da0f7cb483b68ea7e3283eb2c4f343c1b68378461782c80609bb4d670b73d5053efb10cc7d27213714ff8a630a564d3af05ed507b29f34a0319a6333f0ba3f469ea99d1334818bc9e60b31869e821827c55964472a854cba0b757335556340c0ba9e7a13b58f8f6e2ea911f3b43ea0f5a3087b746330a5455c3fb9f9f998ff9b290388b5afc02e326585f1898e68563150667e0c2a04c8894a070d9c954c8480a77f7b25009cad47866d9851e6f39b1acab8603218047abc1ba3bf42534558e53f67750acff273b6ed49bdcb374ac6dfc9325e83d8c23b534529253668fe832df57d76cdfba020fe782f64d38b71fbec68439fe164d09abd9451db036881b4909066a0cc9a880c0c4e4380b7c06a0f5269b34936eda48aab54e5a9056d7572220a402b112cf6377d488946809a166480900e523eaa0a35426d3e82ae743ed8bb97230955136eadceeec22409c95796769851706219a9f86c6134dc23fb86d603b3b87b52cd6c538575de30cbbd86300b24e479ad5b236e56fb268d6ce6b0abc14072c583a3ada2b378b99eef499c39ad3c6190cd05bff06f9a1e417ba2e804b1a8e34ae30fa916d982b4068ce3622416317ca8444b1a094b07dabc2e0cc48ea79219964ff8989e993c04c54f1d4061cbe842cb9a7414c6526865b0b553b20adb07592e097cf78f3a04a7c430ecf1c819f710a2bf065ed69145909aa1fefd54294acc3f70f7abe11ca45fd92452702148f3dee8f99a2c51621b5a65b5ebd67f6d5af9119de9e3240d0b9d5bc7571cce8e1ea7fd36e0f04239d7106631e6a0e6f2f2e1da2a6786a334ad2d4eda0b2e36044a98a89ad95cb8bb61f2476e7fae18f50659dbf2360e5a71640decc671cd6774bdeb9dce860aec1dc8398866b8bdea104e4af2acf689e35a1b2b3445b5b8af832c319f7b7aa25337341d21fcdd07d24db63cea0de0fabd8002718c216df1a74453e2be4138b2f7fd28c0a191753534e38db16e7a232268508bbafd46237ff2ae9ded132f066dc872091de6ba3ef95726071e118d7024a6c11e23ccfe59301c060afec4998d43b81b48446c22dd0b204f17f07c041a0c0121062bba1289747b6b4e8d9c1c3c79bff4b97652e0838df11486ef9d7c22790143a5eee3b546e5545255b2dc40b5a2680f97b95fa0af61b0e238fe469f1914a70eeae2abf65fa92c6a8146f6aab83b9605bc0ebc4a1fa316fa4c0616dad17a444bffa0e9ee3505e2d8a5f2cda1ca528b2d4cf153a864d90fb954a39704c407e9a42acf74140fed9a5d89246b26036b36e5a6631e2d21fffc60cfa7985f5c4ba5b3c997576f4c6e26f3a8e5fff5bc4982a64c85409014fe5726730fb4571c0bd16643d1a788047edb039a7d860e939e95bb95618e9cedf92da3c1e952f01d1cb7659c519a2a497ac7aaaefd4b9cab734f3a01ed3fac0bf17a1bd1b0665af826efe7ea3cebd7d48d9b316bdda65cad00ece73aea87e441c9c7accb893ff5b50c0dc4dcce3abb37c8712192a1ca26d49722f50ffa590f54d2a8718dccf8d85049516c26c750221e53a0025681d24192e9335616fd33d0163e497853ee872a2ce362c2c4e5e71b454c1c5d11cf2543e126e19965542fb4ae3e3e8e043b3107824d6a7ca8a99b70df4dfe862509053f934ea6e2ce2da2edc1fbf6669c2f13dcfc070c69f1be5f6a734e66adf6f90fb9581be350e80011ef30dc1c9211850fb87c4ebbded20869ffa3591a5d5eee731bbcd0769c9ff1a6173a1bc3f4af4e1aaf88ac84a45f0ed80fafd25b0353a9c0ca8630f58d5d32c60f3033371c91ddb411713a0ba12e1e419fd7f7f37183f41e06983114f2fbd230744595548f4c96ce5f2e3ab7adb2e49d286bfd57526b89a0b3b2b5bf50d9c7d415525a868fffab994291f567fd2545b27c948c48ae38ca1b607958d4b9a9fa1d0bd337e9c7c55214fe4b5d25926709012a7d06dd34bff1e19be2d715f1bba229b5afbbc842f2eb5a9e97a5da182258427eb8f7c1c27d0a7b40042fb95f4b2dda4f5db85350e4390bcd67c35f01d779d93f3dd2688308eec19f75ef0d62d048d9175abb27d5527d2f906b363b3f201a927dc05385490ffc79b9dddeaf9c094e973aafcffda33f844d326d0c769057bbbdcb948efce35abdc8d8cfabf1715970ec364b52eca02371b93e3d1ef7e13745c286ddfb75b81362d568e615badb073e8dc95080538e70c3e4f5fdd8a36e89fe2188995b4e4100e0500e1f828e4928ed7cdd7100bfaaeda44c13e7dae369256e785f37859d62d669fcf3024bd668123c906aaa4e034e062bec7965adb6d527d4d9e9d2386666525fb96ec9e9204d50e94031a83970586da1fb3df6f449c979ef38b8b07bd5e6cc6ad97cba1732fcf936e763a6863bc5b8bc166b57273c8bf24459e1b8af053c8c24cd944d348b1d7104b3abe34e3a145fbb86518bc7e43322021d6a80238cff4a24d53a3034363e336db898db751de8f57c09c4606e85b57bb5af0e4e6cd945b3309e3e8915ac33ea466c221e15e1633e7af4534c17f157c2776131105df53454d64ab4acc0311d12f133ef3c1977323caa8081ba809bd98facc21fc290273a18c66ec9571f6e31e4616a60d928a166841f5f62d5a29d0f66211bc97415a5faf8d682c867a55cb674a334e9c0fce7e5516dbc2ed47738f0b24122faa4080cca128f887884809f2c45a654f8bc03ffd9e9063013d9b01d9474b7d7d830000d95ff878942f2f63139b374f0263ff3d9f645a09db4ec33fd319d989367c783c97fe0577f9374a4ab4c443b1a7906d6b052c7da75904f333d504c4782bb82e774cc6754f9a44854d9428d65e00c3d7c616d016e02d96bbef1ed85c3e3f037bcb60e648c52791c6174cca465a6912a0c420f55b065bf426df910b67e78d52ca05b0756c05b867f7cd27ed76d6fef2ecc3b7205f8edc4eaf9effdbea0b7a8380e2d115bb19bd00563ac37caaf8f5c5933691501d98bec60b0261b9188338bb1e687c878026a54621551eff16786578c37822216666c1fb2be0dd414d47af67689ffc00aec3e4f5af9783644002b96f7d96b5749ba65d5fe8b2890698980295f2b8f5f505af0c55f262cf4561b9451fdc236fcef0bd392e47358a3d8b49d06853dcf6499c5a9d6f840e16ea55e2d10c0632bee52ad1cea4687f267f544055ec49c26d1fef3244176c5e482b53046007656a2aa59f158d6e695ecf3dbe3bb85b67dbb30c073fbb13a264e1972eb1d5e88f36637606705a2d80c5ff7665687e534bcd1df03c574525c0f5a7b2b9aeabe97f4f80c55b32a2b2d3725f25efd36a7c749c9fd679d02e195ed4d0421adbd91aba638414c81cd74534d0a69cf91bf49578628d8286a8fdca2a2b753dbb29b6991369ea068fd1718ce68c6e94857d841da4ee255ac79eab06b84111f8b9663e26f7dbdf74b5d0949998c7b04718b25931834b76df896ca42c8889335d3e71e426ccbf54370babf60d523bd8c8dac896e5de097064a7666fd07f32e97822537795268c3dfbeb64e440f5e75ebd4c9ac6d5e0f0cf867d714f9baeb0e2870db066b28ce19f0c76dfb739ae0f990cdd5d1c557419c032d1380d3492ff57697949c2fd476cebf781aa3f43a5876f98afb244f5aa5279be2f6c07ed2a1fa6eea70fdec27602d08bf6f6dae4acc2b4d3304b4dc2ac5081a0ac66080b1736defa7390baf79e51aca9898d80f34967899aea30e86d2a3c36063bb0df83788d7ee37f45198a9b14a1d7d398d4ce9610131eff68b6865727dd07512fd67eca38abab82da297476efb9c23f7540ec455a209ff15884cc78c84562678ca1f82bba009532f629c502ef7955f15a023a2140bdbafc183e1458c84476c6a74f8af7dd37b9b1dd75b5cfdebf3dd6d156c1894f6106451a8006e2a104525884afce5686f3536c919f77e6c309df8256392ee75b263a88dd8d8b5873305742af9ce8e8cdd05499bdb98aa378f296bcc55295466ace4f46affb896a23f34bea1cf3d9b40942af8b5cdb7fb516f2f28856315f626b9fb37b7b896028bf03ef264fcb690941a564deec0a604b6072978dbb30854d3e4b75808c88e9e04089a0c780db99a3fea6258f7e830d86d9bca5e0a113859da99d65087a1c6a287aebbd73e5f562e521c03e551d216e3f159d6dbbad0f42d4a76cf8ad57bc73184b6637b681199b1768973f1c5891ce3f32ff6d3ac3d90b9d87052ce0021ea6bf00cfd2e3d5312d176ea44ae4d900fa33f5cba9440a884ec28cd16e734fda5e24a61e2214344069a79838f387e481624933be88288c60dd809ce30fe556fdcab690145df36ea32d15cb35a49a82b6e60bb2a1cb3bf07f18ec9836eb2f4e923a1a5d63f5dfbc111fb26da0d637b6e616c52107f6d35bedc4e8895e4d586f1f5f9a0d24abc99c3bf3f76c6569488eef30392f4c72eddcfe391e61749ff08e75617a03788087044fa8015f502b6de321bc17899619be4a856ae7edbbcc7f7cf6dc474174e5f9bf2d46ace758d9252f60ff2a12493a52c08def94da7f619ab58be2b7c66ce43b56b076b133aec1c43698be710ab6644461048483fe170bf4c345dd082ff12724130796be85b41f1c1c86e8c5837eb4dd41c22ffc0babd820fd7a72423ce7698359081b15e6aeb0a996e5129d5f8061c707b14f50a79df5db78763ed62c2d0660b89956e4f83a6e32ef7854090bb97af916c62bfd01f441e0121cbf7e26bbb2613564ffaf1b59d6e4a8e15bb179549b85563ae338e1532009e56f36d716f60dc8d429728bcca236983e05b142b4c0038737c2d75f0553df90d4536a83f7be67c13f65803a63532777296557e0403b8f304586741392e5c93b4cdfdb73df47353a0669e11413a682666dc728a8bf889b3e39520367a8869a2fcbc087315beb44fedf307309e4d26a95f31218052e2233460e365419bf25e6da877b96e67f3e1d7b9e0fd0c090a4a9ad1a2f79a05acadbe147e67d19d25d20f5471076acc8ab0a3af42d35dc70a13df57c06aa8705cc5b2fa67913d30e9b5b27c05cba6cbb3c7d3b7ae99cbe10c08e2b1fbeb88417ce667fb6daf699a12f6cb72fb0c7734c3ff9e4c4859fbef8480d43c1b32665427c7786e1fa6d970c2f4762881ba11841393456ee7f79208d719b19f8ac7d7feb209e5330ca1f164031e923ec580aac59fd0b46b68c94aa1ce07c47350f1a761244be99847a9418fdae6d27df9fcb8af2ff5ad98146b29b4739391e5b16f0a1e446c5393af563e24d84a38cbc94b398a456018fd9361482239bfcd9df18637b8f8e3e5a2eae12c0e40e5f32746dd357ce4a982e0c15e972b808fa38e5894bedd0cd034331fedd23a659ff2fbbfaee8daeff35fdaff1e242f9412622c2c2d01e39951b751bee54c4c343c5bf3678c2ffb46ed2fd5ae1def3f62184cd45aa7034d6fe3d10687521aa1553829a23d9c0f2aa075f8666fa7e1b7592fa024345751ec1ca210d44e9eca410485b65a832d18fb0bc7f4f4bdc5cc6118df2545224a798602abeb2a1a8f9389d6786bf50e4da343be3342dc5c6304e28d04165004bde4fa6f63b8f55a63f2fffb3cd332c113875cc30c7a2fd5f51b2307c061bae93471dae79788c8e28f99498b7c53af08a9f9f782c84bc355e9ca7ffb17ed23035a3f9516f7613403c553b979a0bae9b79ff059cfde83fee4ddd7bcba7756805c8189c40e6cfeb36ffc74bedf6b4ef5f2d67cbacff55da491c7a0c7b7856186a980c2b90939dbddddd4d0ff3cd36bfc9460a3ed3028fca18db5926533f9d487a71d09a165746fcfefce03a62ef6c3c26022edce76697e5ac73c5a334190c162ce7c76b4781b76bef94af142114ba83e220e3cf8000f477aaaa71b663407e0d2fa0df1d1c6b130658180d789e2cdbcdef39b187b1b916efc4df57272a682f24a213c4f6658c1e6aa306d1826c1ad2840df4ac891d3863ddf2e08234eda89c41b0d38a272e66368dd040ed10e50ee2cdd245f0f5b467d5cc428bb73b6abd802283a37a893e38ac588dec3452eebe8aea8fef3282ddec19921290eefde9d3c5ca1f0be8bd9aa9c959bc25166fafa5fc82575f7d0fa91d845b788b7e004c92fa99d9ed333f15346baa0a8b8f360b24b6eae37aaf5e21771c5fa530ca7296eb16fbf7bdde71ed8c74a1778f0b2488c11450d6e8c535e9160ab8988906209df6b590d000fb69c7cc633b1b61f66bc079159ac92696c8a6acd3c76a82db4d8f4c76706529ea9c1c4603d270517b28642fed0010f1331416a5efe14c38fd5e046b0dac0fc47bbe894fcb79fdb2e3ba8638c342a13cb152cf7cc4440d15d197d357ee7e43e2b1ba8abf945645f293051cd7349a6a670f8ea1d401a4ec7531768dfca99fed141cff85af3c029b787f527e60a3bb6288c1585bfd5311ce49cd7018da22ae23f583d382ded77ae09b3ddce8c6c5f20e8206408bc7c4081cdede8fb126073f36a011d95136544e9a20b5e53adcca71fa99390a4cece043e803017996824efe00c18c2cf672c9384266884c63f3c89d1d500e940f308a001ce8f2f628464ade713e00b3b0f3119d979abf3985f832f8c8bacc3db7d0b834bf84afe69c8050016d58e32189bb237fb27dbc065ebd215b13e8961830</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-up">      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-up">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> academic material </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2021-2022 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ACS342 Feedback systems Design</title>
      <link href="/2021-2022/ACS342-Feedback-systems-Design-358d4eda2d35/"/>
      <url>/2021-2022/ACS342-Feedback-systems-Design-358d4eda2d35/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="3d3fafc64ac69ed37f50b2b0fd66438ac25b274299febb292104fce092dba036">c9970121048dab1892173b62e4bce289cadc2ffd08d2ceec6c034b645a8e2337</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-up">      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-up">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> academic material </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2021-2022 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32 IIC通信</title>
      <link href="/STM32/STM32-IIC%E9%80%9A%E4%BF%A1-5d220a67daac/"/>
      <url>/STM32/STM32-IIC%E9%80%9A%E4%BF%A1-5d220a67daac/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>IIC协议是一种通用connection method，通过SCL和SDA双线通讯，可以通过设置地址来实现多主机/从机共用双线通讯，节省端口。但效率不高，遇上大数据量通讯弊端明显。</p><span id="more"></span><h2 id="IIC协议"><a href="#IIC协议" class="headerlink" title="IIC协议"></a>IIC协议</h2><p>IIC时序有如下规律：</p><p>SCL | SDA | Result<br>  H  |    ↓    | Start Signal<br>  H  |    ↑    | Stop Signal<br>  H  |   →   | Read Signal<br>  L   |    X   | Change Signal</p><p><img src="/STM32/STM32-IIC%E9%80%9A%E4%BF%A1-5d220a67daac/20190409113350288.png" alt="20190409113350288.png"></p><p>寻址方面，一般寻址会发送8位数据，前7位为地址，第8位为读/写（1/0）标记。<br>例如主机从从机读数据，可以是1010 0001。</p><p>每次发送一个字节数据后，主机会拉高SDA并等待从机应答。如检测到下拉信号后继续传输。一般一次传输完成后需delay至少5ms再继续传输。</p><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><p>cubemx connectivity中可选择I2C1或是2。选择standard mode就行，这样内部时钟就是100khz。</p><p>注意：如使用mini板会发现它将EEPROM，24C02芯片连接在PC11和PC12上，而非定义的IIC接口，需要外部自行连接。</p><p>另：在查资料时发现有说法将以下自动生成的代码放置在GPIO enable之前：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">__HAL_RCC_I2C2_CLK_ENABLE();</span><br></pre></td></tr></table></figure><p>但尝试后发现并无区别，先在此记录。</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="polling"><a href="#polling" class="headerlink" title="polling"></a>polling</h3><p>单纯的读写可使用如下函数：</p><p>HAL_StatusTypeDef HAL_I2C_Master_Transmit(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)<br>HAL_StatusTypeDef HAL_I2C_Master_Receive(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)<br>example：HAL_I2C_Master_Transmit(&amp;hi2c2, 0xA0, Buffer, 8, 1000);</p><p>或：<br>HAL_StatusTypeDef HAL_I2C_Mem_Write(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint8_t *pData, uint16_t Size, uint32_t Timeout)<br>HAL_StatusTypeDef HAL_I2C_Mem_Read(I2C_HandleTypeDef <em>hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint8_t <em>pData, uint16_t Size, uint32_t Timeout)<br>example：HAL_I2C_Mem_Write(&amp;hi2c2, 0xA0,8</em>i,I2C_MEMADD_SIZE_8BIT,Buffer+8</em>i,8, 1000);</p><p>基本上最好选择mem记录和读取，因为可以选择开始储存的地址，灵活。</p>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>STM32 红外接收（NEC协议）</title>
      <link href="/STM32/STM32-%E7%BA%A2%E5%A4%96%E6%8E%A5%E6%94%B6%EF%BC%88NEC%E5%8D%8F%E8%AE%AE%EF%BC%89-98b56647d2f6/"/>
      <url>/STM32/STM32-%E7%BA%A2%E5%A4%96%E6%8E%A5%E6%94%B6%EF%BC%88NEC%E5%8D%8F%E8%AE%AE%EF%BC%89-98b56647d2f6/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>本文将使用<a href="https://pdf1.alldatasheet.com/datasheet-pdf/view/26526/VISHAY/TSAL6200.html">TSAL6200</a>发射头和<a href="https://pdf1.alldatasheet.com/datasheet-pdf/view/103034/VISHAY/HS0038B.html">HS0038</a>接收头传递信号。HS0038会输出解码完成的信号并以高低电频方式输出。</p><span id="more"></span><h2 id="输入捕获"><a href="#输入捕获" class="headerlink" title="输入捕获"></a>输入捕获</h2><p>通过tim IC功能实现输入中断，来测量两trigger间时间差。</p><p>由于接红外接收头连接于PA1，这里选用TIM5 channel 2实现中断。</p><p>cubeMX选中TIM5 channel 2 Input Capture direct mode, 勾选Internal Clock。</p><p>Prescaler= 72-1<br>Counter Period= 65535(0XFFFF) //越大越好，尽量减少溢出次数<br>auto-reload= enable</p><p>记得设置NVIC优先级。</p><h3 id="tim-c"><a href="#tim-c" class="headerlink" title="tim.c"></a>tim.c</h3><p>需要在init之后加入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HAL_TIM_Base_Start_IT(&amp;htim5); //开启计时中断</span><br><span class="line">HAL_TIM_IC_Start_IT(&amp;htim5,TIM_CHANNEL_2); //开启输入中断</span><br></pre></td></tr></table></figure><p>计数器溢出回调函数。计数溢出次数，并标记一些重要内容。<br>RmtSta[(0&lt;=接收标记)00(0&lt;=high trigger标记) (0000&lt;=4bits counter)]</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(htim==(&amp;htim5))</span><br><span class="line">&#123;</span><br><span class="line"> <span class="keyword">if</span>(RmtSta&amp;0x80)//1000 0000 start receiving</span><br><span class="line">&#123;</span><br><span class="line">RmtSta&amp;=~0X10; //cancle the rising mark</span><br><span class="line"><span class="keyword">if</span>((RmtSta&amp;0X0F)==0X00)RmtSta|=1&lt;&lt;<span class="string">6;//0100 0000 finishing a receive</span></span><br><span class="line"><span class="string">if((RmtSta&amp;0X0F)&lt;14)RmtSta++;</span></span><br><span class="line"><span class="string">else //(RmtSta&amp;0X0F)=15</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">RmtSta&amp;=~(1&lt;&lt;7);</span></span><br><span class="line"><span class="string">RmtSta&amp;=0XF0;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>输入中断回调函数。计算一个周期内的时间差，交替设置high/down trigger中断来实现高/低电频时间测量。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(htim==(&amp;htim5))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (HAL_GPIO_ReadPin(GPIOA,GPIO_PIN_1))</span><br><span class="line">&#123;</span><br><span class="line">TIM_RESET_CAPTUREPOLARITY(&amp;htim5,TIM_CHANNEL_2); //reset configuration (important)</span><br><span class="line">TIM_SET_CAPTUREPOLARITY(&amp;htim5,TIM_CHANNEL_2,TIM_ICPOLARITY_FALLING); //interrept <span class="keyword">in</span> falling edge</span><br><span class="line">__HAL_TIM_SET_COUNTER(&amp;htim5,0);  //reset timer</span><br><span class="line">  RmtSta|=0X10; //0001 0000</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">Dval=HAL_TIM_ReadCapturedValue(&amp;htim5,TIM_CHANNEL_2); //get time difference</span><br><span class="line">TIM_RESET_CAPTUREPOLARITY(&amp;htim5,TIM_CHANNEL_2);</span><br><span class="line">TIM_SET_CAPTUREPOLARITY(&amp;htim5,TIM_CHANNEL_2,TIM_ICPOLARITY_RISING); //interrept <span class="keyword">in</span> rising edge</span><br><span class="line">  RmtSta&amp;=~(1&lt;&lt;<span class="string">4); //000(1&lt;-0) 0000</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>之后将Dval加上溢出的时间就得到完整的高/低电频时间了。</p><h2 id="NEC协议"><a href="#NEC协议" class="headerlink" title="NEC协议"></a>NEC协议</h2><p>NEC协议遵从以下规则：</p><p><img src="/STM32/STM32-%E7%BA%A2%E5%A4%96%E6%8E%A5%E6%94%B6%EF%BC%88NEC%E5%8D%8F%E8%AE%AE%EF%BC%89-98b56647d2f6/12215924-779a256456e84999b95e2b9133125781.png" alt="12215924-779a256456e84999b95e2b9133125781.png"></p><p>每条命令会由一个起始信号，8位地址，8位反位地址，8位cmd,8位反位cmd和若干repeat信号组成。</p><p><img src="/STM32/STM32-%E7%BA%A2%E5%A4%96%E6%8E%A5%E6%94%B6%EF%BC%88NEC%E5%8D%8F%E8%AE%AE%EF%BC%89-98b56647d2f6/20190615153604389.png" alt="20190615153604389.png"></p><p>起始信号会产生9ms高信号和4.5ms低信号，</p><p>发射逻辑“1”会产生560μs高信号和1690μs低信号，</p><p>发射逻辑“0”会产生560μs高信号和560μs低信号，</p><p>repeat会产生9ms高信号和2.25ms低信号。</p><p><img src="/STM32/STM32-%E7%BA%A2%E5%A4%96%E6%8E%A5%E6%94%B6%EF%BC%88NEC%E5%8D%8F%E8%AE%AE%EF%BC%89-98b56647d2f6/20190615155851364.png" alt="20190615155851364.png"></p><p>但是接收头却会反调接收的高信号和低信号，如接收逻辑“1”会产生560μs低信号和1690μs高信号。</p><p>由于接收的高信号足以区分不同codes，因此可以只检测高信号长度来解码。</p><h3 id="按钮信号"><a href="#按钮信号" class="headerlink" title="按钮信号"></a>按钮信号</h3><p>通过测试正点原子配套的遥控器，得如下结果：</p><p>按7X3位置排序cmd码<br> 162 | 098 | 226<br> 034 | 002 | 194<br> 224 | 168 | 144<br> 104 | 152 | 176<br> 048 | 024 | 122<br> 016 | 056 | 090<br> 066 | ( n ) | 082</p><h3 id="tim-c-1"><a href="#tim-c-1" class="headerlink" title="tim.c"></a>tim.c</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &quot;tim.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#include &quot;stdio.h&quot;</span></span><br><span class="line"><span class="comment"># include &quot;LED\BSP_LED.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;OLED\oled.h&quot;</span></span><br><span class="line"></span><br><span class="line">TIM_HandleTypeDef htim2;</span><br><span class="line">TIM_HandleTypeDef htim5;</span><br><span class="line"></span><br><span class="line">/* TIM2 init <span class="keyword">function</span> */</span><br><span class="line">void MX_TIM2_Init(void)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  TIM_ClockConfigTypeDef sClockSourceConfig = &#123;0&#125;;</span><br><span class="line">  TIM_MasterConfigTypeDef sMasterConfig = &#123;0&#125;;</span><br><span class="line"></span><br><span class="line">  htim2.Instance = TIM2;</span><br><span class="line">  htim2.Init.Prescaler = 7200-1;</span><br><span class="line">  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;</span><br><span class="line">  htim2.Init.Period = 5000-1;</span><br><span class="line">  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;</span><br><span class="line">  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIM_Base_Init(&amp;htim2) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIM_ConfigClockSource(&amp;htim2, &amp;sClockSourceConfig) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;</span><br><span class="line">  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIMEx_MasterConfigSynchronization(&amp;htim2, &amp;sMasterConfig) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">HAL_TIM_Base_Start_IT(&amp;htim2);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">/* TIM5 init <span class="keyword">function</span> */</span><br><span class="line">void MX_TIM5_Init(void)</span><br><span class="line">&#123;</span><br><span class="line">  TIM_ClockConfigTypeDef sClockSourceConfig = &#123;0&#125;;</span><br><span class="line">  TIM_MasterConfigTypeDef sMasterConfig = &#123;0&#125;;</span><br><span class="line">  TIM_IC_InitTypeDef sConfigIC = &#123;0&#125;;</span><br><span class="line"></span><br><span class="line">  htim5.Instance = TIM5;</span><br><span class="line">  htim5.Init.Prescaler = 72-1;</span><br><span class="line">  htim5.Init.CounterMode = TIM_COUNTERMODE_UP;</span><br><span class="line">  htim5.Init.Period = 65535;</span><br><span class="line">  htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;</span><br><span class="line">  htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIM_Base_Init(&amp;htim5) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIM_ConfigClockSource(&amp;htim5, &amp;sClockSourceConfig) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIM_IC_Init(&amp;htim5) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;</span><br><span class="line">  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIMEx_MasterConfigSynchronization(&amp;htim5, &amp;sMasterConfig) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_RISING;</span><br><span class="line">  sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;</span><br><span class="line">  sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;</span><br><span class="line">  sConfigIC.ICFilter = 0;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIM_IC_ConfigChannel(&amp;htim5, &amp;sConfigIC, TIM_CHANNEL_2) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">HAL_TIM_Base_Start_IT(&amp;htim5);</span><br><span class="line">HAL_TIM_IC_Start_IT(&amp;htim5,TIM_CHANNEL_2);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  GPIO_InitTypeDef GPIO_InitStruct = &#123;0&#125;;</span><br><span class="line">  <span class="keyword">if</span>(tim_baseHandle-&gt;Instance==TIM2)</span><br><span class="line">  &#123;</span><br><span class="line">    /* TIM2 clock <span class="built_in">enable</span> */</span><br><span class="line">    __HAL_RCC_TIM2_CLK_ENABLE();</span><br><span class="line"></span><br><span class="line">    /* TIM2 interrupt Init */</span><br><span class="line">    HAL_NVIC_SetPriority(TIM2_IRQn, 10, 0);</span><br><span class="line">    HAL_NVIC_EnableIRQ(TIM2_IRQn);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(tim_baseHandle-&gt;Instance==TIM5)</span><br><span class="line">  &#123;</span><br><span class="line">    /* TIM5 clock <span class="built_in">enable</span> */</span><br><span class="line">    __HAL_RCC_TIM5_CLK_ENABLE();</span><br><span class="line"></span><br><span class="line">    __HAL_RCC_GPIOA_CLK_ENABLE();</span><br><span class="line">    /**TIM5 GPIO Configuration</span><br><span class="line">    PA1     ------&gt; TIM5_CH2</span><br><span class="line">    */</span><br><span class="line">    GPIO_InitStruct.Pin = GPIO_PIN_1;</span><br><span class="line">    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;</span><br><span class="line">    GPIO_InitStruct.Pull = GPIO_NOPULL;</span><br><span class="line">    HAL_GPIO_Init(GPIOA, &amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line">    /* TIM5 interrupt Init */</span><br><span class="line">    HAL_NVIC_SetPriority(TIM5_IRQn, 2, 0);</span><br><span class="line">    HAL_NVIC_EnableIRQ(TIM5_IRQn);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(tim_baseHandle-&gt;Instance==TIM2)</span><br><span class="line">  &#123;</span><br><span class="line">    /* Peripheral clock <span class="built_in">disable</span> */</span><br><span class="line">    __HAL_RCC_TIM2_CLK_DISABLE();</span><br><span class="line"></span><br><span class="line">    /* TIM2 interrupt Deinit */</span><br><span class="line">    HAL_NVIC_DisableIRQ(TIM2_IRQn);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(tim_baseHandle-&gt;Instance==TIM5)</span><br><span class="line">  &#123;</span><br><span class="line">    /* Peripheral clock <span class="built_in">disable</span> */</span><br><span class="line">    __HAL_RCC_TIM5_CLK_DISABLE();</span><br><span class="line"></span><br><span class="line">    /**TIM5 GPIO Configuration</span><br><span class="line">    PA1     ------&gt; TIM5_CH2</span><br><span class="line">    */</span><br><span class="line">    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);</span><br><span class="line"></span><br><span class="line">    /* TIM5 interrupt Deinit */</span><br><span class="line">    HAL_NVIC_DisableIRQ(TIM5_IRQn);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">static uint8_t RmtSta=0,RmtCnt=0;  </span><br><span class="line">uint8_t count=0;</span><br><span class="line">uint16_t Dval;</span><br><span class="line">static uint32_t RmtRec;</span><br><span class="line"></span><br><span class="line">void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(htim==(&amp;htim2))</span><br><span class="line">    &#123;</span><br><span class="line">    LED_switch(LED0);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">if</span>(htim==(&amp;htim5))</span><br><span class="line">&#123;</span><br><span class="line"> <span class="keyword">if</span>(RmtSta&amp;0x80)//1000 0000 start receiving</span><br><span class="line">&#123;</span><br><span class="line">RmtSta&amp;=~0X10; //cancle the rising mark</span><br><span class="line"><span class="keyword">if</span>((RmtSta&amp;0X0F)==0X00)RmtSta|=1&lt;&lt;<span class="string">6;//0100 0000 finishing a receive</span></span><br><span class="line"><span class="string">if((RmtSta&amp;0X0F)&lt;14)RmtSta++;</span></span><br><span class="line"><span class="string">else //(RmtSta&amp;0X0F)=15</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">RmtSta&amp;=~(1&lt;&lt;7);</span></span><br><span class="line"><span class="string">RmtSta&amp;=0XF0;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">if(htim==(&amp;htim5))</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">if (HAL_GPIO_ReadPin(GPIOA,GPIO_PIN_1))</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">TIM_RESET_CAPTUREPOLARITY(&amp;htim5,TIM_CHANNEL_2);</span></span><br><span class="line"><span class="string">TIM_SET_CAPTUREPOLARITY(&amp;htim5,TIM_CHANNEL_2,TIM_ICPOLARITY_FALLING);</span></span><br><span class="line"><span class="string">__HAL_TIM_SET_COUNTER(&amp;htim5,0);  </span></span><br><span class="line"><span class="string">  RmtSta|=0X10; //0001 0000</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">Dval=HAL_TIM_ReadCapturedValue(&amp;htim5,TIM_CHANNEL_2);</span></span><br><span class="line"><span class="string">TIM_RESET_CAPTUREPOLARITY(&amp;htim5,TIM_CHANNEL_2);</span></span><br><span class="line"><span class="string">TIM_SET_CAPTUREPOLARITY(&amp;htim5,TIM_CHANNEL_2,TIM_ICPOLARITY_RISING);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if (RmtSta&amp;0X80)//1000 0000</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">if(Dval&gt;300&amp;&amp;Dval&lt;800) //560us logic 0</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">RmtRec&lt;&lt;=1;</span></span><br><span class="line"><span class="string">RmtRec|=0;  </span></span><br><span class="line"><span class="string">count++;</span></span><br><span class="line"><span class="string">&#125;else if(Dval&gt;1400&amp;&amp;Dval&lt;1800) //1680us logic 1</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">RmtRec&lt;&lt;=1;</span></span><br><span class="line"><span class="string">RmtRec|=1;</span></span><br><span class="line"><span class="string">count++;</span></span><br><span class="line"><span class="string">&#125;else if(Dval&gt;2200&amp;&amp;Dval&lt;2600) //2.25us</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">RmtCnt++;</span></span><br><span class="line"><span class="string">RmtSta&amp;=0XF0;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if (count==32)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">printf(&quot; [%d %d %d %d]\r\n&quot;,(RmtRec&amp;0XFF000000)&gt;&gt;24,(RmtRec&amp;0X00FF0000)&gt;&gt;16,(RmtRec&amp;0X0000FF00)&gt;&gt;8,RmtRec&amp;0X000000FF);</span></span><br><span class="line"><span class="string">count=0;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">else if(Dval&gt;4200&amp;&amp;Dval&lt;4700)//4.5ms</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">RmtSta|=1&lt;&lt;7;//1000 0000</span></span><br><span class="line"><span class="string">RmtCnt=0;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  RmtSta&amp;=~(1&lt;&lt;4); //000(1&lt;-0) 0000</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">uint8_t get_radio(void)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">uint8_t check=0,add=0;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if (RmtSta&amp;0x40)//0100 0000</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">printf(&quot;start getting\r\n&quot;);</span></span><br><span class="line"><span class="string">if (((RmtRec&amp;0XFF000000)&gt;&gt;24==(~RmtRec&amp;0X00FF0000)&gt;&gt;16)&amp;&amp;((RmtRec&amp;0X0000FF00)&gt;&gt;8==(~RmtRec&amp;0X000000FF))) check=1;</span></span><br><span class="line"><span class="string">if (check) &#123;add=((RmtRec&amp;0X0000FF00)&gt;&gt;8); printf(&quot;add=%d\r\n&quot;,add);&#125;</span></span><br><span class="line"><span class="string">if (check==0||(RmtSta&amp;0x80)==0)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">RmtCnt=0;</span></span><br><span class="line"><span class="string">RmtSta&amp;=~(0x40);//0(1&lt;=0)00 0000</span></span><br><span class="line"><span class="string">printf(&quot;stop checking&quot;);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">return add;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><h3 id="tim-h"><a href="#tim-h" class="headerlink" title="tim.h"></a>tim.h</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#ifndef __TIM_H__</span></span><br><span class="line"><span class="comment">#define __TIM_H__</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#ifdef __cplusplus</span></span><br><span class="line">extern <span class="string">&quot;C&quot;</span> &#123;</span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"></span><br><span class="line">/* Includes ------------------------------------------------------------------*/</span><br><span class="line"><span class="comment">#include &quot;main.h&quot;</span></span><br><span class="line"></span><br><span class="line">extern TIM_HandleTypeDef htim2;</span><br><span class="line">extern TIM_HandleTypeDef htim5;</span><br><span class="line"></span><br><span class="line">void MX_TIM2_Init(void);</span><br><span class="line">void MX_TIM5_Init(void);</span><br><span class="line"></span><br><span class="line">uint8_t get_radio(void);</span><br><span class="line"></span><br><span class="line"><span class="comment">#ifdef __cplusplus</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#endif /* __TIM_H__ */</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>LED0做指示灯会循环开关。oled会显示按下的按钮cmd编号。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &quot;main.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;tim.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;usart.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;gpio.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#include &quot;LED\BSP_LED.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;OLED\oled.h&quot;</span></span><br><span class="line"></span><br><span class="line">/* USER CODE BEGIN PV */</span><br><span class="line">uint8_t startMessage[]=<span class="string">&quot;start communication \r\n&quot;</span>;</span><br><span class="line">uint8_t aRxBuffer[10];</span><br><span class="line"></span><br><span class="line">void SystemClock_Config(void);</span><br><span class="line"></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */</span><br><span class="line">  HAL_Init();</span><br><span class="line"></span><br><span class="line">  /* Configure the system clock */</span><br><span class="line">  SystemClock_Config();</span><br><span class="line"></span><br><span class="line">LED_Init();</span><br><span class="line">OLED_Init();</span><br><span class="line"></span><br><span class="line">  /* Initialize all configured peripherals */</span><br><span class="line">  MX_GPIO_Init();</span><br><span class="line">  MX_TIM2_Init();</span><br><span class="line">  MX_USART1_UART_Init();</span><br><span class="line">  MX_TIM5_Init();</span><br><span class="line">OLED_ShowString(0,0,<span class="string">&quot;Ray test&quot;</span>,24);</span><br><span class="line">OLED_ShowString(0,32,<span class="string">&quot;address=000&quot;</span>,16);</span><br><span class="line"></span><br><span class="line">OLED_Refresh_Gram();</span><br><span class="line"></span><br><span class="line">  /* Infinite loop */</span><br><span class="line">uint8_t radio_num=0;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (1)</span><br><span class="line">  &#123;</span><br><span class="line">radio_num=get_radio();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (radio_num)</span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowNum(64,32,radio_num,3,16);</span><br><span class="line">OLED_Refresh_Gram();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">HAL_Delay(10);</span><br><span class="line">radio_num=0;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32 ADC</title>
      <link href="/STM32/STM32-ADC-d6b5bfdc3c21/"/>
      <url>/STM32/STM32-ADC-d6b5bfdc3c21/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>将模电数据转换为数字信号后传输，一般返回12位数据，可用unit16_t接收数据。返回值最大4096，可通过（Voltage=value*3.3/4096）得到最大3.3v的结果。尽量不要测量大于3.3v的电压以防止烧坏ADC。</p><span id="more"></span><h2 id="ADC"><a href="#ADC" class="headerlink" title="ADC"></a>ADC</h2><p>选择ADC1，IN1，选中PA1端口。</p><p>Mode：indepandent mode 每个端口只会有一个测量通道</p><p>Data Alignment: 向左对其或向右对其，只要对应即可</p><p>注意：如果用中断实现的话adc初始化必须在tim初始化之前，不然会在中断里卡死。</p><h3 id="adc-c"><a href="#adc-c" class="headerlink" title="adc.c"></a>adc.c</h3><p>不需要改任何东西，生成就能用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &quot;adc.h&quot;</span></span><br><span class="line"></span><br><span class="line">ADC_HandleTypeDef hadc1;</span><br><span class="line"></span><br><span class="line">void MX_ADC1_Init(void)</span><br><span class="line">&#123;</span><br><span class="line">  ADC_ChannelConfTypeDef sConfig = &#123;0&#125;;</span><br><span class="line">  hadc1.Instance = ADC1;</span><br><span class="line">  hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;</span><br><span class="line">  hadc1.Init.ContinuousConvMode = DISABLE;</span><br><span class="line">  hadc1.Init.DiscontinuousConvMode = DISABLE;</span><br><span class="line">  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;</span><br><span class="line">  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;</span><br><span class="line">  hadc1.Init.NbrOfConversion = 1;</span><br><span class="line">  <span class="keyword">if</span> (HAL_ADC_Init(&amp;hadc1) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  sConfig.Channel = ADC_CHANNEL_1;</span><br><span class="line">  sConfig.Rank = ADC_REGULAR_RANK_1;</span><br><span class="line">  sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;</span><br><span class="line">  <span class="keyword">if</span> (HAL_ADC_ConfigChannel(&amp;hadc1, &amp;sConfig) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  GPIO_InitTypeDef GPIO_InitStruct = &#123;0&#125;;</span><br><span class="line">  <span class="keyword">if</span>(adcHandle-&gt;Instance==ADC1)</span><br><span class="line">  &#123;</span><br><span class="line">    __HAL_RCC_ADC1_CLK_ENABLE();</span><br><span class="line"></span><br><span class="line">    __HAL_RCC_GPIOA_CLK_ENABLE();</span><br><span class="line"></span><br><span class="line">    GPIO_InitStruct.Pin = GPIO_PIN_1;</span><br><span class="line">    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;</span><br><span class="line">    HAL_GPIO_Init(GPIOA, &amp;GPIO_InitStruct);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(adcHandle-&gt;Instance==ADC1)</span><br><span class="line">  &#123;</span><br><span class="line">    __HAL_RCC_ADC1_CLK_DISABLE();</span><br><span class="line"></span><br><span class="line">    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="adc-h"><a href="#adc-h" class="headerlink" title="adc.h"></a>adc.h</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#ifndef __ADC_H__</span></span><br><span class="line"><span class="comment">#define __ADC_H__</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#ifdef __cplusplus</span></span><br><span class="line">extern <span class="string">&quot;C&quot;</span> &#123;</span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"></span><br><span class="line">/* Includes ------------------------------------------------------------------*/</span><br><span class="line"><span class="comment">#include &quot;main.h&quot;</span></span><br><span class="line"></span><br><span class="line">extern ADC_HandleTypeDef hadc1;</span><br><span class="line"></span><br><span class="line">void MX_ADC1_Init(void);</span><br><span class="line"></span><br><span class="line"><span class="comment">#ifdef __cplusplus</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#endif /* __ADC_H__ */</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>加入oled.h来实时显示数值。会实时显示PA1处电压。</p><p>HAL_ADC_Start(&amp;hadc1)； 打开adc</p><p>HAL_ADC_PollForConversion(&amp;hadc1, 0xFF); 等待读取完成</p><p>adc_value=HAL_ADC_GetValue(&amp;hadc1); 读数据</p><p>HAL_ADC_Stop(&amp;hadc1); 关闭</p><p>需注意有时候显示上一个时段数据却误以为是最新数据，需仔细分析时序逻辑。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &quot;main.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;adc.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;gpio.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#include &quot;LED\BSP_LED.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;OLED\oled.h&quot;</span></span><br><span class="line"></span><br><span class="line">uint8_t startMessage[]=<span class="string">&quot;start communication \r\n&quot;</span>;</span><br><span class="line">uint8_t aRxBuffer[10];</span><br><span class="line"></span><br><span class="line">void SystemClock_Config(void);</span><br><span class="line"></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">uint16_t adc_value=0;</span><br><span class="line"><span class="built_in">float</span> adc_cal=0.0;</span><br><span class="line"></span><br><span class="line">   HAL_Init();</span><br><span class="line"></span><br><span class="line">  SystemClock_Config();</span><br><span class="line"></span><br><span class="line">LED_Init();</span><br><span class="line">OLED_Init();</span><br><span class="line"></span><br><span class="line">  MX_GPIO_Init();</span><br><span class="line">  MX_ADC1_Init();</span><br><span class="line"></span><br><span class="line">OLED_ShowString(0,0,<span class="string">&quot;ADC test&quot;</span>,24);</span><br><span class="line">OLED_ShowString(0,32,<span class="string">&quot;adc=0000&quot;</span>,16);</span><br><span class="line">OLED_ShowString(0,48,<span class="string">&quot;adc/3.3V=0.000&quot;</span>,16);</span><br><span class="line">OLED_Refresh_Gram();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (1)</span><br><span class="line">  &#123;</span><br><span class="line">LED_switch(LED0);</span><br><span class="line">HAL_Delay(500);</span><br><span class="line"></span><br><span class="line">HAL_ADC_Start(&amp;hadc1);</span><br><span class="line">HAL_ADC_PollForConversion(&amp;hadc1, 0xFF);</span><br><span class="line">adc_value=HAL_ADC_GetValue(&amp;hadc1);</span><br><span class="line">adc_cal=(<span class="built_in">float</span>)adc_value*3.3/4096;</span><br><span class="line">OLED_ShowNum(32,32,adc_value,4,16);</span><br><span class="line">OLED_ShowNum(72,48,(uint16_t)adc_cal,1,16);</span><br><span class="line">OLED_ShowNum(88,48,(uint16_t)((adc_cal-(uint16_t)adc_cal)*1000),3,16);</span><br><span class="line">HAL_ADC_Stop(&amp;hadc1);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">OLED_Refresh_Gram();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="内置温度测量器"><a href="#内置温度测量器" class="headerlink" title="内置温度测量器"></a>内置温度测量器</h2><p>STM32F10系列有内部温度计可以通过内部通道测量。在adc中选择Temperature（或者应该是IN16）开启。</p><p>公式：T=(V25-Vout)/Avg_Slop(V)+25</p><p>数据可在datasheet 113页看到。通常V25=1.43V，Avg_Slop=0.0043V/°C</p><p>刚开板子会出现小于10°的情况，放太阳下照照就上来了。</p>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>STM32 OLED(SSD1306)</title>
      <link href="/STM32/STM32-OLED-SSD1306-557a3f21835a/"/>
      <url>/STM32/STM32-OLED-SSD1306-557a3f21835a/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>此运用的硬件是ATK 096 OLED，基于SSD1306的OLED。这里的driver全复制于原子科技的例码。</p><p>注意：每次设置完内容后必须加上（OLED_Refresh_Gram();）刷新。</p><span id="more"></span><h3 id="oled-c"><a href="#oled-c" class="headerlink" title="oled.c"></a>oled.c</h3><p>CS：拉低时开始片选oled<br>WR：写入数据<br>RD：读取数据<br>D[7:0]：数据位<br>RST：复位<br>DC：0为命令位，1为数据位</p><p>以写入命令为例：DC（RS）位拉低，CS拉低，WR拉低开始读取D[7:0]数据，然后再全部拉高完成。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &quot;oled.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;stdlib.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;delay.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;oledfont.h&quot;</span></span><br><span class="line"> </span><br><span class="line">//刷新屏幕</span><br><span class="line">void OLED_Refresh_Gram(void)</span><br><span class="line">&#123;</span><br><span class="line">u8 i,n;    </span><br><span class="line"><span class="keyword">for</span>(i=0;i&lt;8;i++)  </span><br><span class="line">&#123;  </span><br><span class="line">OLED_WR_Byte (0xb0+i,OLED_CMD); //页数设置</span><br><span class="line">OLED_WR_Byte (0x00,OLED_CMD);//低八位</span><br><span class="line">OLED_WR_Byte (0x10,OLED_CMD);//高八位</span><br><span class="line"><span class="keyword">for</span>(n=0;n&lt;128;n++)OLED_WR_Byte(OLED_GRAM[n][i],OLED_DATA); </span><br><span class="line">&#125;   </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#if OLED_MODE==1 //8080模式</span></span><br><span class="line"> </span><br><span class="line">//cmd=1: data mode, 0: <span class="built_in">command</span> mode</span><br><span class="line">//dat: required data</span><br><span class="line">void OLED_WR_Byte(u8 dat,u8 cmd)</span><br><span class="line">&#123;</span><br><span class="line">DATAOUT(dat);</span><br><span class="line"> OLED_RS=cmd;</span><br><span class="line">OLED_CS=0;</span><br><span class="line">OLED_WR=0;  </span><br><span class="line">OLED_WR=1;   </span><br><span class="line">OLED_CS=1;   </span><br><span class="line">OLED_RS=1;   </span><br><span class="line">&#125;         </span><br><span class="line"><span class="comment">#else //ISP mode</span></span><br><span class="line">void OLED_WR_Byte(u8 dat,u8 cmd)</span><br><span class="line">&#123;</span><br><span class="line">u8 i;  </span><br><span class="line">OLED_RS=cmd;</span><br><span class="line">OLED_CS=0;  </span><br><span class="line"><span class="keyword">for</span>(i=0;i&lt;8;i++)</span><br><span class="line">&#123;  </span><br><span class="line">OLED_SCLK=0;</span><br><span class="line"><span class="keyword">if</span>(dat&amp;0x80)OLED_SDIN=1;</span><br><span class="line"><span class="keyword">else</span> OLED_SDIN=0;</span><br><span class="line">OLED_SCLK=1;</span><br><span class="line">dat&lt;&lt;=1;   </span><br><span class="line">&#125; </span><br><span class="line">OLED_CS=1;  </span><br><span class="line">OLED_RS=1;     </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"></span><br><span class="line">//开启显示    </span><br><span class="line">void OLED_Display_On(void)</span><br><span class="line">&#123;</span><br><span class="line">OLED_WR_Byte(0X8D,OLED_CMD); //设置电荷泵</span><br><span class="line">OLED_WR_Byte(0X14,OLED_CMD); //开启</span><br><span class="line">OLED_WR_Byte(0XAF,OLED_CMD);//开启显示</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//关闭显示</span><br><span class="line">void OLED_Display_Off(void)</span><br><span class="line">&#123;</span><br><span class="line">OLED_WR_Byte(0X8D,OLED_CMD);</span><br><span class="line">OLED_WR_Byte(0X10,OLED_CMD);</span><br><span class="line">OLED_WR_Byte(0XAE,OLED_CMD);</span><br><span class="line">&#125;    </span><br><span class="line"></span><br><span class="line">//清屏  </span><br><span class="line">void OLED_Clear(void)  </span><br><span class="line">&#123;  </span><br><span class="line">u8 i,n;  </span><br><span class="line"><span class="keyword">for</span>(i=0;i&lt;8;i++)<span class="keyword">for</span>(n=0;n&lt;128;n++)OLED_GRAM[n][i]=0X00;  </span><br><span class="line">OLED_Refresh_Gram();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//画点   </span><br><span class="line">//t=1: fill, t=0: unfill</span><br><span class="line">void OLED_DrawPoint(u8 x,u8 y,u8 t)</span><br><span class="line">&#123;</span><br><span class="line">u8 pos,bx,temp=0;</span><br><span class="line"><span class="keyword">if</span>(x&gt;127||y&gt;63)<span class="built_in">return</span>;</span><br><span class="line">pos=7-y/8;</span><br><span class="line">bx=y%8;</span><br><span class="line">temp=1&lt;&lt;(7-bx);</span><br><span class="line"><span class="keyword">if</span>(t)OLED_GRAM[x][pos]|=temp;</span><br><span class="line"><span class="keyword">else</span> OLED_GRAM[x][pos]&amp;=~temp;    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//填块</span><br><span class="line">//t=1: fill, t=0: unfill</span><br><span class="line">void OLED_Fill(u8 x1,u8 y1,u8 x2,u8 y2,u8 dot)  </span><br><span class="line">&#123;  </span><br><span class="line">u8 x,y;  </span><br><span class="line"><span class="keyword">for</span>(x=x1;x&lt;=x2;x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(y=y1;y&lt;=y2;y++)OLED_DrawPoint(x,y,dot);</span><br><span class="line">&#125;    </span><br><span class="line">OLED_Refresh_Gram();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//显示字符</span><br><span class="line">//size=12 or 16 or 24</span><br><span class="line">//mode=1: 正常显示，mode=0: 反向显示</span><br><span class="line">void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 size,u8 mode)</span><br><span class="line">&#123;          </span><br><span class="line">u8 temp,t,t1;</span><br><span class="line">u8 y0=y;</span><br><span class="line">u8 csize=(size/8+((size%8)?1:0))*(size/2);</span><br><span class="line">chr=chr-<span class="string">&#x27; &#x27;</span>; </span><br><span class="line">    <span class="keyword">for</span>(t=0;t&lt;csize;t++)</span><br><span class="line">    &#123;   </span><br><span class="line"><span class="keyword">if</span>(size==12)temp=asc2_1206[chr][t];</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(size==16)temp=asc2_1608[chr][t];</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(size==24)temp=asc2_2412[chr][t];</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">return</span>;</span><br><span class="line">        <span class="keyword">for</span>(t1=0;t1&lt;8;t1++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(temp&amp;0x80)OLED_DrawPoint(x,y,mode);</span><br><span class="line"><span class="keyword">else</span> OLED_DrawPoint(x,y,!mode);</span><br><span class="line">temp&lt;&lt;=1;</span><br><span class="line">y++;</span><br><span class="line"><span class="keyword">if</span>((y-y0)==size)</span><br><span class="line">&#123;</span><br><span class="line">y=y0;</span><br><span class="line">x++;</span><br><span class="line"><span class="built_in">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;   </span><br><span class="line">    &#125;          </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">u32 mypow(u8 m,u8 n)</span><br><span class="line">&#123;</span><br><span class="line">u32 result=1; </span><br><span class="line"><span class="keyword">while</span>(n--)result*=m;    </span><br><span class="line"><span class="built_in">return</span> result;</span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line">//显示数字</span><br><span class="line">//num: 数字（0-429467295）</span><br><span class="line">//len：位数</span><br><span class="line">void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 size)</span><br><span class="line">&#123;         </span><br><span class="line">u8 t,temp;</span><br><span class="line">u8 enshow=0;   </span><br><span class="line"><span class="keyword">for</span>(t=0;t&lt;len;t++)</span><br><span class="line">&#123;</span><br><span class="line">temp=(num/mypow(10,len-t-1))%10;</span><br><span class="line"><span class="keyword">if</span>(enshow==0&amp;&amp;t&lt;(len-1))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(temp==0)</span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowChar(x+(size/2)*t,y,<span class="string">&#x27; &#x27;</span>,size,1);</span><br><span class="line"><span class="built_in">continue</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> enshow=1; </span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"> OLED_ShowChar(x+(size/2)*t,y,temp+<span class="string">&#x27;0&#x27;</span>,size,1); </span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">//打印字符串</span><br><span class="line">void OLED_ShowString(u8 x,u8 y,const u8 *p,u8 size)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span>((*p&lt;=<span class="string">&#x27;~&#x27;</span>)&amp;&amp;(*p&gt;=<span class="string">&#x27; &#x27;</span>))</span><br><span class="line">    &#123;       </span><br><span class="line">        <span class="keyword">if</span>(x&gt;(128-(size/2)))&#123;x=0;y+=size;&#125;</span><br><span class="line">        <span class="keyword">if</span>(y&gt;(64-size))&#123;y=x=0;OLED_Clear();&#125;</span><br><span class="line">        OLED_ShowChar(x,y,*p,size,1); </span><br><span class="line">        x+=size/2;</span><br><span class="line">        p++;</span><br><span class="line">    &#125;  </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">void OLED_Init(void)</span><br><span class="line">&#123;   </span><br><span class="line">    GPIO_InitTypeDef  GPIO_Initure;</span><br><span class="line"></span><br><span class="line">    __HAL_RCC_GPIOB_CLK_ENABLE();   </span><br><span class="line">    __HAL_RCC_GPIOC_CLK_ENABLE();  </span><br><span class="line"></span><br><span class="line"><span class="comment">#if OLED_MODE==1/8080 mode</span></span><br><span class="line"></span><br><span class="line">//PC6,7,8,9  </span><br><span class="line">    GPIO_Initure.Pin=GPIO_PIN_6|GPIO_PIN_7|\</span><br><span class="line"> GPIO_PIN_8|GPIO_PIN_9; </span><br><span class="line">    GPIO_Initure.Mode=GPIO_MODE_OUTPUT_PP;</span><br><span class="line">    GPIO_Initure.Pull=GPIO_PULLUP;  </span><br><span class="line">    GPIO_Initure.Speed=GPIO_SPEED_FREQ_HIGH;</span><br><span class="line">    HAL_GPIO_Init(GPIOC,&amp;GPIO_Initure);   </span><br><span class="line">//PB0-7</span><br><span class="line">    GPIO_Initure.Pin=GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3|\</span><br><span class="line"> GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;        </span><br><span class="line">    HAL_GPIO_Init(GPIOB,&amp;GPIO_Initure);   </span><br><span class="line"></span><br><span class="line">__HAL_AFIO_REMAP_SWJ_DISABLE();</span><br><span class="line"></span><br><span class="line">OLED_WR=1;</span><br><span class="line">  OLED_RD=1; </span><br><span class="line"><span class="comment">#else</span></span><br><span class="line"> </span><br><span class="line">    GPIO_Initure.Pin=GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_7;</span><br><span class="line">    GPIO_Initure.Mode=GPIO_MODE_OUTPUT_PP;</span><br><span class="line">    GPIO_Initure.Pull=GPIO_PULLUP; </span><br><span class="line">    GPIO_Initure.Speed=GPIO_SPEED_FREQ_HIGH;</span><br><span class="line">    HAL_GPIO_Init(GPIOB,&amp;GPIO_Initure); </span><br><span class="line"></span><br><span class="line">    GPIO_Initure.Pin=GPIO_PIN_8|GPIO_PIN_9;</span><br><span class="line">HAL_GPIO_Init(GPIOC,&amp;GPIO_Initure);</span><br><span class="line"></span><br><span class="line">OLED_SDIN=1;</span><br><span class="line">OLED_SCLK=1;</span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line">OLED_CS=1;</span><br><span class="line">OLED_RS=1; </span><br><span class="line">  </span><br><span class="line">OLED_WR_Byte(0xAE,OLED_CMD);</span><br><span class="line">OLED_WR_Byte(0xD5,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(80,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0xA8,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0X3F,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0xD3,OLED_CMD);</span><br><span class="line">OLED_WR_Byte(0X00,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0x40,OLED_CMD);     </span><br><span class="line">OLED_WR_Byte(0x8D,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0x14,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0x20,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0x02,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0xA1,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0xC0,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0xDA,OLED_CMD);</span><br><span class="line">OLED_WR_Byte(0x12,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0x81,OLED_CMD); //亮度</span><br><span class="line">OLED_WR_Byte(0xEF,OLED_CMD); //1-255</span><br><span class="line">OLED_WR_Byte(0xD9,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0xf1,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0xDB,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0x30,OLED_CMD);</span><br><span class="line">OLED_WR_Byte(0xA4,OLED_CMD); </span><br><span class="line">OLED_WR_Byte(0xA6,OLED_CMD);        </span><br><span class="line">OLED_WR_Byte(0xAF,OLED_CMD); </span><br><span class="line">OLED_Clear();</span><br><span class="line">&#125;  </span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="oled-h"><a href="#oled-h" class="headerlink" title="oled.h"></a>oled.h</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#ifndef __OLED_H</span></span><br><span class="line"><span class="comment">#define __OLED_H</span></span><br><span class="line"><span class="comment">#include &quot;sys.h&quot;</span></span><br><span class="line"></span><br><span class="line">//0:四线模式</span><br><span class="line">//1:8080模式</span><br><span class="line"><span class="comment">#define OLED_MODE 1</span></span><br><span class="line">      </span><br><span class="line"><span class="comment">#define OLED_CS     PCout(9)</span></span><br><span class="line">//<span class="comment">#define OLED_RST  PGout(15)//已有reset位</span></span><br><span class="line"><span class="comment">#define OLED_RS     PCout(8)</span></span><br><span class="line"><span class="comment">#define OLED_WR     PCout(7)</span></span><br><span class="line"><span class="comment">#define OLED_RD     PCout(6)</span></span><br><span class="line"> </span><br><span class="line">//PB0~7,数据线</span><br><span class="line"><span class="comment">#define DATAOUT(x) GPIOB-&gt;ODR=(GPIOB-&gt;ODR&amp;0xff00)|(x&amp;0x00FF); </span></span><br><span class="line"></span><br><span class="line">//SPI通信</span><br><span class="line"><span class="comment">#define OLED_SCLK   PBout(0)</span></span><br><span class="line"><span class="comment">#define OLED_SDIN   PBout(1)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#define OLED_CMD  0//命令位</span></span><br><span class="line"><span class="comment">#define OLED_DATA 1//数据位</span></span><br><span class="line"></span><br><span class="line">void OLED_WR_Byte(u8 dat,u8 cmd);    </span><br><span class="line">void OLED_Display_On(void);</span><br><span class="line">void OLED_Display_Off(void);</span><br><span class="line">void OLED_Refresh_Gram(void);   </span><br><span class="line">       </span><br><span class="line">void OLED_Init(void);</span><br><span class="line">void OLED_Clear(void);</span><br><span class="line">void OLED_DrawPoint(u8 x,u8 y,u8 t);</span><br><span class="line">void OLED_Fill(u8 x1,u8 y1,u8 x2,u8 y2,u8 dot);</span><br><span class="line">void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 size,u8 mode);</span><br><span class="line">void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 size);</span><br><span class="line">void OLED_ShowString(u8 x,u8 y,const u8 *p,u8 size);</span><br><span class="line"><span class="comment">#endif</span></span><br></pre></td></tr></table></figure><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32 串口通信</title>
      <link href="/STM32/STM32-%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1-acd4b44ab8ab/"/>
      <url>/STM32/STM32-%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1-acd4b44ab8ab/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>通过USART和上位或下位机通信。通过schematic diagram可以发现USB转串口接口PA9，PA10正是由USART1控制。这里选择USART1，和上位机电脑进行通信。</p><span id="more"></span><h2 id="非中断通信"><a href="#非中断通信" class="headerlink" title="非中断通信"></a>非中断通信</h2><p>在CUBE MX里选择USART1<br>Mode: Asynchronous<br>Baud Rate: 115200 (只要与接受口一样就行)<br>Word Length: 8 Bits</p><p>生成后只要调用两函数就行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">uint8_t aRxBuffer[10];</span><br><span class="line"></span><br><span class="line">HAL_UART_Receive(&amp;huart1, (uint8_t *)aRxBuffer, 10, 0xffff);</span><br><span class="line">HAL_UART_Transmit(&amp;huart1, (uint8_t *)aRxBuffer, sizeof(aRxBuffer), 0xffff);</span><br></pre></td></tr></table></figure><p>就可以接收上位机信息并发回去。但因为会中断其他所有进程，不灵活，所有基本不用。</p><h2 id="printf-重定向"><a href="#printf-重定向" class="headerlink" title="printf 重定向"></a>printf 重定向</h2><p>可以利用usb转串口将printf里的内容重定向到串口上，显示在上位机里。</p><p>printf函数内部会调用fputc()函数，如果重定义此函数并加入HAL_UART_Transmit函数即可在串口打印。</p><p>在usart.h内添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &quot;stdio.h&quot;</span></span><br></pre></td></tr></table></figure><p>在usart.c内添加从定向函数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#ifdef __GNUC__</span></span><br><span class="line">  /* With GCC/RAISONANCE, small <span class="built_in">printf</span> (option LD Linker-&gt;Libraries-&gt;Small <span class="built_in">printf</span></span><br><span class="line">     <span class="built_in">set</span> to <span class="string">&#x27;Yes&#x27;</span>) calls __io_putchar() */</span><br><span class="line">  <span class="comment">#define PUTCHAR_PROTOTYPE int __io_putchar(int ch)</span></span><br><span class="line"><span class="comment">#else</span></span><br><span class="line">  <span class="comment">#define PUTCHAR_PROTOTYPE int fputc(int ch, FILE *f)</span></span><br><span class="line"><span class="comment">#endif /* __GNUC__ */</span></span><br><span class="line">/**</span><br><span class="line">  * @brief  Retargets the C library <span class="built_in">printf</span> <span class="keyword">function</span> to the USART.</span><br><span class="line">  * @param  None</span><br><span class="line">  * @retval None</span><br><span class="line">  */</span><br><span class="line">PUTCHAR_PROTOTYPE</span><br><span class="line">&#123;</span><br><span class="line">  /* Place your implementation of fputc here */</span><br><span class="line">  /* e.g. write a character to the EVAL_COM1 and Loop until the end of transmission */</span><br><span class="line">  HAL_UART_Transmit(&amp;huart1, (uint8_t *)&amp;ch, 1, 0xFFFF);</span><br><span class="line">  </span><br><span class="line">  <span class="built_in">return</span> ch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：如果没选择semiLib库需要在usart.c内额外添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">void _sys_exit(int x)</span><br><span class="line">&#123;</span><br><span class="line">    x = x;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">void _ttywrch(int x)</span><br><span class="line">&#123;</span><br><span class="line">    x = x;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">struct __FILE</span><br><span class="line">&#123;</span><br><span class="line">    int handle;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line">FILE __stdout;    </span><br></pre></td></tr></table></figure><p>否则程序会在printf函数处卡死。</p><p>现在在主函数输入 printf(“test\r\n”); 即可通讯。</p><h2 id="中断通信"><a href="#中断通信" class="headerlink" title="中断通信"></a>中断通信</h2><p>生成代码时在NVIC enable通道设置优先级。由于暂不清楚项目中通信的流程顾先放过，之后熟悉了再来完善。</p>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32 中断</title>
      <link href="/STM32/STM32-%E4%B8%AD%E6%96%AD-b29a1098c278/"/>
      <url>/STM32/STM32-%E4%B8%AD%E6%96%AD-b29a1098c278/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>此文会记录stm32中外部中断和定时器中断的使用方法及注意事项。中断可以一定程度上模拟计算机中的多线程进程，但需要特别注意优先级问题（特别是HAL_DELAY函数优先级冲突导致的卡死问题）。</p><span id="more"></span><h2 id="外部中断"><a href="#外部中断" class="headerlink" title="外部中断"></a>外部中断</h2><p>可通过外部按钮，IO口等外部控制中断。</p><h3 id="EXTI-c"><a href="#EXTI-c" class="headerlink" title="EXTI.c"></a>EXTI.c</h3><p>选择IO口后选择”GPIO_EXTIx”,根据端点情况GPIP mode选rising edge或falling edge。进入NVIC enable对应通道，设置优先级后生成代码。</p><p>完成后加入”void EXTIx_IRQHandler(void)”函数（注意EXTI0会在system文件中重复定义，注销掉即可），”void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)”函数，这两个函数名是确定的，不能改变。注意不要使用HAL_DELAY函数，解决方法之后有机会去研究下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &quot;EXIT\BSP_EXTI.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#include &quot;KEY\BSP_KEY.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;LED\BSP_LED.h&quot;</span></span><br><span class="line"></span><br><span class="line">/** Configure pins as</span><br><span class="line">        * Analog</span><br><span class="line">        * Input</span><br><span class="line">        * Output</span><br><span class="line">        * EVENT_OUT</span><br><span class="line">        * EXTI</span><br><span class="line">*/</span><br><span class="line">void EXTI_Init(void)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  GPIO_InitTypeDef GPIO_InitStruct = &#123;0&#125;;</span><br><span class="line"></span><br><span class="line">  /* GPIO Ports Clock Enable */</span><br><span class="line">  __HAL_RCC_GPIOD_CLK_ENABLE();</span><br><span class="line">  __HAL_RCC_GPIOA_CLK_ENABLE();</span><br><span class="line"></span><br><span class="line">  /*Configure GPIO pin : PA0 */</span><br><span class="line">  GPIO_InitStruct.Pin = GPIO_PIN_0;</span><br><span class="line">  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;</span><br><span class="line">  GPIO_InitStruct.Pull = GPIO_PULLDOWN;</span><br><span class="line">  HAL_GPIO_Init(GPIOA, &amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line">  /* EXTI interrupt init*/</span><br><span class="line">  HAL_NVIC_SetPriority(EXTI0_IRQn, 2, 0);</span><br><span class="line">  HAL_NVIC_EnableIRQ(EXTI0_IRQn);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void EXTI0_IRQHandler(void)</span><br><span class="line">&#123;</span><br><span class="line">HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)</span><br><span class="line">&#123;</span><br><span class="line">    //HAL_Delay(100); //!!! dont use it !!!</span><br><span class="line">    switch(GPIO_Pin)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> GPIO_PIN_0:</span><br><span class="line"><span class="keyword">if</span>(WK_UP==1)&#123;</span><br><span class="line">LED_switch(LED0);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="EXTI-h"><a href="#EXTI-h" class="headerlink" title="EXTI.h"></a>EXTI.h</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#ifndef __BSP_EXTI_H__</span></span><br><span class="line"><span class="comment">#define __BSP_EXTI_H__</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#ifdef __cplusplus</span></span><br><span class="line">extern <span class="string">&quot;C&quot;</span> &#123;</span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"></span><br><span class="line">/* Includes ------------------------------------------------------------------*/</span><br><span class="line"><span class="comment">#include &quot;main.h&quot;</span></span><br><span class="line"></span><br><span class="line">void EXTI_Init(void);</span><br><span class="line"></span><br><span class="line"><span class="comment">#ifdef __cplusplus</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"><span class="comment">#endif /*__BSP_EXTI_H__ */</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>按下WK_UP按钮会变换LED0状态。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &quot;main.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#include &quot;KEY\BSP_KEY.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;LED\BSP_LED.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;EXTI\BSP_EXTI.h&quot;</span></span><br><span class="line"></span><br><span class="line">void SystemClock_Config(void);</span><br><span class="line"></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">   HAL_Init();</span><br><span class="line"></span><br><span class="line">  SystemClock_Config();</span><br><span class="line"></span><br><span class="line">  EXTI_Init();</span><br><span class="line">  LED_Init();</span><br><span class="line">  KEY_Init();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (1)</span><br><span class="line">  &#123;</span><br><span class="line">HAL_Delay(500);</span><br><span class="line">LED_switch(LED1);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="定时器中断"><a href="#定时器中断" class="headerlink" title="定时器中断"></a>定时器中断</h2><p>通过内部计时定时中断。</p><p>在Cube MX选择定时器（TIM2为例）,<br>Clock Source: Internal Clock<br>Prescaler: 7200-1<br>Counter Period: 5000-1<br>auto-reload preload: Enable (important)<br>(Tout=((arr+1)<em>(psc+1))<em>Tclk)=(5000</em>7200)</em>(1/72Mhz)=0.5s,会每隔500ms中断下循环。但现实却有细微误差，和HAL_DELAY(500)同时运行会发现频率有细微差别，初步估计是内部语句运行误差。</p><p>别忘记在NVIC中enable interrupt并设定优先级。</p><h3 id="tim-c"><a href="#tim-c" class="headerlink" title="tim.c"></a>tim.c</h3><p>需自行加上（void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)）回调函数，同时在initialization函数末尾加上（HAL_TIM_Base_Start_IT(&amp;htim2);）开启计时器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &quot;tim.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#include &quot;LED\BSP_LED.h&quot;</span></span><br><span class="line"></span><br><span class="line">TIM_HandleTypeDef htim2;</span><br><span class="line"></span><br><span class="line">/* TIM2 init <span class="keyword">function</span> */</span><br><span class="line">void MX_TIM2_Init(void)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  TIM_ClockConfigTypeDef sClockSourceConfig = &#123;0&#125;;</span><br><span class="line">  TIM_MasterConfigTypeDef sMasterConfig = &#123;0&#125;;</span><br><span class="line"></span><br><span class="line">  htim2.Instance = TIM2;</span><br><span class="line">  htim2.Init.Prescaler = 7200-1;</span><br><span class="line">  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;</span><br><span class="line">  htim2.Init.Period = 5000-1;</span><br><span class="line">  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;</span><br><span class="line">  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIM_Base_Init(&amp;htim2) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIM_ConfigClockSource(&amp;htim2, &amp;sClockSourceConfig) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;</span><br><span class="line">  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIMEx_MasterConfigSynchronization(&amp;htim2, &amp;sMasterConfig) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">HAL_TIM_Base_Start_IT(&amp;htim2);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(tim_baseHandle-&gt;Instance==TIM2)</span><br><span class="line">  &#123;</span><br><span class="line">    /* TIM2 clock <span class="built_in">enable</span> */</span><br><span class="line">    __HAL_RCC_TIM2_CLK_ENABLE();</span><br><span class="line"></span><br><span class="line">    /* TIM2 interrupt Init */</span><br><span class="line">    HAL_NVIC_SetPriority(TIM2_IRQn, 2, 0);</span><br><span class="line">    HAL_NVIC_EnableIRQ(TIM2_IRQn);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(tim_baseHandle-&gt;Instance==TIM2)</span><br><span class="line">  &#123;</span><br><span class="line">    /* Peripheral clock <span class="built_in">disable</span> */</span><br><span class="line">    __HAL_RCC_TIM2_CLK_DISABLE();</span><br><span class="line"></span><br><span class="line">    /* TIM2 interrupt Deinit */</span><br><span class="line">    HAL_NVIC_DisableIRQ(TIM2_IRQn);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(htim==(&amp;htim2))</span><br><span class="line">    &#123;</span><br><span class="line">        LED_switch(LED0);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="tim-h"><a href="#tim-h" class="headerlink" title="tim.h"></a>tim.h</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#ifndef __TIM_H__</span></span><br><span class="line"><span class="comment">#define __TIM_H__</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#ifdef __cplusplus</span></span><br><span class="line">extern <span class="string">&quot;C&quot;</span> &#123;</span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"></span><br><span class="line">/* Includes ------------------------------------------------------------------*/</span><br><span class="line"><span class="comment">#include &quot;main.h&quot;</span></span><br><span class="line"></span><br><span class="line">extern TIM_HandleTypeDef htim2;</span><br><span class="line"></span><br><span class="line">void MX_TIM2_Init(void);</span><br><span class="line"></span><br><span class="line"><span class="comment">#ifdef __cplusplus</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#endif /* __TIM_H__ */</span></span><br></pre></td></tr></table></figure><h3 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h3><p>LED0和LED1会同时闪烁，LED0为定时器中断控制。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &quot;main.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;tim.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;gpio.h&quot;</span></span><br><span class="line"></span><br><span class="line">/* Private includes ----------------------------------------------------------*/</span><br><span class="line"><span class="comment">#include &quot;LED\BSP_LED.h&quot;</span></span><br><span class="line"></span><br><span class="line">/* Private typedef -----------------------------------------------------------*/</span><br><span class="line">void SystemClock_Config(void);</span><br><span class="line"></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  /* MCU Configuration--------------------------------------------------------*/</span><br><span class="line"></span><br><span class="line">  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */</span><br><span class="line">  HAL_Init();</span><br><span class="line"></span><br><span class="line">  /* Configure the system clock */</span><br><span class="line">  SystemClock_Config();</span><br><span class="line"></span><br><span class="line">  /* Initialize all configured peripherals */</span><br><span class="line">  MX_GPIO_Init();</span><br><span class="line">  MX_TIM2_Init();</span><br><span class="line">LED_Init();</span><br><span class="line"></span><br><span class="line">  /* Infinite loop */</span><br><span class="line">  <span class="keyword">while</span> (1)</span><br><span class="line">  &#123;</span><br><span class="line">HAL_Delay(500);</span><br><span class="line">LED_switch(LED1);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32 PWM设置</title>
      <link href="/STM32/STM32-PWM%E8%AE%BE%E7%BD%AE-314f15e2e5fa/"/>
      <url>/STM32/STM32-PWM%E8%AE%BE%E7%BD%AE-314f15e2e5fa/</url>
      
        <content type="html"><![CDATA[<h2 id="PWM"><a href="#PWM" class="headerlink" title="PWM"></a>PWM</h2><p>通过控制方波中低平信号长度来控制LED亮度或电机速度。</p><span id="more"></span><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>Timers内选择一个定时器（以TIM1为例）。Clock Source选择Internal Clock, 选择一个Channel（例如Channel 1）选择PWM Generation CH1, 这时PA8就被选定，我们可以用LED0测试PWM效果了</p><p>Prescaler: 72-1<br>Period: 1000-1<br>Pulse: 500</p><p>这样frequency大致为1000hz（PWMf=TIMf/(prescaler+1)*(Period+1)）</p><h3 id="PWM-c"><a href="#PWM-c" class="headerlink" title="PWM.c"></a>PWM.c</h3><p>需自行加入TIM_SetTIM1Compare函数，更改CCR值。<br>在Init函数结尾加上 HAL_TIM_PWM_Start(&amp;htim1, TIM_CHANNEL_1); 开启pwm</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br></pre></td><td class="code"><pre><span class="line">//TIM1 channel 1, works on PA8</span><br><span class="line">//default psc=72-1, arr=1000-1, pulse=500(almost 50%) </span><br><span class="line">//<span class="keyword">in</span> this <span class="keyword">case</span> the frequency is 1000hz</span><br><span class="line"></span><br><span class="line"><span class="comment">#include &quot;PWM\BSP_PWM.h&quot;</span></span><br><span class="line"></span><br><span class="line">/* USER CODE BEGIN 0 */</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/* USER CODE END 0 */</span><br><span class="line"></span><br><span class="line">TIM_HandleTypeDef htim1;</span><br><span class="line"></span><br><span class="line">/* TIM1 init <span class="keyword">function</span> */</span><br><span class="line">void MX_TIM1_Init(void)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  /* USER CODE BEGIN TIM1_Init 0 */</span><br><span class="line">  /* USER CODE END TIM1_Init 0 */</span><br><span class="line"></span><br><span class="line">  TIM_MasterConfigTypeDef sMasterConfig = &#123;0&#125;;</span><br><span class="line">  TIM_OC_InitTypeDef sConfigOC = &#123;0&#125;;</span><br><span class="line">  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = &#123;0&#125;;</span><br><span class="line"></span><br><span class="line">  /* USER CODE BEGIN TIM1_Init 1 */</span><br><span class="line"></span><br><span class="line">  /* USER CODE END TIM1_Init 1 */</span><br><span class="line">  htim1.Instance = TIM1;</span><br><span class="line">  htim1.Init.Prescaler = 72-1;</span><br><span class="line">  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;</span><br><span class="line">  htim1.Init.Period = 1000-1;</span><br><span class="line">  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;</span><br><span class="line">  htim1.Init.RepetitionCounter = 0;</span><br><span class="line">  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIM_PWM_Init(&amp;htim1) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;</span><br><span class="line">  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIMEx_MasterConfigSynchronization(&amp;htim1, &amp;sMasterConfig) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  sConfigOC.OCMode = TIM_OCMODE_PWM1;</span><br><span class="line">  sConfigOC.Pulse = 500;</span><br><span class="line">  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;</span><br><span class="line">  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;</span><br><span class="line">  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;</span><br><span class="line">  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;</span><br><span class="line">  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIM_PWM_ConfigChannel(&amp;htim1, &amp;sConfigOC, TIM_CHANNEL_1) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;</span><br><span class="line">  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;</span><br><span class="line">  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;</span><br><span class="line">  sBreakDeadTimeConfig.DeadTime = 0;</span><br><span class="line">  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;</span><br><span class="line">  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;</span><br><span class="line">  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;</span><br><span class="line">  <span class="keyword">if</span> (HAL_TIMEx_ConfigBreakDeadTime(&amp;htim1, &amp;sBreakDeadTimeConfig) != HAL_OK)</span><br><span class="line">  &#123;</span><br><span class="line">    Error_Handler();</span><br><span class="line">  &#125;</span><br><span class="line">  /* USER CODE BEGIN TIM1_Init 2 */</span><br><span class="line"></span><br><span class="line">  /* USER CODE END TIM1_Init 2 */</span><br><span class="line">  HAL_TIM_MspPostInit(&amp;htim1);</span><br><span class="line">HAL_TIM_PWM_Start(&amp;htim1, TIM_CHANNEL_1);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* tim_pwmHandle)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(tim_pwmHandle-&gt;Instance==TIM1)</span><br><span class="line">  &#123;</span><br><span class="line">  /* USER CODE BEGIN TIM1_MspInit 0 */</span><br><span class="line"></span><br><span class="line">  /* USER CODE END TIM1_MspInit 0 */</span><br><span class="line">    /* TIM1 clock <span class="built_in">enable</span> */</span><br><span class="line">    __HAL_RCC_TIM1_CLK_ENABLE();</span><br><span class="line">  /* USER CODE BEGIN TIM1_MspInit 1 */</span><br><span class="line"></span><br><span class="line">  /* USER CODE END TIM1_MspInit 1 */</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  GPIO_InitTypeDef GPIO_InitStruct = &#123;0&#125;;</span><br><span class="line">  <span class="keyword">if</span>(timHandle-&gt;Instance==TIM1)</span><br><span class="line">  &#123;</span><br><span class="line">  /* USER CODE BEGIN TIM1_MspPostInit 0 */</span><br><span class="line"></span><br><span class="line">  /* USER CODE END TIM1_MspPostInit 0 */</span><br><span class="line"></span><br><span class="line">    __HAL_RCC_GPIOA_CLK_ENABLE();</span><br><span class="line">    /**TIM1 GPIO Configuration</span><br><span class="line">    PA8     ------&gt; TIM1_CH1</span><br><span class="line">    */</span><br><span class="line">    GPIO_InitStruct.Pin = GPIO_PIN_8;</span><br><span class="line">    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;</span><br><span class="line">    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;</span><br><span class="line">    HAL_GPIO_Init(GPIOA, &amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line">  /* USER CODE BEGIN TIM1_MspPostInit 1 */</span><br><span class="line"></span><br><span class="line">  /* USER CODE END TIM1_MspPostInit 1 */</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void HAL_TIM_PWM_MspDeInit(TIM_HandleTypeDef* tim_pwmHandle)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(tim_pwmHandle-&gt;Instance==TIM1)</span><br><span class="line">  &#123;</span><br><span class="line">  /* USER CODE BEGIN TIM1_MspDeInit 0 */</span><br><span class="line"></span><br><span class="line">  /* USER CODE END TIM1_MspDeInit 0 */</span><br><span class="line">    /* Peripheral clock <span class="built_in">disable</span> */</span><br><span class="line">    __HAL_RCC_TIM1_CLK_DISABLE();</span><br><span class="line">  /* USER CODE BEGIN TIM1_MspDeInit 1 */</span><br><span class="line"></span><br><span class="line">  /* USER CODE END TIM1_MspDeInit 1 */</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void TIM_SetTIM1Compare(long int compare)</span><br><span class="line">&#123;</span><br><span class="line">TIM1-&gt;CCR1=compare; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void Compare_Value_Setting(void)</span><br><span class="line">&#123;</span><br><span class="line">static uint8_t pwm_compare_state=0;</span><br><span class="line">static long int PWM_COMPARE=0;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (PWM_COMPARE==0) pwm_compare_state=1; </span><br><span class="line"><span class="keyword">if</span> (PWM_COMPARE&gt;htim1.Init.Period) pwm_compare_state=0; </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (pwm_compare_state)&#123;</span><br><span class="line">PWM_COMPARE+=10;</span><br><span class="line">TIM_SetTIM1Compare(PWM_COMPARE);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">PWM_COMPARE-=10;</span><br><span class="line">TIM_SetTIM1Compare(PWM_COMPARE);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="PWM-h"><a href="#PWM-h" class="headerlink" title="PWM.h"></a>PWM.h</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#ifndef __BSP_PWM_H__</span></span><br><span class="line"><span class="comment">#define __BSP_PWM_H__</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#ifdef __cplusplus</span></span><br><span class="line">extern <span class="string">&quot;C&quot;</span> &#123;</span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"></span><br><span class="line">/* Includes ------------------------------------------------------------------*/</span><br><span class="line"><span class="comment">#include &quot;main.h&quot;</span></span><br><span class="line"></span><br><span class="line">/* USER CODE BEGIN Includes */</span><br><span class="line"></span><br><span class="line">/* USER CODE END Includes */</span><br><span class="line"></span><br><span class="line">extern TIM_HandleTypeDef htim1;</span><br><span class="line"></span><br><span class="line">/* USER CODE BEGIN Private defines */</span><br><span class="line"></span><br><span class="line">/* USER CODE END Private defines */</span><br><span class="line"></span><br><span class="line">void MX_TIM1_Init(void);</span><br><span class="line"></span><br><span class="line">void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);</span><br><span class="line"></span><br><span class="line">/* USER CODE BEGIN Prototypes */</span><br><span class="line"></span><br><span class="line">void TIM_SetTIM1Compare(long int compare);</span><br><span class="line"></span><br><span class="line">void Compare_Value_Setting(void);</span><br><span class="line"></span><br><span class="line">/* USER CODE END Prototypes */</span><br><span class="line"></span><br><span class="line"><span class="comment">#ifdef __cplusplus</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>LED0会缓慢变亮又变暗,LED初始化必须在TIM1之前。</p><p>注意： 如果灯长暗或长亮，检查是不是最开channel里没选pwm generation这类。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &quot;main.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;gpio.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#include &quot;PWM\BSP_PWM.h&quot;</span></span><br><span class="line"></span><br><span class="line">void SystemClock_Config(void);</span><br><span class="line"></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">  HAL_Init();</span><br><span class="line"></span><br><span class="line">  SystemClock_Config();</span><br><span class="line"></span><br><span class="line">  MX_GPIO_Init();</span><br><span class="line">  MX_TIM1_Init();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (1)</span><br><span class="line">  &#123;</span><br><span class="line">Compare_Value_Setting();</span><br><span class="line">HAL_Delay(10);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32 点灯/按钮</title>
      <link href="/STM32/STM32-%E7%82%B9%E7%81%AF%E6%8C%89%E9%92%AE-9934edcd34b7/"/>
      <url>/STM32/STM32-%E7%82%B9%E7%81%AF%E6%8C%89%E9%92%AE-9934edcd34b7/</url>
      
        <content type="html"><![CDATA[<h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h2><p>此系列用于介绍常见STM32外设及使用方法，基于<a href="https://www.st.com/en/development-tools/stm32cubemx.html">STM32CubeMX</a>初始化。</p><span id="more"></span><h2 id="点灯"><a href="#点灯" class="headerlink" title="点灯"></a>点灯</h2><p>直接在GPIO端设置即可，设置推挽输出。</p><h3 id="LED-c"><a href="#LED-c" class="headerlink" title="LED.c"></a>LED.c</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &quot;LED\BSP_LED.h&quot;</span></span><br><span class="line"></span><br><span class="line">//LED0 LED1 initialize</span><br><span class="line">void LED_Init(void)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  GPIO_InitTypeDef GPIO_InitStruct = &#123;0&#125;;</span><br><span class="line"></span><br><span class="line">  /* GPIO Ports Clock Enable */</span><br><span class="line">  __HAL_RCC_GPIOD_CLK_ENABLE();</span><br><span class="line">  __HAL_RCC_GPIOA_CLK_ENABLE();</span><br><span class="line"></span><br><span class="line">  /*Configure GPIO pin Output Level */</span><br><span class="line">  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_SET);</span><br><span class="line"></span><br><span class="line">  /*Configure GPIO pin Output Level */</span><br><span class="line">  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2, GPIO_PIN_SET);</span><br><span class="line"></span><br><span class="line">  /*Configure GPIO pin : PA8 */</span><br><span class="line">  GPIO_InitStruct.Pin = GPIO_PIN_8;</span><br><span class="line">  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;</span><br><span class="line">  GPIO_InitStruct.Pull = GPIO_NOPULL;</span><br><span class="line">  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;</span><br><span class="line">  HAL_GPIO_Init(GPIOA, &amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line">  /*Configure GPIO pin : PD2 */</span><br><span class="line">  GPIO_InitStruct.Pin = GPIO_PIN_2;</span><br><span class="line">  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;</span><br><span class="line">  GPIO_InitStruct.Pull = GPIO_NOPULL;</span><br><span class="line">  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;</span><br><span class="line">  HAL_GPIO_Init(GPIOD, &amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//switching on/off LED</span><br><span class="line">void LED_switch (uint8_t LEDx)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">uint8_t state;</span><br><span class="line"></span><br><span class="line">switch (LEDx)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> LED0:</span><br><span class="line">state=HAL_GPIO_ReadPin(GPIOA,GPIO_PIN_8);</span><br><span class="line"><span class="keyword">if</span> (state) HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_RESET);</span><br><span class="line"><span class="keyword">else</span> HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_SET);</span><br><span class="line"><span class="built_in">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> LED1:</span><br><span class="line">state=HAL_GPIO_ReadPin(GPIOD,GPIO_PIN_2);</span><br><span class="line"><span class="keyword">if</span> (state) HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2, GPIO_PIN_RESET);</span><br><span class="line"><span class="keyword">else</span> HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2, GPIO_PIN_SET);</span><br><span class="line"><span class="built_in">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="LED-h"><a href="#LED-h" class="headerlink" title="LED.h"></a>LED.h</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#ifndef __BSP_LED_H__</span></span><br><span class="line"><span class="comment">#define __BSP_LED_H__</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#include &quot;main.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#define LED0 0</span></span><br><span class="line"><span class="comment">#define LED1 1</span></span><br><span class="line"></span><br><span class="line">void LED_Init(void);</span><br><span class="line">void LED_switch (uint8_t LEDx);</span><br><span class="line"></span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>LED0，LED1 流水灯，交替亮</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#include &quot;main.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;LED/BSP_LED.h&quot;</span></span><br><span class="line"></span><br><span class="line">void SystemClock_Config(void);</span><br><span class="line"></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">  HAL_Init();</span><br><span class="line">  LED_Init();</span><br><span class="line"></span><br><span class="line">  SystemClock_Config();</span><br><span class="line"></span><br><span class="line">  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_SET); //turn off</span><br><span class="line">  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2, GPIO_PIN_RESET); //turn on</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (1)</span><br><span class="line">  &#123;</span><br><span class="line">HAL_Delay(500);</span><br><span class="line">LED_switch (LED0); //switching the state</span><br><span class="line">LED_switch (LED1);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="按键"><a href="#按键" class="headerlink" title="按键"></a>按键</h2><p>三个按键中PA0需设置下拉输出，其他两个PC5,PA15上拉输出</p><h3 id="KEY-c"><a href="#KEY-c" class="headerlink" title="KEY.c"></a>KEY.c</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &quot;KEY\BSP_KEY.h&quot;</span></span><br><span class="line"></span><br><span class="line">void KEY_Init(void)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  GPIO_InitTypeDef GPIO_InitStruct = &#123;0&#125;;</span><br><span class="line"></span><br><span class="line">  /* GPIO Ports Clock Enable */</span><br><span class="line">  __HAL_RCC_GPIOC_CLK_ENABLE();</span><br><span class="line">  __HAL_RCC_GPIOA_CLK_ENABLE();</span><br><span class="line"></span><br><span class="line">/*Configure GPIO pin : PA0 */</span><br><span class="line">GPIO_InitStruct.Pin=GPIO_PIN_0; </span><br><span class="line">  GPIO_InitStruct.Mode=GPIO_MODE_INPUT;</span><br><span class="line">  GPIO_InitStruct.Pull=GPIO_PULLDOWN; </span><br><span class="line">  GPIO_InitStruct.Speed=GPIO_SPEED_FREQ_HIGH;</span><br><span class="line">  HAL_GPIO_Init(GPIOA,&amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line">  /*Configure GPIO pin : PC5 */</span><br><span class="line">  GPIO_InitStruct.Pin = GPIO_PIN_5;</span><br><span class="line">  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;</span><br><span class="line">  GPIO_InitStruct.Pull = GPIO_PULLUP;</span><br><span class="line">  HAL_GPIO_Init(GPIOC, &amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line">  /*Configure GPIO pin : PA15 */</span><br><span class="line">  GPIO_InitStruct.Pin = GPIO_PIN_15;</span><br><span class="line">  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;</span><br><span class="line">  GPIO_InitStruct.Pull = GPIO_PULLUP;</span><br><span class="line">  HAL_GPIO_Init(GPIOA, &amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">uint8_t KEY_Scan(uint8_t mode)</span><br><span class="line">&#123;</span><br><span class="line">    static uint8_t key_up=1;</span><br><span class="line">    <span class="keyword">if</span>(mode==1)key_up=1; </span><br><span class="line">    <span class="keyword">if</span>(key_up&amp;&amp;(KEY0==0||KEY1==0||WK_UP==1))</span><br><span class="line">    &#123;</span><br><span class="line">        HAL_Delay(10);</span><br><span class="line">        key_up=0;</span><br><span class="line">        <span class="keyword">if</span>(KEY0==0)       <span class="built_in">return</span> KEY0_PRES;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(KEY1==0)  <span class="built_in">return</span> KEY1_PRES;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(WK_UP==1) <span class="built_in">return</span> WKUP_PRES;          </span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(KEY0==1&amp;&amp;KEY1==1&amp;&amp;WK_UP==0)key_up=1;</span><br><span class="line">    <span class="built_in">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="KEY-h"><a href="#KEY-h" class="headerlink" title="KEY.h"></a>KEY.h</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#ifndef __BSP_KEY_H__</span></span><br><span class="line"><span class="comment">#define __BSP_KEY_H__</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#include &quot;main.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#define KEY0        HAL_GPIO_ReadPin(GPIOC,GPIO_PIN_5)  //KEY0</span></span><br><span class="line"><span class="comment">#define KEY1        HAL_GPIO_ReadPin(GPIOA,GPIO_PIN_15) //KEY1°</span></span><br><span class="line"><span class="comment">#define WK_UP       HAL_GPIO_ReadPin(GPIOA,GPIO_PIN_0)  //WKUP</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#define KEY0_PRES 1</span></span><br><span class="line"><span class="comment">#define KEY1_PRES2</span></span><br><span class="line"><span class="comment">#define WKUP_PRES   3</span></span><br><span class="line"></span><br><span class="line">void KEY_Init(void);</span><br><span class="line">uint8_t KEY_Scan(uint8_t mode);</span><br><span class="line"></span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h3><p>按key0 LED0变化，key1 LED1变化<br>按WKUP两个都变化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &quot;main.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;gpio.h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#include &quot;LED\BSP_LED.h&quot;</span></span><br><span class="line"><span class="comment">#include &quot;KEY\BSP_KEY.h&quot;</span></span><br><span class="line"></span><br><span class="line">void SystemClock_Config(void);</span><br><span class="line"></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">  HAL_Init();</span><br><span class="line"></span><br><span class="line">  LED_Init();</span><br><span class="line">  KEY_Init();</span><br><span class="line">  </span><br><span class="line">  SystemClock_Config();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (1)</span><br><span class="line">  &#123;</span><br><span class="line"></span><br><span class="line">switch(KEY_Scan(0))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> KEY0_PRES:</span><br><span class="line">LED_switch(LED0);</span><br><span class="line"><span class="built_in">break</span>;</span><br><span class="line"><span class="keyword">case</span> KEY1_PRES:</span><br><span class="line">LED_switch(LED1);</span><br><span class="line"><span class="built_in">break</span>;</span><br><span class="line"><span class="keyword">case</span> WKUP_PRES:</span><br><span class="line">LED_switch(LED0);</span><br><span class="line">LED_switch(LED1);</span><br><span class="line"><span class="built_in">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MINI STM32 Schematic diagram</title>
      <link href="/STM32/MINI-STM32-Schematic-diagram-adf42346b0dc/"/>
      <url>/STM32/MINI-STM32-Schematic-diagram-adf42346b0dc/</url>
      
        <content type="html"><![CDATA[<p>-</p><span id="more"></span><div class="pdf-container" data-target="MiniSTM32_V3.3_SCH.pdf" data-height="500px"></div> ]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 硬件 </tag>
            
            <tag> stm32 </tag>
            
            <tag> PDF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32 DataSheet</title>
      <link href="/STM32/STM32-DataSheet-ed2b144ff0b0/"/>
      <url>/STM32/STM32-DataSheet-ed2b144ff0b0/</url>
      
        <content type="html"><![CDATA[<p>-</p><span id="more"></span><p>2.1 Device overview:<br> -performance line block diagram</p><p>table 5:<br> -pin definetitn</p><div class="pdf-container" data-target="stm32f103rc.pdf" data-height="500px"></div> ]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 硬件 </tag>
            
            <tag> stm32 </tag>
            
            <tag> PDF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo个人博客创建引导（三）</title>
      <link href="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%B8%89%EF%BC%89-a191561fb171/"/>
      <url>/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%B8%89%EF%BC%89-a191561fb171/</url>
      
        <content type="html"><![CDATA[<h2 id="插件介绍"><a href="#插件介绍" class="headerlink" title="插件介绍"></a>插件介绍</h2><p>如果一些功能没有包含在主题内或想使用自己的内容，可以在官网的<a href="https://hexo.io/plugins/">插件库</a>内下载使用。一些常用的插件会时不时更新在此页面。</p><span id="more"></span><h2 id="搜索功能插件"><a href="#搜索功能插件" class="headerlink" title="搜索功能插件"></a>搜索功能插件</h2><p>在主要小图标的最右侧增加一个搜索按钮。</p><p>在工程更根目录输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><p>全局配置文件内加入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Search</span></span><br><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  <span class="built_in">limit</span>: 10000</span><br></pre></td></tr></table></figure><p>theme配置文件寻找“Local Search”修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Local Search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/next-theme/hexo-generator-searchdb</span></span><br><span class="line">local_search:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="插入图片插件"><a href="#插入图片插件" class="headerlink" title="插入图片插件"></a>插入图片插件</h2><p>支持在Blog里放入图片。</p><p>在工程更根目录输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure><p>全局配置文件内修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>找到“/node_module/hexo-asset-image/index.js”, 替换内容为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;use strict&#x27;</span>;</span><br><span class="line">var cheerio = require(<span class="string">&#x27;cheerio&#x27;</span>);</span><br><span class="line"></span><br><span class="line">// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string</span><br><span class="line"><span class="keyword">function</span> getPosition(str, m, i) &#123;</span><br><span class="line">  <span class="built_in">return</span> str.split(m, i).join(m).length;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var version = String(hexo.version).split(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">hexo.extend.filter.register(<span class="string">&#x27;after_post_render&#x27;</span>, <span class="keyword">function</span>(data)&#123;</span><br><span class="line">  var config = hexo.config;</span><br><span class="line">  <span class="keyword">if</span>(config.post_asset_folder)&#123;</span><br><span class="line">        var link = data.permalink;</span><br><span class="line">    <span class="keyword">if</span>(version.length &gt; 0 &amp;&amp; Number(version[0]) == 3)</span><br><span class="line">       var beginPos = getPosition(link, <span class="string">&#x27;/&#x27;</span>, 1) + 1;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">       var beginPos = getPosition(link, <span class="string">&#x27;/&#x27;</span>, 3) + 1;</span><br><span class="line">    // In hexo 3.1.1, the permalink of <span class="string">&quot;about&quot;</span> page is like <span class="string">&quot;.../about/index.html&quot;</span>.</span><br><span class="line">    var endPos = link.lastIndexOf(<span class="string">&#x27;/&#x27;</span>) + 1;</span><br><span class="line">    link = link.substring(beginPos, endPos);</span><br><span class="line"></span><br><span class="line">    var toprocess = [<span class="string">&#x27;excerpt&#x27;</span>, <span class="string">&#x27;more&#x27;</span>, <span class="string">&#x27;content&#x27;</span>];</span><br><span class="line">    <span class="keyword">for</span>(var i = 0; i &lt; toprocess.length; i++)&#123;</span><br><span class="line">      var key = toprocess[i];</span><br><span class="line"> </span><br><span class="line">      var $ = cheerio.load(data[key], &#123;</span><br><span class="line">        ignoreWhitespace: <span class="literal">false</span>,</span><br><span class="line">        xmlMode: <span class="literal">false</span>,</span><br><span class="line">        lowerCaseTags: <span class="literal">false</span>,</span><br><span class="line">        decodeEntities: <span class="literal">false</span></span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      $(<span class="string">&#x27;img&#x27;</span>).each(<span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">        <span class="keyword">if</span> ($(this).attr(<span class="string">&#x27;src&#x27;</span>))&#123;</span><br><span class="line">            // For windows style path, we replace <span class="string">&#x27;\&#x27;</span> to <span class="string">&#x27;/&#x27;</span>.</span><br><span class="line">            var src = $(this).attr(<span class="string">&#x27;src&#x27;</span>).replace(<span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">            <span class="keyword">if</span>(!/http[s]*.*|\/\/.*/.<span class="built_in">test</span>(src) &amp;&amp;</span><br><span class="line">               !/^\s*\//.<span class="built_in">test</span>(src)) &#123;</span><br><span class="line">              // For <span class="string">&quot;about&quot;</span> page, the first part of <span class="string">&quot;src&quot;</span> can<span class="string">&#x27;t be removed.</span></span><br><span class="line"><span class="string">              // In addition, to support multi-level local directory.</span></span><br><span class="line"><span class="string">              var linkArray = link.split(&#x27;</span>/<span class="string">&#x27;).filter(function(elem)&#123;</span></span><br><span class="line"><span class="string">                return elem != &#x27;</span><span class="string">&#x27;;</span></span><br><span class="line"><span class="string">              &#125;);</span></span><br><span class="line"><span class="string">              var srcArray = src.split(&#x27;</span>/<span class="string">&#x27;).filter(function(elem)&#123;</span></span><br><span class="line"><span class="string">                return elem != &#x27;</span><span class="string">&#x27; &amp;&amp; elem != &#x27;</span>.<span class="string">&#x27;;</span></span><br><span class="line"><span class="string">              &#125;);</span></span><br><span class="line"><span class="string">              if(srcArray.length &gt; 1)</span></span><br><span class="line"><span class="string">                srcArray.shift();</span></span><br><span class="line"><span class="string">              src = srcArray.join(&#x27;</span>/<span class="string">&#x27;);</span></span><br><span class="line"><span class="string">              $(this).attr(&#x27;</span>src<span class="string">&#x27;, config.root + link + src);</span></span><br><span class="line"><span class="string">              console.info&amp;&amp;console.info(&quot;update link as:--&gt;&quot;+config.root + link + src);</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">        &#125;else&#123;</span></span><br><span class="line"><span class="string">            console.info&amp;&amp;console.info(&quot;no src attr, skipped...&quot;);</span></span><br><span class="line"><span class="string">            console.info&amp;&amp;console.info($(this));</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;);</span></span><br><span class="line"><span class="string">      data[key] = $.html();</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">&#125;);</span></span><br></pre></td></tr></table></figure><p><a href="https://blog.csnd.net/xjm850552586">原地址在此</a>，赞美大佬！</p><p>之后每次新建new page都会额外生成一个同名文件夹，把需要的图片放进去后在.md文件内输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![ImageDescription](ImageName.npg)</span><br></pre></td></tr></table></figure><p>就可以显示图片了。</p><h2 id="文章密码插件"><a href="#文章密码插件" class="headerlink" title="文章密码插件"></a>文章密码插件</h2><p>如果想加密某些文件，可以添加这个插件。</p><p>下载plugin</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-blog-encrypt</span><br></pre></td></tr></table></figure><p>在根目录配置文件添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Security</span></span><br><span class="line">encrypt: <span class="comment"># hexo-blog-encrypt</span></span><br><span class="line">  abstract: Here<span class="string">&#x27;s something encrypted, password is required to continue reading.</span></span><br><span class="line"><span class="string">  message: Hey, password is required here.</span></span><br><span class="line"><span class="string">  tags:</span></span><br><span class="line"><span class="string">  - &#123;name: encryptAsDiary, password: passwordA&#125;</span></span><br><span class="line"><span class="string">  - &#123;name: encryptAsTips, password: passwordB&#125;</span></span><br><span class="line"><span class="string">  theme: up</span></span><br><span class="line"><span class="string">  wrong_pass_message: Oh, this is an invalid password. Check and try again, please.</span></span><br><span class="line"><span class="string">  wrong_hash_message: Oh, these decrypted content cannot be verified, but you can still have a look.</span></span><br></pre></td></tr></table></figure><p>theme: 密码输入界面样式，可查看<a href="https://mhexo.github.io/2020/12/23/Theme-Test-Default/">作者实例</a>。</p><p>之后只要在文章配置内加入password</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: Hello World</span><br><span class="line">date: 2020-03-13 21:12:21</span><br><span class="line">password: hello</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>文章底有encrypt again按钮，可重置密码记忆记录。</p><h2 id="插入PDF插件"><a href="#插入PDF插件" class="headerlink" title="插入PDF插件"></a>插入PDF插件</h2><p>可以插入一个pdf阅读框</p><p>下载plugin</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install --save hexo-pdf</span><br></pre></td></tr></table></figure><p>打开hexo configuration，修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># PDF tag</span></span><br><span class="line"><span class="comment"># NexT will try to load pdf files natively, if failed, pdf.js will be used.</span></span><br><span class="line"><span class="comment"># So, you have to install the dependency of pdf.js if you want to use pdf tag and make it available to all browsers.</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/next-theme/theme-next-pdf</span></span><br><span class="line">pdf:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Default height</span></span><br><span class="line">  height: 500px</span><br></pre></td></tr></table></figure><p>如果需要插入pdf，在.md同目录新建一个同名文件夹，放入pdf文件，输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% pdf  pfdName.pdf %&#125; </span><br></pre></td></tr></table></figure><p>插入PDF</p>]]></content>
      
      
      <categories>
          
          <category> Hexo模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo个人博客创建引导——NEXT主题</title>
      <link href="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%E2%80%94%E2%80%94NEXT%E4%B8%BB%E9%A2%98-87eb59f938c0/"/>
      <url>/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%E2%80%94%E2%80%94NEXT%E4%B8%BB%E9%A2%98-87eb59f938c0/</url>
      
        <content type="html"><![CDATA[<h2 id="主题更换"><a href="#主题更换" class="headerlink" title="主题更换"></a>主题更换</h2><p>在hexo官网有<a href="https://hexo.io/themes/">主题下载</a>页面，存储有大量主题。如果需要更换就点击进入主题的github页面，按上面的说明步骤直接clone进自己的文件夹就行。下载的文件可以在根目录下的\themes里找到。</p><span id="more"></span><p>打开根目录的_config.yml文件，搜索Extensions</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line">theme: next</span><br></pre></td></tr></table></figure><p>将最后的theme改为新主题的名字即可，本地的话刷新就更换主题了。</p><p>现在网站使用的是大佬推荐的<a href="https://github.com/next-theme/hexo-theme-next">Next</a>主题，内容设置相对丰富点，页面简约动画也不突兀。由于本人next主题使用的相对多点，这篇基本就记录下next里各个configuration，如果之后使用其他主题的话会另开一篇记录。</p><h2 id="网页设置"><a href="#网页设置" class="headerlink" title="网页设置"></a>网页设置</h2><p>网页设置就是在hexo根目录下的_donfig.yml里的内容，一般下载插件或者更改基础设置时会使用。详细介绍可以找<a href="https://hexo.io/docs/configuration">官方文档</a>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line">title: 朽丶 // 主标题</span><br><span class="line">subtitle: <span class="string">&#x27;个人学习记录&#x27;</span> //副标题</span><br><span class="line">description: <span class="string">&#x27;Personal Learning Technical Blog&#x27;</span> //左边拉框内介绍</span><br><span class="line">keywords:</span><br><span class="line">author: Yang Cen //作者姓名</span><br><span class="line">language: zh-CN //语言设置</span><br><span class="line">timezone: <span class="string">&#x27;&#x27;</span> </span><br></pre></td></tr></table></figure><p>另外可以查找下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">permalink: :title-:<span class="built_in">hash</span>/</span><br></pre></td></tr></table></figure><p>更多模板可以在<a href="https://hexo.io/docs/permalinks">官网</a>找到。</p><h2 id="主题设置"><a href="#主题设置" class="headerlink" title="主题设置"></a>主题设置</h2><p>打开themes文件夹里的正在使用的主题文件夹，会发现里边也有个_config.yml文件，这个就是主题的配置文件。此板块会不定期更新，用来记录下理解的模块。</p><h3 id="Schemes"><a href="#Schemes" class="headerlink" title="Schemes"></a>Schemes</h3><p>Next主题有四个体系</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Schemes</span></span><br><span class="line"><span class="comment">#scheme: Muse</span></span><br><span class="line"><span class="comment">#scheme: Mist</span></span><br><span class="line"><span class="comment">#scheme: Pisces</span></span><br><span class="line">scheme: Gemini</span><br></pre></td></tr></table></figure><p>大体是header，left-side排版的变化，推荐都试试看看那个顺眼。由于只能选择一种体系，所以更换时记得注销掉不需要的内容。</p><h3 id="menu"><a href="#menu" class="headerlink" title="menu"></a>menu</h3><p>位于标题附近的小目录，使用的话直接去掉之前的“#”即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || fa fa-home</span><br><span class="line">  tags: /tags/ || fa fa-tags</span><br><span class="line">  categories: /categories/ || fa fa-th</span><br><span class="line">  archives: /archives/ || fa fa-archive</span><br><span class="line">  about: /about/ || fa fa-user</span><br><span class="line">  <span class="comment">#schedule: /schedule/ || fa fa-calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || fa fa-sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || fa fa-heartbeat</span></span><br></pre></td></tr></table></figure><p>如果全打开效果类似下图<br><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%E2%80%94%E2%80%94NEXT%E4%B8%BB%E9%A2%98-87eb59f938c0/%E7%9B%AE%E5%BD%95%E5%9B%BE%E8%A1%A8.PNG" alt="目录图表.PNG"></p><p>如果开启新板块需要bash里输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page pat_name</span><br></pre></td></tr></table></figure><p>然后前往\source，会发现新建了一个同名文件夹，打开里边的index.md,按这个模板配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line"><span class="built_in">type</span>: <span class="string">&quot;categories&quot;</span></span><br><span class="line">date: 2021-09-07 11:13:54</span><br><span class="line">comments: <span class="literal">false</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>完成后就可以使用这些小图标了。</p><p>基本上archives,categories,tags需要用的多些，这些不用怎么管的，有文章进去自己就会变化计数。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Enable / Disable menu icons / item badges.</span></span><br><span class="line">menu_settings:</span><br><span class="line">  icons: <span class="literal">true</span></span><br><span class="line">  badges: <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>icons: 之前的小图标<br>badges：开启会在每条末尾加一个计数表，显示数量</p><h3 id="Social-Links"><a href="#Social-Links" class="headerlink" title="Social Links"></a>Social Links</h3><p>在side bar增加社交app图标和连接。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Social Links</span></span><br><span class="line"><span class="comment"># Usage: `Key: permalink || icon`</span></span><br><span class="line"><span class="comment"># Key is the link label showing to end users.</span></span><br><span class="line"><span class="comment"># Value before `||` delimiter is the target permalink, value after `||` delimiter is the name of Font Awesome icon.</span></span><br><span class="line">social:</span><br><span class="line">  GitHub: https://github.com/ycen2111 || fab fa-github</span><br><span class="line">  E-Mail: mailto:ycen2111@gmail.com || fa fa-envelope</span><br><span class="line">  <span class="comment">#Weibo: https://weibo.com/yourname || fab fa-weibo</span></span><br><span class="line">  <span class="comment">#Google: https://plus.google.com/yourname || fab fa-google</span></span><br><span class="line">  <span class="comment">#Twitter: https://twitter.com/yourname || fab fa-twitter</span></span><br></pre></td></tr></table></figure><p>||后的是图标连接，改下前面的网址就可以导向了。</p><h3 id="Footer"><a href="#Footer" class="headerlink" title="Footer"></a>Footer</h3><p>在icon内可以更改footer中间那个图标</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Icon between year and copyright info.</span></span><br><span class="line">  icon:</span><br><span class="line">    <span class="comment"># Icon name in Font Awesome. See: https://fontawesome.com/icons</span></span><br><span class="line">    name: fa fa-grip-lines-vertical</span><br><span class="line">    <span class="comment"># If you want to animate the icon, set it to true.</span></span><br><span class="line">    animated: <span class="literal">false</span></span><br><span class="line">    <span class="comment"># Change the color of icon, using Hex Code.</span></span><br><span class="line">    color: <span class="string">&quot;#999999&quot;</span></span><br></pre></td></tr></table></figure><p>name:可以在<a href="https://fontawesome.com/icons">fontawesome</a>内选择图标，直接替换fa后的名字即可。<br>color:控制图标颜色，必须使用<a href="https://www.color-hex.com/">HEX</a>代码。#999999与旁边字体颜色最近。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Powered by Hexo &amp; NexT</span></span><br><span class="line">powered: <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>默认为true，改为false可以把最后那个Powered by Hexo &amp; NexT取消掉。</p><h3 id="Post-Setting"><a href="#Post-Setting" class="headerlink" title="Post Setting"></a>Post Setting</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Read more button</span></span><br><span class="line"><span class="comment"># If true, the read more button will be displayed in excerpt section.</span></span><br><span class="line">read_more_btn: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>主界面阅读全文按钮，可以在.md文件内写入 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- more --&gt;</span><br></pre></td></tr></table></figure><p>定位按钮位置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Post meta display settings</span></span><br><span class="line">post_meta:</span><br><span class="line">  item_text: <span class="literal">false</span></span><br><span class="line">  created_at: <span class="literal">true</span></span><br><span class="line">  updated_at:</span><br><span class="line">    <span class="built_in">enable</span>: <span class="literal">false</span></span><br><span class="line">    another_day: <span class="literal">false</span></span><br><span class="line">  categories: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>文章标题下面的一些信息。<br>item_text:图标旁边是否加上文字描述<br>created_at:创建时间<br>update_at:更新时间，如果another_day为true就只显示不同日期的更改记录。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Use icon instead of the symbol # to indicate the tag at the bottom of the post</span></span><br><span class="line">tag_icon: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>文章最后的tags之前用小图标标记。</p><p>另外关于donate和reward的内容也在此，需要的话直接修改就行。</p>]]></content>
      
      
      <categories>
          
          <category> Hexo模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo个人博客创建引导（二）</title>
      <link href="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-00da4911dbdf/"/>
      <url>/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-00da4911dbdf/</url>
      
        <content type="html"><![CDATA[<h2 id="申请域名"><a href="#申请域名" class="headerlink" title="申请域名"></a>申请域名</h2><p>虽然github可以免费生成一个”.github.io”结尾的域名，但通常情况下大多数人还是愿意申请一个更适合的域名并重定向过去。由于域名申请审核需要一定时间，这里先介绍域名申请的流程及注意事项，如不打算自己申请可以先跳过这节。</p><p>此文会讲解在<a href="https://wanwang.aliyun.com/domain?utm_content=se_1008364728">阿里云平台</a>申请域名。优点在于阿里云可以直接解析域名，减少工作量，相对方便。</p><span id="more"></span><p><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-00da4911dbdf/%E9%98%BF%E9%87%8C%E4%BA%91%E5%9F%9F%E5%90%8D%E5%9B%BE%E7%89%87.PNG" alt="阿里云域名图片"></p><p>个人认为.top结尾的域名便宜又好使，完全可以个人使用，如果可以接受稍微贵点的话.com结尾也比较大气。不同域名价格相差极大，个别热门名字价格可能会到几万，需要多找找。（像此网站域名pipirima.top，就是天蝎座μ2的英文，尾宿增二，3.57等星，双星系统）</p><p>找到合适的就直接加入列表购买就行。已购买的可以在域名控制台，域名列表里找到<br><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-00da4911dbdf/%E5%9F%9F%E5%90%8D%E5%88%97%E8%A1%A8.PNG" alt="域名列表"></p><p>一开始购买的域名需要实名认证下，会有提示的，进去后把名字和身份证传下就行。人工审核大概需要半天的样子，完成后会发过来一封信息提醒的，耐心等待即可。审核完成后需要解析下，点击上图蓝色的”解析“即可,这个后面会说。</p><h2 id="github创造仓库"><a href="#github创造仓库" class="headerlink" title="github创造仓库"></a>github创造仓库</h2><p>接下来的内容是假设可以登录github并有账号的情况，如果还未注册请先进行注册并完成基础操作。</p><p>首先打开仓库<br><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-00da4911dbdf/github%E4%BB%93%E5%BA%93.PNG" alt="github仓库.PNG"></p><p>在右上角点击绿色的”new“，开始创建。<br><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-00da4911dbdf/%E5%88%9B%E5%BB%BA%E4%BB%93%E5%BA%93.PNG" alt="创建仓库.PNG"></p><p>（懒得涂名字了，反正都能看到的，算了）</p><p>老样子，将yourname改为自己的名字，选择public，直接创建。完成的话像这个样子<br><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-00da4911dbdf/%E5%88%9B%E9%80%A0%E5%AE%8C%E6%88%90.PNG" alt="创造完成.PNG"></p><h2 id="生成SSH"><a href="#生成SSH" class="headerlink" title="生成SSH"></a>生成SSH</h2><p>利用bash直接生成密钥，然后把公共密钥给github，就不用每次都属用户名密码了（没试过需要输入的情况，这么说总是方便吧）</p><p>如果bash是第一次使用的话先设置一次账号密码。打开bash后输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;yourname&quot;</span></span><br><span class="line">git config --global user.emil <span class="string">&quot;youremail&quot;</span></span><br></pre></td></tr></table></figure><p>记得替换好名字和邮箱</p><p>然后就生成SSH</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;youremail&quot;</span></span><br></pre></td></tr></table></figure><p>全程回车确认，最后会提示生成完毕，并给一个地址。基本会在 C:\User.ssh 里找到一个id_rsa.pub<br><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-00da4911dbdf/SSH.PNG" alt="SSH.PNG"></p><p>用记事本打开，复制内容后回github黏贴<br><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-00da4911dbdf/github_ssh.PNG" alt="github_ssh.PNG"></p><p>点击new ssh key黏贴密钥。</p><p>完成后在Bash里输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-00da4911dbdf/%E6%A3%80%E6%9F%A5ssh.PNG" alt="检查ssh.PNG"></p><p>本人是这个结果，如果出现的话基本就没事了。</p><h2 id="hexo关联github"><a href="#hexo关联github" class="headerlink" title="hexo关联github"></a>hexo关联github</h2><p>说是关联，其实也只是将.git等一部分文件上传关联，没有全部发送备份。本文最后有将整个项目上传过程。</p><p>打开项目根目录，打开 _config.yml 配置文件直接拖到最后，改为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repository: https://github.com/yourname/yourname.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>改为自己名字后保存退出，打开bash安装hexo的部署功能</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>之后我们就可以使用 hexo d 这个命令了。</p><p>连续输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d//上传部署</span><br></pre></td></tr></table></figure><p>hexo d部署估计是由于墙的问题，很容易失败，多试几次发现没提示error就说明成功了。<br><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-00da4911dbdf/%E9%83%A8%E7%BD%B2%E6%88%90%E5%8A%9F.PNG" alt="部署成功.PNG"></p><p>稍微过会儿进入<a href="http://yourname.github.io就可以看到上传的页面了./">http://yourname.github.io就可以看到上传的页面了。</a></p><h2 id="解析域名"><a href="#解析域名" class="headerlink" title="解析域名"></a>解析域名</h2><p>之前申请的域名审核通过就可以解析了，不需要认证。</p><p><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-00da4911dbdf/%E8%A7%A3%E6%9E%90%E8%AE%BE%E7%BD%AE.PNG" alt="解析设置.PNG"></p><p>（注意！！！）解析设置必须在完成github配置后再进行。</p><p>先说主机记录这块，”@“意思是无前缀，直接输入域名就行，如直接pipirima.top就可以访问此网站。”WWW“就是前缀加上，如 <a href="http://www.pipirima.top/">www.pipirima.top</a> ,两个都设置的话两个写法都可以访问此网站。</p><p>记录类型一般有两个选择，”A“或者”CNAME“。如果选择”A“就需要在记录值这里填写.github.io对应的ip地址。打开windows自带cmd，输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping yourname.github.io</span><br></pre></td></tr></table></figure><p><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-00da4911dbdf/git_ip%E6%9F%A5%E8%AF%A2.PNG" alt="git_ip查询.PNG"></p><p>yourname改为自己的github姓名。在记录值里输入ip即可。</p><p>但github方面更推荐使用”CNAME“，如果用”A“在最后github设置customer domain时会有个warning，看着难受。所以一般都是推荐使用”CNAME“。这种情况下直接在记录值输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yourname.github.io</span><br></pre></td></tr></table></figure><p>即可，同样记得自己改下名字。</p><p>解析线路选择默认，TTL选10分钟即可（更新时间间隔）。点击确认。</p><h2 id="配置CNAME"><a href="#配置CNAME" class="headerlink" title="配置CNAME"></a>配置CNAME</h2><p>最后，再告诉github和hexo新域名</p><p>进入仓库中的setting，在page页面内找到customer domain选项<br><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%BA%8C%EF%BC%89-00da4911dbdf/customer_domain.PNG" alt="customer_domain.PNG"></p><p>直接输入域名，不用任何前缀。推荐点上下边的enforce https，更安全一点。点击save，等旁边出现一个绿勾就完成了。</p><p>虽然现在就能进入新域名了，但每次部署后都需要从新输入customer domain。解决办法是在本地hexo，source文件夹里新建一个文件，去除后缀（所有格式形式），输入新域名（同样只输入域名进行），重新hexo clean，g，d，部署后就每次可以不用再次输入了。</p><p>同样，上传部署后需要等待一会儿，不会马上更新的。</p><p>现在可以访问新域名，进行后续的theme选择和内容书写了。</p><h2 id="备份HEXO文件"><a href="#备份HEXO文件" class="headerlink" title="备份HEXO文件"></a>备份HEXO文件</h2><p>为了防止工程文件随本地文件消失而损失，可在仓库中另建一个branch来存放文件。</p><p>在github项目仓库中新建branch。</p><p>!(new_branch.PNG)[new_branch.PNG]</p><p>在setting中设置默认branch</p><p>!(set_default.PNG)[set_default.PNG]</p><p>之后在本地新建一个文件夹来存放已上传的文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/yourname/yourname.github.io.git</span><br></pre></td></tr></table></figure><p>开启隐藏文件显示，保留.git文件之外删除其他文件，并将需要上传的文件放进来（必须保留.gitignor文件）。输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">git remote rm origin</span><br><span class="line"></span><br><span class="line">git remote add origin https://github.com/yourname/yourname.github.io.git</span><br><span class="line"></span><br><span class="line">git add .</span><br><span class="line"></span><br><span class="line">git commit -m <span class="string">&quot;something&quot;</span></span><br><span class="line"></span><br><span class="line">git push origin branchName</span><br><span class="line">//<span class="keyword">if</span> fail</span><br><span class="line">git pull origin branchName</span><br><span class="line">//and follow</span><br><span class="line">git push origin <span class="built_in">source</span></span><br></pre></td></tr></table></figure><p>可发现文件已上传。</p>]]></content>
      
      
      <categories>
          
          <category> Hexo模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> Blog </tag>
            
            <tag> 图文教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo个人博客创建引导（一）</title>
      <link href="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%B8%80%EF%BC%89-f5df35482bba/"/>
      <url>/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%B8%80%EF%BC%89-f5df35482bba/</url>
      
        <content type="html"><![CDATA[<h2 id="总起"><a href="#总起" class="headerlink" title="总起"></a>总起</h2><p>此图文教程为基于<a href="https://hexo.io/zh-cn/">Hexo</a>私人博客框架和github建立自己的网站博客。</p><p>此攻略大量参考资料<a href="https://blog.csdn.net/weixin_41800884/article/details/103589663">零基础搭建博客：入门</a>, <a href="https://blog.csdn.net/sinat_37781304/article/details/82729029">hexo史上最全搭建教程</a>,并加入自己的理解及遇到的问题和对此的解决方法。仅作为自己之后的回忆笔记，可能不具备普适性。</p><span id="more"></span><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>需要环境：<br>    1.Git<br>    2.Git bush<br>    3.Node.js<br>    4.Github</p><h3 id="1-Git-bush与Node-js安装"><a href="#1-Git-bush与Node-js安装" class="headerlink" title="1. Git bush与Node.js安装"></a>1. Git bush与Node.js安装</h3><p>Git可于<a href="https://gitforwindows.org/">git官网</a>安装。点击download直接会开启一个下载进程，直接全程默认安装即可。这个安装包包含如下图所示三个文件：</p><p><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%B8%80%EF%BC%89-f5df35482bba/Git_Display.png" alt="Git 安装后的三个文件"></p><p>其中Git GUI和Git CMD基本不会用到，只需要Git Bash来运行Linux command即可。 （ps：到此处为止Git Bash默认并未识别sudo命令，之后会用Node.js里的npm功能代替。）</p><p>完成之后可以打开Bash输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure><p>看看版本<br><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%B8%80%EF%BC%89-f5df35482bba/git_version.PNG" alt="bash查询Git版本"></p><p>没有问题后就可以着手开始Node.js的安装了。如果没有墙的问题的话可以去<a href="https://nodejs.org/en/download/">nodejs</a>官网，不然就老老实实去<a href="http://nodejs.cn/download/">国内端点</a>下载。一样的。<br><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%B8%80%EF%BC%89-f5df35482bba/nodejs.PNG" alt="nodejs官网图片"></p><p>完成后就可以使用npm命令下载了。马上输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><p>看看是否成功。</p><h3 id="2-下载Hexo"><a href="#2-下载Hexo" class="headerlink" title="2.下载Hexo"></a>2.下载Hexo</h3><p>主菜来了，今晚的主角。由于Hexo是基于Node.js框架，所以必须完成上面的几步再安装。</p><p>先找个合适的地方创建文件夹存放架构，然后直接在新建的目录下操作。</p><p>直接Bash输入命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>这条命令可以直接在Hexo官网找到。注意，不清楚是不是墙的原因Bash会花费大量时间下载，并且没有任何提示（会突然暴毙）。因此尽量多注意下下载状况，多读读command里的内容。</p><p>老规矩，查下版本。这里使用的是4.3版本。<br><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%B8%80%EF%BC%89-f5df35482bba/hexo_version.png" alt="hexo版本"></p><p>安装完成后需要先初始化一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init filename</span><br></pre></td></tr></table></figure><p>自己取个合适的名字。它会自己创建一个文件夹来保存东西不需要自己提前创建。有失败的可能性，如果失败需要删掉它之前创建的文件夹，防止报错。</p><p>进入那个文件夹，输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><p>初始化好的文件夹就基本如下图所示：<br><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%B8%80%EF%BC%89-f5df35482bba/init_folder.PNG" alt="Hexo初始化后的文件夹"><br>有些文件可能发现没有，但之后都会有的。</p><p>其中_config.yml非常重要，基本所有关于网页的配置都会在这里。</p><p>最后输入三条黄金代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean //清除缓存</span><br><span class="line">hexo g //创建页面</span><br><span class="line">hexo s //本地启动网页</span><br></pre></td></tr></table></figure><p>之后直接访问 localhost:4000 就可以看见默认的网页模板了。 ctrl+c可以退出本地网页。<br><img src="/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E5%BC%95%E5%AF%BC%EF%BC%88%E4%B8%80%EF%BC%89-f5df35482bba/web_page.png" alt="本地网页"></p><p>(完)</p>]]></content>
      
      
      <categories>
          
          <category> Hexo模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> Blog </tag>
            
            <tag> 图文教程 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
